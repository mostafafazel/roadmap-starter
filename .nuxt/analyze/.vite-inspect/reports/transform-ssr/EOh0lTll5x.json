{
  "resolvedId": "/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@vue+compiler-core@3.4.21/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n* @vue/compiler-core v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@vue/shared');\nvar decode_js = require('entities/lib/decode.js');\nvar parser = require('@babel/parser');\nvar estreeWalker = require('estree-walker');\nvar sourceMapJs = require('source-map-js');\n\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(``);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(``);\nconst CREATE_COMMENT = Symbol(``);\nconst CREATE_TEXT = Symbol(``);\nconst CREATE_STATIC = Symbol(``);\nconst RESOLVE_COMPONENT = Symbol(``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(``);\nconst RESOLVE_FILTER = Symbol(``);\nconst WITH_DIRECTIVES = Symbol(``);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(``);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(``);\nconst NORMALIZE_STYLE = Symbol(``);\nconst NORMALIZE_PROPS = Symbol(``);\nconst GUARD_REACTIVE_PROPS = Symbol(``);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(``);\nconst SET_BLOCK_TRACKING = Symbol(``);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_HOIST\": 2,\n  \"2\": \"CAN_HOIST\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ; else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc)\n    err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare)\n        continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id)\n        continue;\n      onIdent(stmt.id);\n    } else if (stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\") {\n      const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n      if (variable && variable.type === \"VariableDeclaration\") {\n        for (const decl of variable.declarations) {\n          for (const id of extractIdentifiers(decl.id)) {\n            onIdent(id);\n          }\n        }\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element)\n          extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    case \"PrivateName\":\n      return false;\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    case \"LabeledStatement\":\n      return false;\n    case \"CatchClause\":\n      return false;\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    case \"ExportSpecifier\":\n      if (grandparent == null ? void 0 : grandparent.source) {\n        return false;\n      }\n      return parent.local === node;\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    case \"ImportAttribute\":\n      return false;\n    case \"JSXAttribute\":\n      return false;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    case \"MetaProperty\":\n      return false;\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst isMemberExpressionBrowser = (path) => {\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (path, context) => {\n  try {\n    let ret = parser.parseExpression(path, {\n      plugins: context.expressionPlugins\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly)\n        continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    var _a;\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (((_a = stack[0]) == null ? void 0 : _a.tag) === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [\"prop\"] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end)\n      return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      currentProp.modifiers.push(mod);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.indexOf(\"sync\")) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch)\n    return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if ((lastNode == null ? void 0 : lastNode.type) === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, end + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0)\n    i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  var _a;\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || ((_a = currentOptions.isBuiltInComponent) == null ? void 0 : _a.call(currentOptions, tag)) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (// :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      currentOptions,\n      p.loc\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  var _a, _b;\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = (_a = nodes[i - 1]) == null ? void 0 : _a.type;\n          const next = (_b = nodes[i + 1]) == null ? void 0 : _b.type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options == null ? void 0 : options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction hoistStatic(root, context) {\n  walk(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, context, doNotHoistNode = false) {\n  const { children } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1 + (``);\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          context,\n          child.branches[i2].children.length === 1\n        );\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n    const hoisted = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    );\n    if (context.hmr) {\n      hoisted.content = `[...${hoisted.content}]`;\n    }\n    node.codegenNode.children = hoisted;\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\n        return 0;\n      }\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : void 0;\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic: hoistStatic2 = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic: hoistStatic2,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    cached: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp))\n        exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    shared.PatchFlagNames[64];\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag + (``),\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child))\n      continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit)\n            exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name))\n      _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      // @ts-expect-error it is possible to be null\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated)\n    options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1 /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID);\n    ast.helpers.add(POP_SCOPE_ID);\n  }\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1 /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline, helper, scopeId, mode } = context;\n  const genScopeId = scopeId != null && mode !== \"function\";\n  newline();\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    );\n    newline();\n  }\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\n      push(\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\n      );\n      genNode(exp, context);\n      if (needScopeIdWrapper) {\n        push(`)`);\n      }\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure)\n    push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null)\n      break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines)\n        indent();\n      genNode(e, context);\n      if (multilines)\n        deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  const bailConstant = constantBailRE.test(rawExp);\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parse(source, {\n        plugins: context.expressionPlugins\n      }).program;\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = bailConstant ? 0 : 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit)\n          onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      shared.PatchFlagNames[64];\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + (``),\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`);\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag + (``),\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64 + (``),\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          );\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit)\n      onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized)\n    return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i])\n      break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\n        children.splice(i, 1);\n        i--;\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (``),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches))\n          return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children))\n          return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (patchFlag !== 0) {\n      {\n        vnodePatchFlag = String(patchFlag);\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, \"is\");\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr)\n      context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg)\n      mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression(\"ref_for\", true),\n              createSimpleExpression(\"true\")\n            )\n          );\n        }\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression(\"ref_for\", true),\n            createSimpleExpression(\"true\")\n          )\n        );\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.includes(\"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp)\n    dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1)\n      propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    const propName = shared.camelize(arg.content);\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc);\n    {\n      exp = dir.exp = processExpression(exp, context);\n    }\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.includes(\"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes(\"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.includes(\"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (``)\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\")\n        continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92)\n        inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92)\n        inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92)\n        inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92)\n        inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        case 39:\n          inSingle = true;\n          break;\n        case 96:\n          inTemplateString = true;\n          break;\n        case 40:\n          paren++;\n          break;\n        case 41:\n          paren--;\n          break;\n        case 91:\n          square++;\n          break;\n        case 93:\n          square--;\n          break;\n        case 123:\n          curly++;\n          break;\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \")\n            break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n",
      "start": 1727610130593,
      "end": 1727610130621,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610130621,
      "end": 1727610130621,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727610130622,
      "end": 1727610130622,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610130622,
      "end": 1727610130622,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727610130622,
      "end": 1727610130622,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "\"use strict\";\n/**\n* @vue/compiler-core v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shared = require(\"@vue/shared\");\nvar decode_js = require(\"entities/lib/decode.js\");\nvar parser = require(\"@babel/parser\");\nvar estreeWalker = require(\"estree-walker\");\nvar sourceMapJs = require(\"source-map-js\");\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(``);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(``);\nconst CREATE_COMMENT = Symbol(``);\nconst CREATE_TEXT = Symbol(``);\nconst CREATE_STATIC = Symbol(``);\nconst RESOLVE_COMPONENT = Symbol(``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(``);\nconst RESOLVE_FILTER = Symbol(``);\nconst WITH_DIRECTIVES = Symbol(``);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(``);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(``);\nconst NORMALIZE_STYLE = Symbol(``);\nconst NORMALIZE_PROPS = Symbol(``);\nconst GUARD_REACTIVE_PROPS = Symbol(``);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(``);\nconst SET_BLOCK_TRACKING = Symbol(``);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_HOIST\": 2,\n  \"2\": \"CAN_HOIST\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent2));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent: isComponent2,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent2) {\n  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent2) {\n  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack2, cbs) {\n    this.stack = stack2;\n    this.cbs = cbs;\n    this.state = 1;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.entityStart = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.inXML = false;\n    this.inVPre = false;\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c))\n      ;\n    else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9)\n      ;\n    else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc)\n    err.loc = loc;\n  context.onWarn(err);\n}\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``);\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare)\n        continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id)\n        continue;\n      onIdent(stmt.id);\n    } else if (stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\") {\n      const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n      if (variable && variable.type === \"VariableDeclaration\") {\n        for (const decl of variable.declarations) {\n          for (const id of extractIdentifiers(decl.id)) {\n            onIdent(id);\n          }\n        }\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element)\n          extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    case \"PrivateName\":\n      return false;\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    case \"LabeledStatement\":\n      return false;\n    case \"CatchClause\":\n      return false;\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    case \"ExportSpecifier\":\n      if (grandparent == null ? void 0 : grandparent.source) {\n        return false;\n      }\n      return parent.local === node;\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    case \"ImportAttribute\":\n      return false;\n    case \"JSXAttribute\":\n      return false;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    case \"MetaProperty\":\n      return false;\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst isMemberExpressionBrowser = (path) => {\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (path, context) => {\n  try {\n    let ret = parser.parseExpression(path, {\n      plugins: context.expressionPlugins\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly)\n        continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    var _a;\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (((_a = stack[0]) == null ? void 0 : _a.tag) === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [\"prop\"] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end)\n      return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      currentProp.modifiers.push(mod);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.indexOf(\"sync\")) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch)\n    return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 : 0\n      /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if ((lastNode == null ? void 0 : lastNode.type) === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, end + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0)\n    i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  var _a;\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || ((_a = currentOptions.isBuiltInComponent) == null ? void 0 : _a.call(currentOptions, tag)) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (\n      // :is on plain element - only treat as component in compat mode\n      p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        currentOptions,\n        p.loc\n      )\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  var _a, _b;\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = (_a = nodes[i - 1]) == null ? void 0 : _a.type;\n          const next = (_b = nodes[i + 1]) == null ? void 0 : _b.type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options == null ? void 0 : options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\nfunction hoistStatic(root, context) {\n  walk(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, context, doNotHoistNode = false) {\n  const { children } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = `-1`;\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    if (child.type === 1) {\n      const isComponent2 = child.tagType === 1;\n      if (isComponent2) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (isComponent2) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          context,\n          child.branches[i2].children.length === 1\n        );\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n    const hoisted = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    );\n    if (context.hmr) {\n      hoisted.content = `[...${hoisted.content}]`;\n    }\n    node.codegenNode.children = hoisted;\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\n        return 0;\n      }\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : void 0;\n}\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic: hoistStatic2 = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic: hoistStatic2,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    cached: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp))\n        exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    shared.PatchFlagNames[64];\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag + ``,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else\n    ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child))\n      continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit)\n            exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\n      \"\\n\" + `  `.repeat(n),\n      0\n      /* Start */\n    );\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name))\n      _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      // @ts-expect-error it is possible to be null\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated)\n    options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1\n        /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(\n      `\n`,\n      0\n      /* Start */\n    );\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1\n        /* End */\n      );\n    } else {\n      push(\n        `const _Vue = ${VueBinding}\n`,\n        -1\n        /* End */\n      );\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(\n          `const { ${staticHelpers} } = _Vue\n`,\n          -1\n          /* End */\n        );\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1\n      /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID);\n    ast.helpers.add(POP_SCOPE_ID);\n  }\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1\n        /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1\n        /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1\n        /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1\n      /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline, helper, scopeId, mode } = context;\n  const genScopeId = scopeId != null && mode !== \"function\";\n  newline();\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    );\n    newline();\n  }\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\n      push(\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\n      );\n      genNode(exp, context);\n      if (needScopeIdWrapper) {\n        push(`)`);\n      }\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(\n        node,\n        -3\n        /* Unknown */\n      );\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(\n      node,\n      -3\n      /* Unknown */\n    );\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure)\n    push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(\n        child,\n        -3\n        /* Unknown */\n      );\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2, node);\n  } else {\n    push(`[${node.content}]`, -3, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent: isComponent2\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);\n  push(helper(callHelper) + `(`, -2, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null)\n      break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(\n        e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"),\n        -3\n        /* Unknown */\n      );\n    } else {\n      push(\"${\");\n      if (multilines)\n        indent();\n      genNode(e, context);\n      if (multilines)\n        deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  const bailConstant = constantBailRE.test(rawExp);\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parse(source, {\n        plugins: context.expressionPlugins\n      }).program;\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced2, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced2 && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = bailConstant ? 0 : 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit)\n          onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      shared.PatchFlagNames[64];\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + ``,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`);\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag + ``,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            `64`,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          );\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit)\n      onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized)\n    return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i])\n      break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\n        children.splice(i, 1);\n        i--;\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + ``,\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches))\n          return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children))\n          return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent2 = node.tagType === 1;\n    let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent2,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent2 && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (patchFlag !== 0) {\n      {\n        vnodePatchFlag = String(patchFlag);\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent2,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, \"is\");\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr)\n      context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg)\n      mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent2 || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent2 && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression(\"ref_for\", true),\n              createSimpleExpression(\"true\")\n            )\n          );\n        }\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent2) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression(\"ref_for\", true),\n            createSimpleExpression(\"true\")\n          )\n        );\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent2 ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.includes(\"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent2) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent2) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp)\n    dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1)\n      propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    const propName = shared.camelize(arg.content);\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc);\n    {\n      exp = dir.exp = processExpression(exp, context);\n    }\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.includes(\"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes(\"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.includes(\"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              `1`\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\")\n        continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92)\n        inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92)\n        inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92)\n        inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92)\n        inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        case 39:\n          inSingle = true;\n          break;\n        case 96:\n          inTemplateString = true;\n          break;\n        case 40:\n          paren++;\n          break;\n        case 41:\n          paren--;\n          break;\n        case 91:\n          square++;\n          break;\n        case 93:\n          square--;\n          break;\n        case 123:\n          curly++;\n          break;\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \")\n            break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]);\n      }\n    };\n  }\n};\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter],\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\nconst noopDirectiveTransform = () => ({ props: [] });\nexports.generateCodeFrame = shared.generateCodeFrame;\nexports.BASE_TRANSITION = BASE_TRANSITION;\nexports.BindingTypes = BindingTypes;\nexports.CAMELIZE = CAMELIZE;\nexports.CAPITALIZE = CAPITALIZE;\nexports.CREATE_BLOCK = CREATE_BLOCK;\nexports.CREATE_COMMENT = CREATE_COMMENT;\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nexports.CREATE_SLOTS = CREATE_SLOTS;\nexports.CREATE_STATIC = CREATE_STATIC;\nexports.CREATE_TEXT = CREATE_TEXT;\nexports.CREATE_VNODE = CREATE_VNODE;\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\nexports.ConstantTypes = ConstantTypes;\nexports.ElementTypes = ElementTypes;\nexports.ErrorCodes = ErrorCodes;\nexports.FRAGMENT = FRAGMENT;\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\nexports.IS_REF = IS_REF;\nexports.KEEP_ALIVE = KEEP_ALIVE;\nexports.MERGE_PROPS = MERGE_PROPS;\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\nexports.Namespaces = Namespaces;\nexports.NodeTypes = NodeTypes;\nexports.OPEN_BLOCK = OPEN_BLOCK;\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nexports.RENDER_LIST = RENDER_LIST;\nexports.RENDER_SLOT = RENDER_SLOT;\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nexports.SUSPENSE = SUSPENSE;\nexports.TELEPORT = TELEPORT;\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nexports.TO_HANDLERS = TO_HANDLERS;\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\nexports.UNREF = UNREF;\nexports.WITH_CTX = WITH_CTX;\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\nexports.WITH_MEMO = WITH_MEMO;\nexports.advancePositionWithClone = advancePositionWithClone;\nexports.advancePositionWithMutation = advancePositionWithMutation;\nexports.assert = assert;\nexports.baseCompile = baseCompile;\nexports.baseParse = baseParse;\nexports.buildDirectiveArgs = buildDirectiveArgs;\nexports.buildProps = buildProps;\nexports.buildSlots = buildSlots;\nexports.checkCompatEnabled = checkCompatEnabled;\nexports.convertToBlock = convertToBlock;\nexports.createArrayExpression = createArrayExpression;\nexports.createAssignmentExpression = createAssignmentExpression;\nexports.createBlockStatement = createBlockStatement;\nexports.createCacheExpression = createCacheExpression;\nexports.createCallExpression = createCallExpression;\nexports.createCompilerError = createCompilerError;\nexports.createCompoundExpression = createCompoundExpression;\nexports.createConditionalExpression = createConditionalExpression;\nexports.createForLoopParams = createForLoopParams;\nexports.createFunctionExpression = createFunctionExpression;\nexports.createIfStatement = createIfStatement;\nexports.createInterpolation = createInterpolation;\nexports.createObjectExpression = createObjectExpression;\nexports.createObjectProperty = createObjectProperty;\nexports.createReturnStatement = createReturnStatement;\nexports.createRoot = createRoot;\nexports.createSequenceExpression = createSequenceExpression;\nexports.createSimpleExpression = createSimpleExpression;\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nexports.createTemplateLiteral = createTemplateLiteral;\nexports.createTransformContext = createTransformContext;\nexports.createVNodeCall = createVNodeCall;\nexports.errorMessages = errorMessages;\nexports.extractIdentifiers = extractIdentifiers;\nexports.findDir = findDir;\nexports.findProp = findProp;\nexports.forAliasRE = forAliasRE;\nexports.generate = generate;\nexports.getBaseTransformPreset = getBaseTransformPreset;\nexports.getConstantType = getConstantType;\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\nexports.getVNodeHelper = getVNodeHelper;\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\nexports.hasScopeRef = hasScopeRef;\nexports.helperNameMap = helperNameMap;\nexports.injectProp = injectProp;\nexports.isCoreComponent = isCoreComponent;\nexports.isFunctionType = isFunctionType;\nexports.isInDestructureAssignment = isInDestructureAssignment;\nexports.isInNewExpression = isInNewExpression;\nexports.isMemberExpression = isMemberExpression;\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\nexports.isMemberExpressionNode = isMemberExpressionNode;\nexports.isReferencedIdentifier = isReferencedIdentifier;\nexports.isSimpleIdentifier = isSimpleIdentifier;\nexports.isSlotOutlet = isSlotOutlet;\nexports.isStaticArgOf = isStaticArgOf;\nexports.isStaticExp = isStaticExp;\nexports.isStaticProperty = isStaticProperty;\nexports.isStaticPropertyKey = isStaticPropertyKey;\nexports.isTemplateNode = isTemplateNode;\nexports.isText = isText$1;\nexports.isVSlot = isVSlot;\nexports.locStub = locStub;\nexports.noopDirectiveTransform = noopDirectiveTransform;\nexports.processExpression = processExpression;\nexports.processFor = processFor;\nexports.processIf = processIf;\nexports.processSlotOutlet = processSlotOutlet;\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\nexports.resolveComponentType = resolveComponentType;\nexports.stringifyExpression = stringifyExpression;\nexports.toValidAssetId = toValidAssetId;\nexports.trackSlotScopes = trackSlotScopes;\nexports.trackVForSlotScopes = trackVForSlotScopes;\nexports.transform = transform;\nexports.transformBind = transformBind;\nexports.transformElement = transformElement;\nexports.transformExpression = transformExpression;\nexports.transformModel = transformModel;\nexports.transformOn = transformOn;\nexports.traverseNode = traverseNode;\nexports.unwrapTSNode = unwrapTSNode;\nexports.walkBlockDeclarations = walkBlockDeclarations;\nexports.walkFunctionParams = walkFunctionParams;\nexports.walkIdentifiers = walkIdentifiers;\nexports.warnDeprecation = warnDeprecation;\n",
      "start": 1727610130622,
      "end": 1727610130917,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@vue+compiler-core@3.4.21/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js\"],\n  \"sourcesContent\": [\"/**\\n* @vue/compiler-core v3.4.21\\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\\n* @license MIT\\n**/\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', { value: true });\\n\\nvar shared = require('@vue/shared');\\nvar decode_js = require('entities/lib/decode.js');\\nvar parser = require('@babel/parser');\\nvar estreeWalker = require('estree-walker');\\nvar sourceMapJs = require('source-map-js');\\n\\nconst FRAGMENT = Symbol(``);\\nconst TELEPORT = Symbol(``);\\nconst SUSPENSE = Symbol(``);\\nconst KEEP_ALIVE = Symbol(``);\\nconst BASE_TRANSITION = Symbol(``);\\nconst OPEN_BLOCK = Symbol(``);\\nconst CREATE_BLOCK = Symbol(``);\\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\\nconst CREATE_VNODE = Symbol(``);\\nconst CREATE_ELEMENT_VNODE = Symbol(``);\\nconst CREATE_COMMENT = Symbol(``);\\nconst CREATE_TEXT = Symbol(``);\\nconst CREATE_STATIC = Symbol(``);\\nconst RESOLVE_COMPONENT = Symbol(``);\\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\\n  ``\\n);\\nconst RESOLVE_DIRECTIVE = Symbol(``);\\nconst RESOLVE_FILTER = Symbol(``);\\nconst WITH_DIRECTIVES = Symbol(``);\\nconst RENDER_LIST = Symbol(``);\\nconst RENDER_SLOT = Symbol(``);\\nconst CREATE_SLOTS = Symbol(``);\\nconst TO_DISPLAY_STRING = Symbol(``);\\nconst MERGE_PROPS = Symbol(``);\\nconst NORMALIZE_CLASS = Symbol(``);\\nconst NORMALIZE_STYLE = Symbol(``);\\nconst NORMALIZE_PROPS = Symbol(``);\\nconst GUARD_REACTIVE_PROPS = Symbol(``);\\nconst TO_HANDLERS = Symbol(``);\\nconst CAMELIZE = Symbol(``);\\nconst CAPITALIZE = Symbol(``);\\nconst TO_HANDLER_KEY = Symbol(``);\\nconst SET_BLOCK_TRACKING = Symbol(``);\\nconst PUSH_SCOPE_ID = Symbol(``);\\nconst POP_SCOPE_ID = Symbol(``);\\nconst WITH_CTX = Symbol(``);\\nconst UNREF = Symbol(``);\\nconst IS_REF = Symbol(``);\\nconst WITH_MEMO = Symbol(``);\\nconst IS_MEMO_SAME = Symbol(``);\\nconst helperNameMap = {\\n  [FRAGMENT]: `Fragment`,\\n  [TELEPORT]: `Teleport`,\\n  [SUSPENSE]: `Suspense`,\\n  [KEEP_ALIVE]: `KeepAlive`,\\n  [BASE_TRANSITION]: `BaseTransition`,\\n  [OPEN_BLOCK]: `openBlock`,\\n  [CREATE_BLOCK]: `createBlock`,\\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\\n  [CREATE_VNODE]: `createVNode`,\\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\\n  [CREATE_COMMENT]: `createCommentVNode`,\\n  [CREATE_TEXT]: `createTextVNode`,\\n  [CREATE_STATIC]: `createStaticVNode`,\\n  [RESOLVE_COMPONENT]: `resolveComponent`,\\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\\n  [RESOLVE_FILTER]: `resolveFilter`,\\n  [WITH_DIRECTIVES]: `withDirectives`,\\n  [RENDER_LIST]: `renderList`,\\n  [RENDER_SLOT]: `renderSlot`,\\n  [CREATE_SLOTS]: `createSlots`,\\n  [TO_DISPLAY_STRING]: `toDisplayString`,\\n  [MERGE_PROPS]: `mergeProps`,\\n  [NORMALIZE_CLASS]: `normalizeClass`,\\n  [NORMALIZE_STYLE]: `normalizeStyle`,\\n  [NORMALIZE_PROPS]: `normalizeProps`,\\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\\n  [TO_HANDLERS]: `toHandlers`,\\n  [CAMELIZE]: `camelize`,\\n  [CAPITALIZE]: `capitalize`,\\n  [TO_HANDLER_KEY]: `toHandlerKey`,\\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\\n  [PUSH_SCOPE_ID]: `pushScopeId`,\\n  [POP_SCOPE_ID]: `popScopeId`,\\n  [WITH_CTX]: `withCtx`,\\n  [UNREF]: `unref`,\\n  [IS_REF]: `isRef`,\\n  [WITH_MEMO]: `withMemo`,\\n  [IS_MEMO_SAME]: `isMemoSame`\\n};\\nfunction registerRuntimeHelpers(helpers) {\\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\\n    helperNameMap[s] = helpers[s];\\n  });\\n}\\n\\nconst Namespaces = {\\n  \\\"HTML\\\": 0,\\n  \\\"0\\\": \\\"HTML\\\",\\n  \\\"SVG\\\": 1,\\n  \\\"1\\\": \\\"SVG\\\",\\n  \\\"MATH_ML\\\": 2,\\n  \\\"2\\\": \\\"MATH_ML\\\"\\n};\\nconst NodeTypes = {\\n  \\\"ROOT\\\": 0,\\n  \\\"0\\\": \\\"ROOT\\\",\\n  \\\"ELEMENT\\\": 1,\\n  \\\"1\\\": \\\"ELEMENT\\\",\\n  \\\"TEXT\\\": 2,\\n  \\\"2\\\": \\\"TEXT\\\",\\n  \\\"COMMENT\\\": 3,\\n  \\\"3\\\": \\\"COMMENT\\\",\\n  \\\"SIMPLE_EXPRESSION\\\": 4,\\n  \\\"4\\\": \\\"SIMPLE_EXPRESSION\\\",\\n  \\\"INTERPOLATION\\\": 5,\\n  \\\"5\\\": \\\"INTERPOLATION\\\",\\n  \\\"ATTRIBUTE\\\": 6,\\n  \\\"6\\\": \\\"ATTRIBUTE\\\",\\n  \\\"DIRECTIVE\\\": 7,\\n  \\\"7\\\": \\\"DIRECTIVE\\\",\\n  \\\"COMPOUND_EXPRESSION\\\": 8,\\n  \\\"8\\\": \\\"COMPOUND_EXPRESSION\\\",\\n  \\\"IF\\\": 9,\\n  \\\"9\\\": \\\"IF\\\",\\n  \\\"IF_BRANCH\\\": 10,\\n  \\\"10\\\": \\\"IF_BRANCH\\\",\\n  \\\"FOR\\\": 11,\\n  \\\"11\\\": \\\"FOR\\\",\\n  \\\"TEXT_CALL\\\": 12,\\n  \\\"12\\\": \\\"TEXT_CALL\\\",\\n  \\\"VNODE_CALL\\\": 13,\\n  \\\"13\\\": \\\"VNODE_CALL\\\",\\n  \\\"JS_CALL_EXPRESSION\\\": 14,\\n  \\\"14\\\": \\\"JS_CALL_EXPRESSION\\\",\\n  \\\"JS_OBJECT_EXPRESSION\\\": 15,\\n  \\\"15\\\": \\\"JS_OBJECT_EXPRESSION\\\",\\n  \\\"JS_PROPERTY\\\": 16,\\n  \\\"16\\\": \\\"JS_PROPERTY\\\",\\n  \\\"JS_ARRAY_EXPRESSION\\\": 17,\\n  \\\"17\\\": \\\"JS_ARRAY_EXPRESSION\\\",\\n  \\\"JS_FUNCTION_EXPRESSION\\\": 18,\\n  \\\"18\\\": \\\"JS_FUNCTION_EXPRESSION\\\",\\n  \\\"JS_CONDITIONAL_EXPRESSION\\\": 19,\\n  \\\"19\\\": \\\"JS_CONDITIONAL_EXPRESSION\\\",\\n  \\\"JS_CACHE_EXPRESSION\\\": 20,\\n  \\\"20\\\": \\\"JS_CACHE_EXPRESSION\\\",\\n  \\\"JS_BLOCK_STATEMENT\\\": 21,\\n  \\\"21\\\": \\\"JS_BLOCK_STATEMENT\\\",\\n  \\\"JS_TEMPLATE_LITERAL\\\": 22,\\n  \\\"22\\\": \\\"JS_TEMPLATE_LITERAL\\\",\\n  \\\"JS_IF_STATEMENT\\\": 23,\\n  \\\"23\\\": \\\"JS_IF_STATEMENT\\\",\\n  \\\"JS_ASSIGNMENT_EXPRESSION\\\": 24,\\n  \\\"24\\\": \\\"JS_ASSIGNMENT_EXPRESSION\\\",\\n  \\\"JS_SEQUENCE_EXPRESSION\\\": 25,\\n  \\\"25\\\": \\\"JS_SEQUENCE_EXPRESSION\\\",\\n  \\\"JS_RETURN_STATEMENT\\\": 26,\\n  \\\"26\\\": \\\"JS_RETURN_STATEMENT\\\"\\n};\\nconst ElementTypes = {\\n  \\\"ELEMENT\\\": 0,\\n  \\\"0\\\": \\\"ELEMENT\\\",\\n  \\\"COMPONENT\\\": 1,\\n  \\\"1\\\": \\\"COMPONENT\\\",\\n  \\\"SLOT\\\": 2,\\n  \\\"2\\\": \\\"SLOT\\\",\\n  \\\"TEMPLATE\\\": 3,\\n  \\\"3\\\": \\\"TEMPLATE\\\"\\n};\\nconst ConstantTypes = {\\n  \\\"NOT_CONSTANT\\\": 0,\\n  \\\"0\\\": \\\"NOT_CONSTANT\\\",\\n  \\\"CAN_SKIP_PATCH\\\": 1,\\n  \\\"1\\\": \\\"CAN_SKIP_PATCH\\\",\\n  \\\"CAN_HOIST\\\": 2,\\n  \\\"2\\\": \\\"CAN_HOIST\\\",\\n  \\\"CAN_STRINGIFY\\\": 3,\\n  \\\"3\\\": \\\"CAN_STRINGIFY\\\"\\n};\\nconst locStub = {\\n  start: { line: 1, column: 1, offset: 0 },\\n  end: { line: 1, column: 1, offset: 0 },\\n  source: \\\"\\\"\\n};\\nfunction createRoot(children, source = \\\"\\\") {\\n  return {\\n    type: 0,\\n    source,\\n    children,\\n    helpers: /* @__PURE__ */ new Set(),\\n    components: [],\\n    directives: [],\\n    hoists: [],\\n    imports: [],\\n    cached: 0,\\n    temps: 0,\\n    codegenNode: void 0,\\n    loc: locStub\\n  };\\n}\\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\\n  if (context) {\\n    if (isBlock) {\\n      context.helper(OPEN_BLOCK);\\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\\n    } else {\\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\\n    }\\n    if (directives) {\\n      context.helper(WITH_DIRECTIVES);\\n    }\\n  }\\n  return {\\n    type: 13,\\n    tag,\\n    props,\\n    children,\\n    patchFlag,\\n    dynamicProps,\\n    directives,\\n    isBlock,\\n    disableTracking,\\n    isComponent,\\n    loc\\n  };\\n}\\nfunction createArrayExpression(elements, loc = locStub) {\\n  return {\\n    type: 17,\\n    loc,\\n    elements\\n  };\\n}\\nfunction createObjectExpression(properties, loc = locStub) {\\n  return {\\n    type: 15,\\n    loc,\\n    properties\\n  };\\n}\\nfunction createObjectProperty(key, value) {\\n  return {\\n    type: 16,\\n    loc: locStub,\\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\\n    value\\n  };\\n}\\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\\n  return {\\n    type: 4,\\n    loc,\\n    content,\\n    isStatic,\\n    constType: isStatic ? 3 : constType\\n  };\\n}\\nfunction createInterpolation(content, loc) {\\n  return {\\n    type: 5,\\n    loc,\\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\\n  };\\n}\\nfunction createCompoundExpression(children, loc = locStub) {\\n  return {\\n    type: 8,\\n    loc,\\n    children\\n  };\\n}\\nfunction createCallExpression(callee, args = [], loc = locStub) {\\n  return {\\n    type: 14,\\n    loc,\\n    callee,\\n    arguments: args\\n  };\\n}\\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\\n  return {\\n    type: 18,\\n    params,\\n    returns,\\n    newline,\\n    isSlot,\\n    loc\\n  };\\n}\\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\\n  return {\\n    type: 19,\\n    test,\\n    consequent,\\n    alternate,\\n    newline,\\n    loc: locStub\\n  };\\n}\\nfunction createCacheExpression(index, value, isVNode = false) {\\n  return {\\n    type: 20,\\n    index,\\n    value,\\n    isVNode,\\n    loc: locStub\\n  };\\n}\\nfunction createBlockStatement(body) {\\n  return {\\n    type: 21,\\n    body,\\n    loc: locStub\\n  };\\n}\\nfunction createTemplateLiteral(elements) {\\n  return {\\n    type: 22,\\n    elements,\\n    loc: locStub\\n  };\\n}\\nfunction createIfStatement(test, consequent, alternate) {\\n  return {\\n    type: 23,\\n    test,\\n    consequent,\\n    alternate,\\n    loc: locStub\\n  };\\n}\\nfunction createAssignmentExpression(left, right) {\\n  return {\\n    type: 24,\\n    left,\\n    right,\\n    loc: locStub\\n  };\\n}\\nfunction createSequenceExpression(expressions) {\\n  return {\\n    type: 25,\\n    expressions,\\n    loc: locStub\\n  };\\n}\\nfunction createReturnStatement(returns) {\\n  return {\\n    type: 26,\\n    returns,\\n    loc: locStub\\n  };\\n}\\nfunction getVNodeHelper(ssr, isComponent) {\\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\\n}\\nfunction getVNodeBlockHelper(ssr, isComponent) {\\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\\n}\\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\\n  if (!node.isBlock) {\\n    node.isBlock = true;\\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\\n    helper(OPEN_BLOCK);\\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\\n  }\\n}\\n\\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\\nfunction isTagStartChar(c) {\\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\\n}\\nfunction isWhitespace(c) {\\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\\n}\\nfunction isEndOfTagSection(c) {\\n  return c === 47 || c === 62 || isWhitespace(c);\\n}\\nfunction toCharCodes(str) {\\n  const ret = new Uint8Array(str.length);\\n  for (let i = 0; i < str.length; i++) {\\n    ret[i] = str.charCodeAt(i);\\n  }\\n  return ret;\\n}\\nconst Sequences = {\\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\\n  // CDATA[\\n  CdataEnd: new Uint8Array([93, 93, 62]),\\n  // ]]>\\n  CommentEnd: new Uint8Array([45, 45, 62]),\\n  // `-->`\\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\\n  // `<\\\\/script`\\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\\n  // `</style`\\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\\n  // `</title`\\n  TextareaEnd: new Uint8Array([\\n    60,\\n    47,\\n    116,\\n    101,\\n    120,\\n    116,\\n    97,\\n    114,\\n    101,\\n    97\\n  ])\\n  // `</textarea\\n};\\nclass Tokenizer {\\n  constructor(stack, cbs) {\\n    this.stack = stack;\\n    this.cbs = cbs;\\n    /** The current state the tokenizer is in. */\\n    this.state = 1;\\n    /** The read buffer. */\\n    this.buffer = \\\"\\\";\\n    /** The beginning of the section that is currently being read. */\\n    this.sectionStart = 0;\\n    /** The index within the buffer that we are currently looking at. */\\n    this.index = 0;\\n    /** The start of the last entity. */\\n    this.entityStart = 0;\\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\\n    this.baseState = 1;\\n    /** For special parsing behavior inside of script and style tags. */\\n    this.inRCDATA = false;\\n    /** For disabling RCDATA tags handling */\\n    this.inXML = false;\\n    /** For disabling interpolation parsing in v-pre */\\n    this.inVPre = false;\\n    /** Record newline positions for fast line / column calculation */\\n    this.newlines = [];\\n    this.mode = 0;\\n    this.delimiterOpen = defaultDelimitersOpen;\\n    this.delimiterClose = defaultDelimitersClose;\\n    this.delimiterIndex = -1;\\n    this.currentSequence = void 0;\\n    this.sequenceIndex = 0;\\n    {\\n      this.entityDecoder = new decode_js.EntityDecoder(\\n        decode_js.htmlDecodeTree,\\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\\n      );\\n    }\\n  }\\n  get inSFCRoot() {\\n    return this.mode === 2 && this.stack.length === 0;\\n  }\\n  reset() {\\n    this.state = 1;\\n    this.mode = 0;\\n    this.buffer = \\\"\\\";\\n    this.sectionStart = 0;\\n    this.index = 0;\\n    this.baseState = 1;\\n    this.inRCDATA = false;\\n    this.currentSequence = void 0;\\n    this.newlines.length = 0;\\n    this.delimiterOpen = defaultDelimitersOpen;\\n    this.delimiterClose = defaultDelimitersClose;\\n  }\\n  /**\\n   * Generate Position object with line / column information using recorded\\n   * newline positions. We know the index is always going to be an already\\n   * processed index, so all the newlines up to this index should have been\\n   * recorded.\\n   */\\n  getPos(index) {\\n    let line = 1;\\n    let column = index + 1;\\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\\n      const newlineIndex = this.newlines[i];\\n      if (index > newlineIndex) {\\n        line = i + 2;\\n        column = index - newlineIndex;\\n        break;\\n      }\\n    }\\n    return {\\n      column,\\n      line,\\n      offset: index\\n    };\\n  }\\n  peek() {\\n    return this.buffer.charCodeAt(this.index + 1);\\n  }\\n  stateText(c) {\\n    if (c === 60) {\\n      if (this.index > this.sectionStart) {\\n        this.cbs.ontext(this.sectionStart, this.index);\\n      }\\n      this.state = 5;\\n      this.sectionStart = this.index;\\n    } else if (c === 38) {\\n      this.startEntity();\\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\\n      this.state = 2;\\n      this.delimiterIndex = 0;\\n      this.stateInterpolationOpen(c);\\n    }\\n  }\\n  stateInterpolationOpen(c) {\\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\\n        const start = this.index + 1 - this.delimiterOpen.length;\\n        if (start > this.sectionStart) {\\n          this.cbs.ontext(this.sectionStart, start);\\n        }\\n        this.state = 3;\\n        this.sectionStart = start;\\n      } else {\\n        this.delimiterIndex++;\\n      }\\n    } else if (this.inRCDATA) {\\n      this.state = 32;\\n      this.stateInRCDATA(c);\\n    } else {\\n      this.state = 1;\\n      this.stateText(c);\\n    }\\n  }\\n  stateInterpolation(c) {\\n    if (c === this.delimiterClose[0]) {\\n      this.state = 4;\\n      this.delimiterIndex = 0;\\n      this.stateInterpolationClose(c);\\n    }\\n  }\\n  stateInterpolationClose(c) {\\n    if (c === this.delimiterClose[this.delimiterIndex]) {\\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\\n        if (this.inRCDATA) {\\n          this.state = 32;\\n        } else {\\n          this.state = 1;\\n        }\\n        this.sectionStart = this.index + 1;\\n      } else {\\n        this.delimiterIndex++;\\n      }\\n    } else {\\n      this.state = 3;\\n      this.stateInterpolation(c);\\n    }\\n  }\\n  stateSpecialStartSequence(c) {\\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\\n    const isMatch = isEnd ? (\\n      // If we are at the end of the sequence, make sure the tag name has ended\\n      isEndOfTagSection(c)\\n    ) : (\\n      // Otherwise, do a case-insensitive comparison\\n      (c | 32) === this.currentSequence[this.sequenceIndex]\\n    );\\n    if (!isMatch) {\\n      this.inRCDATA = false;\\n    } else if (!isEnd) {\\n      this.sequenceIndex++;\\n      return;\\n    }\\n    this.sequenceIndex = 0;\\n    this.state = 6;\\n    this.stateInTagName(c);\\n  }\\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\\n  stateInRCDATA(c) {\\n    if (this.sequenceIndex === this.currentSequence.length) {\\n      if (c === 62 || isWhitespace(c)) {\\n        const endOfText = this.index - this.currentSequence.length;\\n        if (this.sectionStart < endOfText) {\\n          const actualIndex = this.index;\\n          this.index = endOfText;\\n          this.cbs.ontext(this.sectionStart, endOfText);\\n          this.index = actualIndex;\\n        }\\n        this.sectionStart = endOfText + 2;\\n        this.stateInClosingTagName(c);\\n        this.inRCDATA = false;\\n        return;\\n      }\\n      this.sequenceIndex = 0;\\n    }\\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\\n      this.sequenceIndex += 1;\\n    } else if (this.sequenceIndex === 0) {\\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\\n        if (c === 38) {\\n          this.startEntity();\\n        } else if (c === this.delimiterOpen[0]) {\\n          this.state = 2;\\n          this.delimiterIndex = 0;\\n          this.stateInterpolationOpen(c);\\n        }\\n      } else if (this.fastForwardTo(60)) {\\n        this.sequenceIndex = 1;\\n      }\\n    } else {\\n      this.sequenceIndex = Number(c === 60);\\n    }\\n  }\\n  stateCDATASequence(c) {\\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\\n        this.state = 28;\\n        this.currentSequence = Sequences.CdataEnd;\\n        this.sequenceIndex = 0;\\n        this.sectionStart = this.index + 1;\\n      }\\n    } else {\\n      this.sequenceIndex = 0;\\n      this.state = 23;\\n      this.stateInDeclaration(c);\\n    }\\n  }\\n  /**\\n   * When we wait for one specific character, we can speed things up\\n   * by skipping through the buffer until we find it.\\n   *\\n   * @returns Whether the character was found.\\n   */\\n  fastForwardTo(c) {\\n    while (++this.index < this.buffer.length) {\\n      const cc = this.buffer.charCodeAt(this.index);\\n      if (cc === 10) {\\n        this.newlines.push(this.index);\\n      }\\n      if (cc === c) {\\n        return true;\\n      }\\n    }\\n    this.index = this.buffer.length - 1;\\n    return false;\\n  }\\n  /**\\n   * Comments and CDATA end with `-->` and `]]>`.\\n   *\\n   * Their common qualities are:\\n   * - Their end sequences have a distinct character they start with.\\n   * - That character is then repeated, so we have to check multiple repeats.\\n   * - All characters but the start character of the sequence can be skipped.\\n   */\\n  stateInCommentLike(c) {\\n    if (c === this.currentSequence[this.sequenceIndex]) {\\n      if (++this.sequenceIndex === this.currentSequence.length) {\\n        if (this.currentSequence === Sequences.CdataEnd) {\\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\\n        } else {\\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\\n        }\\n        this.sequenceIndex = 0;\\n        this.sectionStart = this.index + 1;\\n        this.state = 1;\\n      }\\n    } else if (this.sequenceIndex === 0) {\\n      if (this.fastForwardTo(this.currentSequence[0])) {\\n        this.sequenceIndex = 1;\\n      }\\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\\n      this.sequenceIndex = 0;\\n    }\\n  }\\n  startSpecial(sequence, offset) {\\n    this.enterRCDATA(sequence, offset);\\n    this.state = 31;\\n  }\\n  enterRCDATA(sequence, offset) {\\n    this.inRCDATA = true;\\n    this.currentSequence = sequence;\\n    this.sequenceIndex = offset;\\n  }\\n  stateBeforeTagName(c) {\\n    if (c === 33) {\\n      this.state = 22;\\n      this.sectionStart = this.index + 1;\\n    } else if (c === 63) {\\n      this.state = 24;\\n      this.sectionStart = this.index + 1;\\n    } else if (isTagStartChar(c)) {\\n      this.sectionStart = this.index;\\n      if (this.mode === 0) {\\n        this.state = 6;\\n      } else if (this.inSFCRoot) {\\n        this.state = 34;\\n      } else if (!this.inXML) {\\n        if (c === 116) {\\n          this.state = 30;\\n        } else {\\n          this.state = c === 115 ? 29 : 6;\\n        }\\n      } else {\\n        this.state = 6;\\n      }\\n    } else if (c === 47) {\\n      this.state = 8;\\n    } else {\\n      this.state = 1;\\n      this.stateText(c);\\n    }\\n  }\\n  stateInTagName(c) {\\n    if (isEndOfTagSection(c)) {\\n      this.handleTagName(c);\\n    }\\n  }\\n  stateInSFCRootTagName(c) {\\n    if (isEndOfTagSection(c)) {\\n      const tag = this.buffer.slice(this.sectionStart, this.index);\\n      if (tag !== \\\"template\\\") {\\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\\n      }\\n      this.handleTagName(c);\\n    }\\n  }\\n  handleTagName(c) {\\n    this.cbs.onopentagname(this.sectionStart, this.index);\\n    this.sectionStart = -1;\\n    this.state = 11;\\n    this.stateBeforeAttrName(c);\\n  }\\n  stateBeforeClosingTagName(c) {\\n    if (isWhitespace(c)) ; else if (c === 62) {\\n      {\\n        this.cbs.onerr(14, this.index);\\n      }\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n    } else {\\n      this.state = isTagStartChar(c) ? 9 : 27;\\n      this.sectionStart = this.index;\\n    }\\n  }\\n  stateInClosingTagName(c) {\\n    if (c === 62 || isWhitespace(c)) {\\n      this.cbs.onclosetag(this.sectionStart, this.index);\\n      this.sectionStart = -1;\\n      this.state = 10;\\n      this.stateAfterClosingTagName(c);\\n    }\\n  }\\n  stateAfterClosingTagName(c) {\\n    if (c === 62) {\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateBeforeAttrName(c) {\\n    if (c === 62) {\\n      this.cbs.onopentagend(this.index);\\n      if (this.inRCDATA) {\\n        this.state = 32;\\n      } else {\\n        this.state = 1;\\n      }\\n      this.sectionStart = this.index + 1;\\n    } else if (c === 47) {\\n      this.state = 7;\\n      if (this.peek() !== 62) {\\n        this.cbs.onerr(22, this.index);\\n      }\\n    } else if (c === 60 && this.peek() === 47) {\\n      this.cbs.onopentagend(this.index);\\n      this.state = 5;\\n      this.sectionStart = this.index;\\n    } else if (!isWhitespace(c)) {\\n      if (c === 61) {\\n        this.cbs.onerr(\\n          19,\\n          this.index\\n        );\\n      }\\n      this.handleAttrStart(c);\\n    }\\n  }\\n  handleAttrStart(c) {\\n    if (c === 118 && this.peek() === 45) {\\n      this.state = 13;\\n      this.sectionStart = this.index;\\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\\n      this.cbs.ondirname(this.index, this.index + 1);\\n      this.state = 14;\\n      this.sectionStart = this.index + 1;\\n    } else {\\n      this.state = 12;\\n      this.sectionStart = this.index;\\n    }\\n  }\\n  stateInSelfClosingTag(c) {\\n    if (c === 62) {\\n      this.cbs.onselfclosingtag(this.index);\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n      this.inRCDATA = false;\\n    } else if (!isWhitespace(c)) {\\n      this.state = 11;\\n      this.stateBeforeAttrName(c);\\n    }\\n  }\\n  stateInAttrName(c) {\\n    if (c === 61 || isEndOfTagSection(c)) {\\n      this.cbs.onattribname(this.sectionStart, this.index);\\n      this.handleAttrNameEnd(c);\\n    } else if (c === 34 || c === 39 || c === 60) {\\n      this.cbs.onerr(\\n        17,\\n        this.index\\n      );\\n    }\\n  }\\n  stateInDirName(c) {\\n    if (c === 61 || isEndOfTagSection(c)) {\\n      this.cbs.ondirname(this.sectionStart, this.index);\\n      this.handleAttrNameEnd(c);\\n    } else if (c === 58) {\\n      this.cbs.ondirname(this.sectionStart, this.index);\\n      this.state = 14;\\n      this.sectionStart = this.index + 1;\\n    } else if (c === 46) {\\n      this.cbs.ondirname(this.sectionStart, this.index);\\n      this.state = 16;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateInDirArg(c) {\\n    if (c === 61 || isEndOfTagSection(c)) {\\n      this.cbs.ondirarg(this.sectionStart, this.index);\\n      this.handleAttrNameEnd(c);\\n    } else if (c === 91) {\\n      this.state = 15;\\n    } else if (c === 46) {\\n      this.cbs.ondirarg(this.sectionStart, this.index);\\n      this.state = 16;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateInDynamicDirArg(c) {\\n    if (c === 93) {\\n      this.state = 14;\\n    } else if (c === 61 || isEndOfTagSection(c)) {\\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\\n      this.handleAttrNameEnd(c);\\n      {\\n        this.cbs.onerr(\\n          27,\\n          this.index\\n        );\\n      }\\n    }\\n  }\\n  stateInDirModifier(c) {\\n    if (c === 61 || isEndOfTagSection(c)) {\\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\\n      this.handleAttrNameEnd(c);\\n    } else if (c === 46) {\\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  handleAttrNameEnd(c) {\\n    this.sectionStart = this.index;\\n    this.state = 17;\\n    this.cbs.onattribnameend(this.index);\\n    this.stateAfterAttrName(c);\\n  }\\n  stateAfterAttrName(c) {\\n    if (c === 61) {\\n      this.state = 18;\\n    } else if (c === 47 || c === 62) {\\n      this.cbs.onattribend(0, this.sectionStart);\\n      this.sectionStart = -1;\\n      this.state = 11;\\n      this.stateBeforeAttrName(c);\\n    } else if (!isWhitespace(c)) {\\n      this.cbs.onattribend(0, this.sectionStart);\\n      this.handleAttrStart(c);\\n    }\\n  }\\n  stateBeforeAttrValue(c) {\\n    if (c === 34) {\\n      this.state = 19;\\n      this.sectionStart = this.index + 1;\\n    } else if (c === 39) {\\n      this.state = 20;\\n      this.sectionStart = this.index + 1;\\n    } else if (!isWhitespace(c)) {\\n      this.sectionStart = this.index;\\n      this.state = 21;\\n      this.stateInAttrValueNoQuotes(c);\\n    }\\n  }\\n  handleInAttrValue(c, quote) {\\n    if (c === quote || false) {\\n      this.cbs.onattribdata(this.sectionStart, this.index);\\n      this.sectionStart = -1;\\n      this.cbs.onattribend(\\n        quote === 34 ? 3 : 2,\\n        this.index + 1\\n      );\\n      this.state = 11;\\n    } else if (c === 38) {\\n      this.startEntity();\\n    }\\n  }\\n  stateInAttrValueDoubleQuotes(c) {\\n    this.handleInAttrValue(c, 34);\\n  }\\n  stateInAttrValueSingleQuotes(c) {\\n    this.handleInAttrValue(c, 39);\\n  }\\n  stateInAttrValueNoQuotes(c) {\\n    if (isWhitespace(c) || c === 62) {\\n      this.cbs.onattribdata(this.sectionStart, this.index);\\n      this.sectionStart = -1;\\n      this.cbs.onattribend(1, this.index);\\n      this.state = 11;\\n      this.stateBeforeAttrName(c);\\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\\n      this.cbs.onerr(\\n        18,\\n        this.index\\n      );\\n    } else if (c === 38) {\\n      this.startEntity();\\n    }\\n  }\\n  stateBeforeDeclaration(c) {\\n    if (c === 91) {\\n      this.state = 26;\\n      this.sequenceIndex = 0;\\n    } else {\\n      this.state = c === 45 ? 25 : 23;\\n    }\\n  }\\n  stateInDeclaration(c) {\\n    if (c === 62 || this.fastForwardTo(62)) {\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateInProcessingInstruction(c) {\\n    if (c === 62 || this.fastForwardTo(62)) {\\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateBeforeComment(c) {\\n    if (c === 45) {\\n      this.state = 28;\\n      this.currentSequence = Sequences.CommentEnd;\\n      this.sequenceIndex = 2;\\n      this.sectionStart = this.index + 1;\\n    } else {\\n      this.state = 23;\\n    }\\n  }\\n  stateInSpecialComment(c) {\\n    if (c === 62 || this.fastForwardTo(62)) {\\n      this.cbs.oncomment(this.sectionStart, this.index);\\n      this.state = 1;\\n      this.sectionStart = this.index + 1;\\n    }\\n  }\\n  stateBeforeSpecialS(c) {\\n    if (c === Sequences.ScriptEnd[3]) {\\n      this.startSpecial(Sequences.ScriptEnd, 4);\\n    } else if (c === Sequences.StyleEnd[3]) {\\n      this.startSpecial(Sequences.StyleEnd, 4);\\n    } else {\\n      this.state = 6;\\n      this.stateInTagName(c);\\n    }\\n  }\\n  stateBeforeSpecialT(c) {\\n    if (c === Sequences.TitleEnd[3]) {\\n      this.startSpecial(Sequences.TitleEnd, 4);\\n    } else if (c === Sequences.TextareaEnd[3]) {\\n      this.startSpecial(Sequences.TextareaEnd, 4);\\n    } else {\\n      this.state = 6;\\n      this.stateInTagName(c);\\n    }\\n  }\\n  startEntity() {\\n    {\\n      this.baseState = this.state;\\n      this.state = 33;\\n      this.entityStart = this.index;\\n      this.entityDecoder.startEntity(\\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\\n      );\\n    }\\n  }\\n  stateInEntity() {\\n    {\\n      const length = this.entityDecoder.write(this.buffer, this.index);\\n      if (length >= 0) {\\n        this.state = this.baseState;\\n        if (length === 0) {\\n          this.index = this.entityStart;\\n        }\\n      } else {\\n        this.index = this.buffer.length - 1;\\n      }\\n    }\\n  }\\n  /**\\n   * Iterates through the buffer, calling the function corresponding to the current state.\\n   *\\n   * States that are more likely to be hit are higher up, as a performance improvement.\\n   */\\n  parse(input) {\\n    this.buffer = input;\\n    while (this.index < this.buffer.length) {\\n      const c = this.buffer.charCodeAt(this.index);\\n      if (c === 10) {\\n        this.newlines.push(this.index);\\n      }\\n      switch (this.state) {\\n        case 1: {\\n          this.stateText(c);\\n          break;\\n        }\\n        case 2: {\\n          this.stateInterpolationOpen(c);\\n          break;\\n        }\\n        case 3: {\\n          this.stateInterpolation(c);\\n          break;\\n        }\\n        case 4: {\\n          this.stateInterpolationClose(c);\\n          break;\\n        }\\n        case 31: {\\n          this.stateSpecialStartSequence(c);\\n          break;\\n        }\\n        case 32: {\\n          this.stateInRCDATA(c);\\n          break;\\n        }\\n        case 26: {\\n          this.stateCDATASequence(c);\\n          break;\\n        }\\n        case 19: {\\n          this.stateInAttrValueDoubleQuotes(c);\\n          break;\\n        }\\n        case 12: {\\n          this.stateInAttrName(c);\\n          break;\\n        }\\n        case 13: {\\n          this.stateInDirName(c);\\n          break;\\n        }\\n        case 14: {\\n          this.stateInDirArg(c);\\n          break;\\n        }\\n        case 15: {\\n          this.stateInDynamicDirArg(c);\\n          break;\\n        }\\n        case 16: {\\n          this.stateInDirModifier(c);\\n          break;\\n        }\\n        case 28: {\\n          this.stateInCommentLike(c);\\n          break;\\n        }\\n        case 27: {\\n          this.stateInSpecialComment(c);\\n          break;\\n        }\\n        case 11: {\\n          this.stateBeforeAttrName(c);\\n          break;\\n        }\\n        case 6: {\\n          this.stateInTagName(c);\\n          break;\\n        }\\n        case 34: {\\n          this.stateInSFCRootTagName(c);\\n          break;\\n        }\\n        case 9: {\\n          this.stateInClosingTagName(c);\\n          break;\\n        }\\n        case 5: {\\n          this.stateBeforeTagName(c);\\n          break;\\n        }\\n        case 17: {\\n          this.stateAfterAttrName(c);\\n          break;\\n        }\\n        case 20: {\\n          this.stateInAttrValueSingleQuotes(c);\\n          break;\\n        }\\n        case 18: {\\n          this.stateBeforeAttrValue(c);\\n          break;\\n        }\\n        case 8: {\\n          this.stateBeforeClosingTagName(c);\\n          break;\\n        }\\n        case 10: {\\n          this.stateAfterClosingTagName(c);\\n          break;\\n        }\\n        case 29: {\\n          this.stateBeforeSpecialS(c);\\n          break;\\n        }\\n        case 30: {\\n          this.stateBeforeSpecialT(c);\\n          break;\\n        }\\n        case 21: {\\n          this.stateInAttrValueNoQuotes(c);\\n          break;\\n        }\\n        case 7: {\\n          this.stateInSelfClosingTag(c);\\n          break;\\n        }\\n        case 23: {\\n          this.stateInDeclaration(c);\\n          break;\\n        }\\n        case 22: {\\n          this.stateBeforeDeclaration(c);\\n          break;\\n        }\\n        case 25: {\\n          this.stateBeforeComment(c);\\n          break;\\n        }\\n        case 24: {\\n          this.stateInProcessingInstruction(c);\\n          break;\\n        }\\n        case 33: {\\n          this.stateInEntity();\\n          break;\\n        }\\n      }\\n      this.index++;\\n    }\\n    this.cleanup();\\n    this.finish();\\n  }\\n  /**\\n   * Remove data that has already been consumed from the buffer.\\n   */\\n  cleanup() {\\n    if (this.sectionStart !== this.index) {\\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\\n        this.cbs.ontext(this.sectionStart, this.index);\\n        this.sectionStart = this.index;\\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\\n        this.cbs.onattribdata(this.sectionStart, this.index);\\n        this.sectionStart = this.index;\\n      }\\n    }\\n  }\\n  finish() {\\n    if (this.state === 33) {\\n      this.entityDecoder.end();\\n      this.state = this.baseState;\\n    }\\n    this.handleTrailingData();\\n    this.cbs.onend();\\n  }\\n  /** Handle any trailing data. */\\n  handleTrailingData() {\\n    const endIndex = this.buffer.length;\\n    if (this.sectionStart >= endIndex) {\\n      return;\\n    }\\n    if (this.state === 28) {\\n      if (this.currentSequence === Sequences.CdataEnd) {\\n        this.cbs.oncdata(this.sectionStart, endIndex);\\n      } else {\\n        this.cbs.oncomment(this.sectionStart, endIndex);\\n      }\\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\\n      this.cbs.ontext(this.sectionStart, endIndex);\\n    }\\n  }\\n  emitCodePoint(cp, consumed) {\\n    {\\n      if (this.baseState !== 1 && this.baseState !== 32) {\\n        if (this.sectionStart < this.entityStart) {\\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\\n        }\\n        this.sectionStart = this.entityStart + consumed;\\n        this.index = this.sectionStart - 1;\\n        this.cbs.onattribentity(\\n          decode_js.fromCodePoint(cp),\\n          this.entityStart,\\n          this.sectionStart\\n        );\\n      } else {\\n        if (this.sectionStart < this.entityStart) {\\n          this.cbs.ontext(this.sectionStart, this.entityStart);\\n        }\\n        this.sectionStart = this.entityStart + consumed;\\n        this.index = this.sectionStart - 1;\\n        this.cbs.ontextentity(\\n          decode_js.fromCodePoint(cp),\\n          this.entityStart,\\n          this.sectionStart\\n        );\\n      }\\n    }\\n  }\\n}\\n\\nconst CompilerDeprecationTypes = {\\n  \\\"COMPILER_IS_ON_ELEMENT\\\": \\\"COMPILER_IS_ON_ELEMENT\\\",\\n  \\\"COMPILER_V_BIND_SYNC\\\": \\\"COMPILER_V_BIND_SYNC\\\",\\n  \\\"COMPILER_V_BIND_OBJECT_ORDER\\\": \\\"COMPILER_V_BIND_OBJECT_ORDER\\\",\\n  \\\"COMPILER_V_ON_NATIVE\\\": \\\"COMPILER_V_ON_NATIVE\\\",\\n  \\\"COMPILER_V_IF_V_FOR_PRECEDENCE\\\": \\\"COMPILER_V_IF_V_FOR_PRECEDENCE\\\",\\n  \\\"COMPILER_NATIVE_TEMPLATE\\\": \\\"COMPILER_NATIVE_TEMPLATE\\\",\\n  \\\"COMPILER_INLINE_TEMPLATE\\\": \\\"COMPILER_INLINE_TEMPLATE\\\",\\n  \\\"COMPILER_FILTERS\\\": \\\"COMPILER_FILTERS\\\"\\n};\\nconst deprecationData = {\\n  [\\\"COMPILER_IS_ON_ELEMENT\\\"]: {\\n    message: `Platform-native elements with \\\"is\\\" prop will no longer be treated as components in Vue 3 unless the \\\"is\\\" value is explicitly prefixed with \\\"vue:\\\".`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\\n  },\\n  [\\\"COMPILER_V_BIND_SYNC\\\"]: {\\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\\\`v-bind:${key}.sync\\\\` should be changed to \\\\`v-model:${key}\\\\`.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\\n  },\\n  [\\\"COMPILER_V_BIND_OBJECT_ORDER\\\"]: {\\n    message: `v-bind=\\\"obj\\\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\\n  },\\n  [\\\"COMPILER_V_ON_NATIVE\\\"]: {\\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\\n  },\\n  [\\\"COMPILER_V_IF_V_FOR_PRECEDENCE\\\"]: {\\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\\n  },\\n  [\\\"COMPILER_NATIVE_TEMPLATE\\\"]: {\\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\\n  },\\n  [\\\"COMPILER_INLINE_TEMPLATE\\\"]: {\\n    message: `\\\"inline-template\\\" has been removed in Vue 3.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\\n  },\\n  [\\\"COMPILER_FILTERS\\\"]: {\\n    message: `filters have been removed in Vue 3. The \\\"|\\\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\\n  }\\n};\\nfunction getCompatValue(key, { compatConfig }) {\\n  const value = compatConfig && compatConfig[key];\\n  if (key === \\\"MODE\\\") {\\n    return value || 3;\\n  } else {\\n    return value;\\n  }\\n}\\nfunction isCompatEnabled(key, context) {\\n  const mode = getCompatValue(\\\"MODE\\\", context);\\n  const value = getCompatValue(key, context);\\n  return mode === 3 ? value === true : value !== false;\\n}\\nfunction checkCompatEnabled(key, context, loc, ...args) {\\n  const enabled = isCompatEnabled(key, context);\\n  return enabled;\\n}\\nfunction warnDeprecation(key, context, loc, ...args) {\\n  const val = getCompatValue(key, context);\\n  if (val === \\\"suppress-warning\\\") {\\n    return;\\n  }\\n  const { message, link } = deprecationData[key];\\n  const msg = `(deprecation ${key}) ${typeof message === \\\"function\\\" ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\\n  const err = new SyntaxError(msg);\\n  err.code = key;\\n  if (loc)\\n    err.loc = loc;\\n  context.onWarn(err);\\n}\\n\\nfunction defaultOnError(error) {\\n  throw error;\\n}\\nfunction defaultOnWarn(msg) {\\n}\\nfunction createCompilerError(code, loc, messages, additionalMessage) {\\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``) ;\\n  const error = new SyntaxError(String(msg));\\n  error.code = code;\\n  error.loc = loc;\\n  return error;\\n}\\nconst ErrorCodes = {\\n  \\\"ABRUPT_CLOSING_OF_EMPTY_COMMENT\\\": 0,\\n  \\\"0\\\": \\\"ABRUPT_CLOSING_OF_EMPTY_COMMENT\\\",\\n  \\\"CDATA_IN_HTML_CONTENT\\\": 1,\\n  \\\"1\\\": \\\"CDATA_IN_HTML_CONTENT\\\",\\n  \\\"DUPLICATE_ATTRIBUTE\\\": 2,\\n  \\\"2\\\": \\\"DUPLICATE_ATTRIBUTE\\\",\\n  \\\"END_TAG_WITH_ATTRIBUTES\\\": 3,\\n  \\\"3\\\": \\\"END_TAG_WITH_ATTRIBUTES\\\",\\n  \\\"END_TAG_WITH_TRAILING_SOLIDUS\\\": 4,\\n  \\\"4\\\": \\\"END_TAG_WITH_TRAILING_SOLIDUS\\\",\\n  \\\"EOF_BEFORE_TAG_NAME\\\": 5,\\n  \\\"5\\\": \\\"EOF_BEFORE_TAG_NAME\\\",\\n  \\\"EOF_IN_CDATA\\\": 6,\\n  \\\"6\\\": \\\"EOF_IN_CDATA\\\",\\n  \\\"EOF_IN_COMMENT\\\": 7,\\n  \\\"7\\\": \\\"EOF_IN_COMMENT\\\",\\n  \\\"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\\\": 8,\\n  \\\"8\\\": \\\"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\\\",\\n  \\\"EOF_IN_TAG\\\": 9,\\n  \\\"9\\\": \\\"EOF_IN_TAG\\\",\\n  \\\"INCORRECTLY_CLOSED_COMMENT\\\": 10,\\n  \\\"10\\\": \\\"INCORRECTLY_CLOSED_COMMENT\\\",\\n  \\\"INCORRECTLY_OPENED_COMMENT\\\": 11,\\n  \\\"11\\\": \\\"INCORRECTLY_OPENED_COMMENT\\\",\\n  \\\"INVALID_FIRST_CHARACTER_OF_TAG_NAME\\\": 12,\\n  \\\"12\\\": \\\"INVALID_FIRST_CHARACTER_OF_TAG_NAME\\\",\\n  \\\"MISSING_ATTRIBUTE_VALUE\\\": 13,\\n  \\\"13\\\": \\\"MISSING_ATTRIBUTE_VALUE\\\",\\n  \\\"MISSING_END_TAG_NAME\\\": 14,\\n  \\\"14\\\": \\\"MISSING_END_TAG_NAME\\\",\\n  \\\"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\\\": 15,\\n  \\\"15\\\": \\\"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\\\",\\n  \\\"NESTED_COMMENT\\\": 16,\\n  \\\"16\\\": \\\"NESTED_COMMENT\\\",\\n  \\\"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\\\": 17,\\n  \\\"17\\\": \\\"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\\\",\\n  \\\"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\\\": 18,\\n  \\\"18\\\": \\\"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\\\",\\n  \\\"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\\\": 19,\\n  \\\"19\\\": \\\"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\\\",\\n  \\\"UNEXPECTED_NULL_CHARACTER\\\": 20,\\n  \\\"20\\\": \\\"UNEXPECTED_NULL_CHARACTER\\\",\\n  \\\"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\\\": 21,\\n  \\\"21\\\": \\\"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\\\",\\n  \\\"UNEXPECTED_SOLIDUS_IN_TAG\\\": 22,\\n  \\\"22\\\": \\\"UNEXPECTED_SOLIDUS_IN_TAG\\\",\\n  \\\"X_INVALID_END_TAG\\\": 23,\\n  \\\"23\\\": \\\"X_INVALID_END_TAG\\\",\\n  \\\"X_MISSING_END_TAG\\\": 24,\\n  \\\"24\\\": \\\"X_MISSING_END_TAG\\\",\\n  \\\"X_MISSING_INTERPOLATION_END\\\": 25,\\n  \\\"25\\\": \\\"X_MISSING_INTERPOLATION_END\\\",\\n  \\\"X_MISSING_DIRECTIVE_NAME\\\": 26,\\n  \\\"26\\\": \\\"X_MISSING_DIRECTIVE_NAME\\\",\\n  \\\"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\\\": 27,\\n  \\\"27\\\": \\\"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\\\",\\n  \\\"X_V_IF_NO_EXPRESSION\\\": 28,\\n  \\\"28\\\": \\\"X_V_IF_NO_EXPRESSION\\\",\\n  \\\"X_V_IF_SAME_KEY\\\": 29,\\n  \\\"29\\\": \\\"X_V_IF_SAME_KEY\\\",\\n  \\\"X_V_ELSE_NO_ADJACENT_IF\\\": 30,\\n  \\\"30\\\": \\\"X_V_ELSE_NO_ADJACENT_IF\\\",\\n  \\\"X_V_FOR_NO_EXPRESSION\\\": 31,\\n  \\\"31\\\": \\\"X_V_FOR_NO_EXPRESSION\\\",\\n  \\\"X_V_FOR_MALFORMED_EXPRESSION\\\": 32,\\n  \\\"32\\\": \\\"X_V_FOR_MALFORMED_EXPRESSION\\\",\\n  \\\"X_V_FOR_TEMPLATE_KEY_PLACEMENT\\\": 33,\\n  \\\"33\\\": \\\"X_V_FOR_TEMPLATE_KEY_PLACEMENT\\\",\\n  \\\"X_V_BIND_NO_EXPRESSION\\\": 34,\\n  \\\"34\\\": \\\"X_V_BIND_NO_EXPRESSION\\\",\\n  \\\"X_V_ON_NO_EXPRESSION\\\": 35,\\n  \\\"35\\\": \\\"X_V_ON_NO_EXPRESSION\\\",\\n  \\\"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\\\": 36,\\n  \\\"36\\\": \\\"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\\\",\\n  \\\"X_V_SLOT_MIXED_SLOT_USAGE\\\": 37,\\n  \\\"37\\\": \\\"X_V_SLOT_MIXED_SLOT_USAGE\\\",\\n  \\\"X_V_SLOT_DUPLICATE_SLOT_NAMES\\\": 38,\\n  \\\"38\\\": \\\"X_V_SLOT_DUPLICATE_SLOT_NAMES\\\",\\n  \\\"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\\\": 39,\\n  \\\"39\\\": \\\"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\\\",\\n  \\\"X_V_SLOT_MISPLACED\\\": 40,\\n  \\\"40\\\": \\\"X_V_SLOT_MISPLACED\\\",\\n  \\\"X_V_MODEL_NO_EXPRESSION\\\": 41,\\n  \\\"41\\\": \\\"X_V_MODEL_NO_EXPRESSION\\\",\\n  \\\"X_V_MODEL_MALFORMED_EXPRESSION\\\": 42,\\n  \\\"42\\\": \\\"X_V_MODEL_MALFORMED_EXPRESSION\\\",\\n  \\\"X_V_MODEL_ON_SCOPE_VARIABLE\\\": 43,\\n  \\\"43\\\": \\\"X_V_MODEL_ON_SCOPE_VARIABLE\\\",\\n  \\\"X_V_MODEL_ON_PROPS\\\": 44,\\n  \\\"44\\\": \\\"X_V_MODEL_ON_PROPS\\\",\\n  \\\"X_INVALID_EXPRESSION\\\": 45,\\n  \\\"45\\\": \\\"X_INVALID_EXPRESSION\\\",\\n  \\\"X_KEEP_ALIVE_INVALID_CHILDREN\\\": 46,\\n  \\\"46\\\": \\\"X_KEEP_ALIVE_INVALID_CHILDREN\\\",\\n  \\\"X_PREFIX_ID_NOT_SUPPORTED\\\": 47,\\n  \\\"47\\\": \\\"X_PREFIX_ID_NOT_SUPPORTED\\\",\\n  \\\"X_MODULE_MODE_NOT_SUPPORTED\\\": 48,\\n  \\\"48\\\": \\\"X_MODULE_MODE_NOT_SUPPORTED\\\",\\n  \\\"X_CACHE_HANDLER_NOT_SUPPORTED\\\": 49,\\n  \\\"49\\\": \\\"X_CACHE_HANDLER_NOT_SUPPORTED\\\",\\n  \\\"X_SCOPE_ID_NOT_SUPPORTED\\\": 50,\\n  \\\"50\\\": \\\"X_SCOPE_ID_NOT_SUPPORTED\\\",\\n  \\\"X_VNODE_HOOKS\\\": 51,\\n  \\\"51\\\": \\\"X_VNODE_HOOKS\\\",\\n  \\\"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\\\": 52,\\n  \\\"52\\\": \\\"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\\\",\\n  \\\"__EXTEND_POINT__\\\": 53,\\n  \\\"53\\\": \\\"__EXTEND_POINT__\\\"\\n};\\nconst errorMessages = {\\n  // parse errors\\n  [0]: \\\"Illegal comment.\\\",\\n  [1]: \\\"CDATA section is allowed only in XML context.\\\",\\n  [2]: \\\"Duplicate attribute.\\\",\\n  [3]: \\\"End tag cannot have attributes.\\\",\\n  [4]: \\\"Illegal '/' in tags.\\\",\\n  [5]: \\\"Unexpected EOF in tag.\\\",\\n  [6]: \\\"Unexpected EOF in CDATA section.\\\",\\n  [7]: \\\"Unexpected EOF in comment.\\\",\\n  [8]: \\\"Unexpected EOF in script.\\\",\\n  [9]: \\\"Unexpected EOF in tag.\\\",\\n  [10]: \\\"Incorrectly closed comment.\\\",\\n  [11]: \\\"Incorrectly opened comment.\\\",\\n  [12]: \\\"Illegal tag name. Use '&lt;' to print '<'.\\\",\\n  [13]: \\\"Attribute value was expected.\\\",\\n  [14]: \\\"End tag name was expected.\\\",\\n  [15]: \\\"Whitespace was expected.\\\",\\n  [16]: \\\"Unexpected '<!--' in comment.\\\",\\n  [17]: `Attribute name cannot contain U+0022 (\\\"), U+0027 ('), and U+003C (<).`,\\n  [18]: \\\"Unquoted attribute value cannot contain U+0022 (\\\\\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\\\",\\n  [19]: \\\"Attribute name cannot start with '='.\\\",\\n  [21]: \\\"'<?' is allowed only in XML context.\\\",\\n  [20]: `Unexpected null character.`,\\n  [22]: \\\"Illegal '/' in tags.\\\",\\n  // Vue-specific parse errors\\n  [23]: \\\"Invalid end tag.\\\",\\n  [24]: \\\"Element is missing end tag.\\\",\\n  [25]: \\\"Interpolation end sign was not found.\\\",\\n  [27]: \\\"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\\\",\\n  [26]: \\\"Legal directive name was expected.\\\",\\n  // transform errors\\n  [28]: `v-if/v-else-if is missing expression.`,\\n  [29]: `v-if/else branches must use unique keys.`,\\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\\n  [31]: `v-for is missing expression.`,\\n  [32]: `v-for has invalid expression.`,\\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\\n  [34]: `v-bind is missing expression.`,\\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\\n  [35]: `v-on is missing expression.`,\\n  [36]: `Unexpected custom directive on <slot> outlet.`,\\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\\n  [38]: `Duplicate slot names found. `,\\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\\n  [40]: `v-slot can only be used on components or <template> tags.`,\\n  [41]: `v-model is missing expression.`,\\n  [42]: `v-model value must be a valid JavaScript member expression.`,\\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\\n  [45]: `Error parsing JavaScript expression: `,\\n  [46]: `<KeepAlive> expects exactly one child component.`,\\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\\n  // generic errors\\n  [47]: `\\\"prefixIdentifiers\\\" option is not supported in this build of compiler.`,\\n  [48]: `ES module mode is not supported in this build of compiler.`,\\n  [49]: `\\\"cacheHandlers\\\" option is only supported when the \\\"prefixIdentifiers\\\" option is enabled.`,\\n  [50]: `\\\"scopeId\\\" option is only supported in module mode.`,\\n  // just to fulfill types\\n  [53]: ``\\n};\\n\\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\\n  const rootExp = root.type === \\\"Program\\\" ? root.body[0].type === \\\"ExpressionStatement\\\" && root.body[0].expression : root;\\n  estreeWalker.walk(root, {\\n    enter(node, parent) {\\n      parent && parentStack.push(parent);\\n      if (parent && parent.type.startsWith(\\\"TS\\\") && !TS_NODE_TYPES.includes(parent.type)) {\\n        return this.skip();\\n      }\\n      if (node.type === \\\"Identifier\\\") {\\n        const isLocal = !!knownIds[node.name];\\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\\n        if (includeAll || isRefed && !isLocal) {\\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\\n        }\\n      } else if (node.type === \\\"ObjectProperty\\\" && (parent == null ? void 0 : parent.type) === \\\"ObjectPattern\\\") {\\n        node.inPattern = true;\\n      } else if (isFunctionType(node)) {\\n        if (node.scopeIds) {\\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\\n        } else {\\n          walkFunctionParams(\\n            node,\\n            (id) => markScopeIdentifier(node, id, knownIds)\\n          );\\n        }\\n      } else if (node.type === \\\"BlockStatement\\\") {\\n        if (node.scopeIds) {\\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\\n        } else {\\n          walkBlockDeclarations(\\n            node,\\n            (id) => markScopeIdentifier(node, id, knownIds)\\n          );\\n        }\\n      }\\n    },\\n    leave(node, parent) {\\n      parent && parentStack.pop();\\n      if (node !== rootExp && node.scopeIds) {\\n        for (const id of node.scopeIds) {\\n          knownIds[id]--;\\n          if (knownIds[id] === 0) {\\n            delete knownIds[id];\\n          }\\n        }\\n      }\\n    }\\n  });\\n}\\nfunction isReferencedIdentifier(id, parent, parentStack) {\\n  if (!parent) {\\n    return true;\\n  }\\n  if (id.name === \\\"arguments\\\") {\\n    return false;\\n  }\\n  if (isReferenced(id, parent)) {\\n    return true;\\n  }\\n  switch (parent.type) {\\n    case \\\"AssignmentExpression\\\":\\n    case \\\"AssignmentPattern\\\":\\n      return true;\\n    case \\\"ObjectPattern\\\":\\n    case \\\"ArrayPattern\\\":\\n      return isInDestructureAssignment(parent, parentStack);\\n  }\\n  return false;\\n}\\nfunction isInDestructureAssignment(parent, parentStack) {\\n  if (parent && (parent.type === \\\"ObjectProperty\\\" || parent.type === \\\"ArrayPattern\\\")) {\\n    let i = parentStack.length;\\n    while (i--) {\\n      const p = parentStack[i];\\n      if (p.type === \\\"AssignmentExpression\\\") {\\n        return true;\\n      } else if (p.type !== \\\"ObjectProperty\\\" && !p.type.endsWith(\\\"Pattern\\\")) {\\n        break;\\n      }\\n    }\\n  }\\n  return false;\\n}\\nfunction isInNewExpression(parentStack) {\\n  let i = parentStack.length;\\n  while (i--) {\\n    const p = parentStack[i];\\n    if (p.type === \\\"NewExpression\\\") {\\n      return true;\\n    } else if (p.type !== \\\"MemberExpression\\\") {\\n      break;\\n    }\\n  }\\n  return false;\\n}\\nfunction walkFunctionParams(node, onIdent) {\\n  for (const p of node.params) {\\n    for (const id of extractIdentifiers(p)) {\\n      onIdent(id);\\n    }\\n  }\\n}\\nfunction walkBlockDeclarations(block, onIdent) {\\n  for (const stmt of block.body) {\\n    if (stmt.type === \\\"VariableDeclaration\\\") {\\n      if (stmt.declare)\\n        continue;\\n      for (const decl of stmt.declarations) {\\n        for (const id of extractIdentifiers(decl.id)) {\\n          onIdent(id);\\n        }\\n      }\\n    } else if (stmt.type === \\\"FunctionDeclaration\\\" || stmt.type === \\\"ClassDeclaration\\\") {\\n      if (stmt.declare || !stmt.id)\\n        continue;\\n      onIdent(stmt.id);\\n    } else if (stmt.type === \\\"ForOfStatement\\\" || stmt.type === \\\"ForInStatement\\\" || stmt.type === \\\"ForStatement\\\") {\\n      const variable = stmt.type === \\\"ForStatement\\\" ? stmt.init : stmt.left;\\n      if (variable && variable.type === \\\"VariableDeclaration\\\") {\\n        for (const decl of variable.declarations) {\\n          for (const id of extractIdentifiers(decl.id)) {\\n            onIdent(id);\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\nfunction extractIdentifiers(param, nodes = []) {\\n  switch (param.type) {\\n    case \\\"Identifier\\\":\\n      nodes.push(param);\\n      break;\\n    case \\\"MemberExpression\\\":\\n      let object = param;\\n      while (object.type === \\\"MemberExpression\\\") {\\n        object = object.object;\\n      }\\n      nodes.push(object);\\n      break;\\n    case \\\"ObjectPattern\\\":\\n      for (const prop of param.properties) {\\n        if (prop.type === \\\"RestElement\\\") {\\n          extractIdentifiers(prop.argument, nodes);\\n        } else {\\n          extractIdentifiers(prop.value, nodes);\\n        }\\n      }\\n      break;\\n    case \\\"ArrayPattern\\\":\\n      param.elements.forEach((element) => {\\n        if (element)\\n          extractIdentifiers(element, nodes);\\n      });\\n      break;\\n    case \\\"RestElement\\\":\\n      extractIdentifiers(param.argument, nodes);\\n      break;\\n    case \\\"AssignmentPattern\\\":\\n      extractIdentifiers(param.left, nodes);\\n      break;\\n  }\\n  return nodes;\\n}\\nfunction markKnownIds(name, knownIds) {\\n  if (name in knownIds) {\\n    knownIds[name]++;\\n  } else {\\n    knownIds[name] = 1;\\n  }\\n}\\nfunction markScopeIdentifier(node, child, knownIds) {\\n  const { name } = child;\\n  if (node.scopeIds && node.scopeIds.has(name)) {\\n    return;\\n  }\\n  markKnownIds(name, knownIds);\\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\\n}\\nconst isFunctionType = (node) => {\\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\\n};\\nconst isStaticProperty = (node) => node && (node.type === \\\"ObjectProperty\\\" || node.type === \\\"ObjectMethod\\\") && !node.computed;\\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\\nfunction isReferenced(node, parent, grandparent) {\\n  switch (parent.type) {\\n    case \\\"MemberExpression\\\":\\n    case \\\"OptionalMemberExpression\\\":\\n      if (parent.property === node) {\\n        return !!parent.computed;\\n      }\\n      return parent.object === node;\\n    case \\\"JSXMemberExpression\\\":\\n      return parent.object === node;\\n    case \\\"VariableDeclarator\\\":\\n      return parent.init === node;\\n    case \\\"ArrowFunctionExpression\\\":\\n      return parent.body === node;\\n    case \\\"PrivateName\\\":\\n      return false;\\n    case \\\"ClassMethod\\\":\\n    case \\\"ClassPrivateMethod\\\":\\n    case \\\"ObjectMethod\\\":\\n      if (parent.key === node) {\\n        return !!parent.computed;\\n      }\\n      return false;\\n    case \\\"ObjectProperty\\\":\\n      if (parent.key === node) {\\n        return !!parent.computed;\\n      }\\n      return !grandparent || grandparent.type !== \\\"ObjectPattern\\\";\\n    case \\\"ClassProperty\\\":\\n      if (parent.key === node) {\\n        return !!parent.computed;\\n      }\\n      return true;\\n    case \\\"ClassPrivateProperty\\\":\\n      return parent.key !== node;\\n    case \\\"ClassDeclaration\\\":\\n    case \\\"ClassExpression\\\":\\n      return parent.superClass === node;\\n    case \\\"AssignmentExpression\\\":\\n      return parent.right === node;\\n    case \\\"AssignmentPattern\\\":\\n      return parent.right === node;\\n    case \\\"LabeledStatement\\\":\\n      return false;\\n    case \\\"CatchClause\\\":\\n      return false;\\n    case \\\"RestElement\\\":\\n      return false;\\n    case \\\"BreakStatement\\\":\\n    case \\\"ContinueStatement\\\":\\n      return false;\\n    case \\\"FunctionDeclaration\\\":\\n    case \\\"FunctionExpression\\\":\\n      return false;\\n    case \\\"ExportNamespaceSpecifier\\\":\\n    case \\\"ExportDefaultSpecifier\\\":\\n      return false;\\n    case \\\"ExportSpecifier\\\":\\n      if (grandparent == null ? void 0 : grandparent.source) {\\n        return false;\\n      }\\n      return parent.local === node;\\n    case \\\"ImportDefaultSpecifier\\\":\\n    case \\\"ImportNamespaceSpecifier\\\":\\n    case \\\"ImportSpecifier\\\":\\n      return false;\\n    case \\\"ImportAttribute\\\":\\n      return false;\\n    case \\\"JSXAttribute\\\":\\n      return false;\\n    case \\\"ObjectPattern\\\":\\n    case \\\"ArrayPattern\\\":\\n      return false;\\n    case \\\"MetaProperty\\\":\\n      return false;\\n    case \\\"ObjectTypeProperty\\\":\\n      return parent.key !== node;\\n    case \\\"TSEnumMember\\\":\\n      return parent.id !== node;\\n    case \\\"TSPropertySignature\\\":\\n      if (parent.key === node) {\\n        return !!parent.computed;\\n      }\\n      return true;\\n  }\\n  return true;\\n}\\nconst TS_NODE_TYPES = [\\n  \\\"TSAsExpression\\\",\\n  // foo as number\\n  \\\"TSTypeAssertion\\\",\\n  // (<number>foo)\\n  \\\"TSNonNullExpression\\\",\\n  // foo!\\n  \\\"TSInstantiationExpression\\\",\\n  // foo<string>\\n  \\\"TSSatisfiesExpression\\\"\\n  // foo satisfies T\\n];\\nfunction unwrapTSNode(node) {\\n  if (TS_NODE_TYPES.includes(node.type)) {\\n    return unwrapTSNode(node.expression);\\n  } else {\\n    return node;\\n  }\\n}\\n\\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\\nfunction isCoreComponent(tag) {\\n  switch (tag) {\\n    case \\\"Teleport\\\":\\n    case \\\"teleport\\\":\\n      return TELEPORT;\\n    case \\\"Suspense\\\":\\n    case \\\"suspense\\\":\\n      return SUSPENSE;\\n    case \\\"KeepAlive\\\":\\n    case \\\"keep-alive\\\":\\n      return KEEP_ALIVE;\\n    case \\\"BaseTransition\\\":\\n    case \\\"base-transition\\\":\\n      return BASE_TRANSITION;\\n  }\\n}\\nconst nonIdentifierRE = /^\\\\d|[^\\\\$\\\\w]/;\\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\\nconst validFirstIdentCharRE = /[A-Za-z_$\\\\xA0-\\\\uFFFF]/;\\nconst validIdentCharRE = /[\\\\.\\\\?\\\\w$\\\\xA0-\\\\uFFFF]/;\\nconst whitespaceRE = /\\\\s+[.[]\\\\s*|\\\\s*[.[]\\\\s+/g;\\nconst isMemberExpressionBrowser = (path) => {\\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\\n  let state = 0 /* inMemberExp */;\\n  let stateStack = [];\\n  let currentOpenBracketCount = 0;\\n  let currentOpenParensCount = 0;\\n  let currentStringType = null;\\n  for (let i = 0; i < path.length; i++) {\\n    const char = path.charAt(i);\\n    switch (state) {\\n      case 0 /* inMemberExp */:\\n        if (char === \\\"[\\\") {\\n          stateStack.push(state);\\n          state = 1 /* inBrackets */;\\n          currentOpenBracketCount++;\\n        } else if (char === \\\"(\\\") {\\n          stateStack.push(state);\\n          state = 2 /* inParens */;\\n          currentOpenParensCount++;\\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\\n          return false;\\n        }\\n        break;\\n      case 1 /* inBrackets */:\\n        if (char === `'` || char === `\\\"` || char === \\\"`\\\") {\\n          stateStack.push(state);\\n          state = 3 /* inString */;\\n          currentStringType = char;\\n        } else if (char === `[`) {\\n          currentOpenBracketCount++;\\n        } else if (char === `]`) {\\n          if (!--currentOpenBracketCount) {\\n            state = stateStack.pop();\\n          }\\n        }\\n        break;\\n      case 2 /* inParens */:\\n        if (char === `'` || char === `\\\"` || char === \\\"`\\\") {\\n          stateStack.push(state);\\n          state = 3 /* inString */;\\n          currentStringType = char;\\n        } else if (char === `(`) {\\n          currentOpenParensCount++;\\n        } else if (char === `)`) {\\n          if (i === path.length - 1) {\\n            return false;\\n          }\\n          if (!--currentOpenParensCount) {\\n            state = stateStack.pop();\\n          }\\n        }\\n        break;\\n      case 3 /* inString */:\\n        if (char === currentStringType) {\\n          state = stateStack.pop();\\n          currentStringType = null;\\n        }\\n        break;\\n    }\\n  }\\n  return !currentOpenBracketCount && !currentOpenParensCount;\\n};\\nconst isMemberExpressionNode = (path, context) => {\\n  try {\\n    let ret = parser.parseExpression(path, {\\n      plugins: context.expressionPlugins\\n    });\\n    ret = unwrapTSNode(ret);\\n    return ret.type === \\\"MemberExpression\\\" || ret.type === \\\"OptionalMemberExpression\\\" || ret.type === \\\"Identifier\\\" && ret.name !== \\\"undefined\\\";\\n  } catch (e) {\\n    return false;\\n  }\\n};\\nconst isMemberExpression = isMemberExpressionNode;\\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\\n  return advancePositionWithMutation(\\n    {\\n      offset: pos.offset,\\n      line: pos.line,\\n      column: pos.column\\n    },\\n    source,\\n    numberOfCharacters\\n  );\\n}\\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\\n  let linesCount = 0;\\n  let lastNewLinePos = -1;\\n  for (let i = 0; i < numberOfCharacters; i++) {\\n    if (source.charCodeAt(i) === 10) {\\n      linesCount++;\\n      lastNewLinePos = i;\\n    }\\n  }\\n  pos.offset += numberOfCharacters;\\n  pos.line += linesCount;\\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\\n  return pos;\\n}\\nfunction assert(condition, msg) {\\n  if (!condition) {\\n    throw new Error(msg || `unexpected compiler condition`);\\n  }\\n}\\nfunction findDir(node, name, allowEmpty = false) {\\n  for (let i = 0; i < node.props.length; i++) {\\n    const p = node.props[i];\\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\\n      return p;\\n    }\\n  }\\n}\\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\\n  for (let i = 0; i < node.props.length; i++) {\\n    const p = node.props[i];\\n    if (p.type === 6) {\\n      if (dynamicOnly)\\n        continue;\\n      if (p.name === name && (p.value || allowEmpty)) {\\n        return p;\\n      }\\n    } else if (p.name === \\\"bind\\\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\\n      return p;\\n    }\\n  }\\n}\\nfunction isStaticArgOf(arg, name) {\\n  return !!(arg && isStaticExp(arg) && arg.content === name);\\n}\\nfunction hasDynamicKeyVBind(node) {\\n  return node.props.some(\\n    (p) => p.type === 7 && p.name === \\\"bind\\\" && (!p.arg || // v-bind=\\\"obj\\\"\\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\\n    !p.arg.isStatic)\\n    // v-bind:[foo]\\n  );\\n}\\nfunction isText$1(node) {\\n  return node.type === 5 || node.type === 2;\\n}\\nfunction isVSlot(p) {\\n  return p.type === 7 && p.name === \\\"slot\\\";\\n}\\nfunction isTemplateNode(node) {\\n  return node.type === 1 && node.tagType === 3;\\n}\\nfunction isSlotOutlet(node) {\\n  return node.type === 1 && node.tagType === 2;\\n}\\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\\nfunction getUnnormalizedProps(props, callPath = []) {\\n  if (props && !shared.isString(props) && props.type === 14) {\\n    const callee = props.callee;\\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\\n      return getUnnormalizedProps(\\n        props.arguments[0],\\n        callPath.concat(props)\\n      );\\n    }\\n  }\\n  return [props, callPath];\\n}\\nfunction injectProp(node, prop, context) {\\n  let propsWithInjection;\\n  let props = node.type === 13 ? node.props : node.arguments[2];\\n  let callPath = [];\\n  let parentCall;\\n  if (props && !shared.isString(props) && props.type === 14) {\\n    const ret = getUnnormalizedProps(props);\\n    props = ret[0];\\n    callPath = ret[1];\\n    parentCall = callPath[callPath.length - 1];\\n  }\\n  if (props == null || shared.isString(props)) {\\n    propsWithInjection = createObjectExpression([prop]);\\n  } else if (props.type === 14) {\\n    const first = props.arguments[0];\\n    if (!shared.isString(first) && first.type === 15) {\\n      if (!hasProp(prop, first)) {\\n        first.properties.unshift(prop);\\n      }\\n    } else {\\n      if (props.callee === TO_HANDLERS) {\\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\\n          createObjectExpression([prop]),\\n          props\\n        ]);\\n      } else {\\n        props.arguments.unshift(createObjectExpression([prop]));\\n      }\\n    }\\n    !propsWithInjection && (propsWithInjection = props);\\n  } else if (props.type === 15) {\\n    if (!hasProp(prop, props)) {\\n      props.properties.unshift(prop);\\n    }\\n    propsWithInjection = props;\\n  } else {\\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\\n      createObjectExpression([prop]),\\n      props\\n    ]);\\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\\n      parentCall = callPath[callPath.length - 2];\\n    }\\n  }\\n  if (node.type === 13) {\\n    if (parentCall) {\\n      parentCall.arguments[0] = propsWithInjection;\\n    } else {\\n      node.props = propsWithInjection;\\n    }\\n  } else {\\n    if (parentCall) {\\n      parentCall.arguments[0] = propsWithInjection;\\n    } else {\\n      node.arguments[2] = propsWithInjection;\\n    }\\n  }\\n}\\nfunction hasProp(prop, props) {\\n  let result = false;\\n  if (prop.key.type === 4) {\\n    const propKeyName = prop.key.content;\\n    result = props.properties.some(\\n      (p) => p.key.type === 4 && p.key.content === propKeyName\\n    );\\n  }\\n  return result;\\n}\\nfunction toValidAssetId(name, type) {\\n  return `_${type}_${name.replace(/[^\\\\w]/g, (searchValue, replaceValue) => {\\n    return searchValue === \\\"-\\\" ? \\\"_\\\" : name.charCodeAt(replaceValue).toString();\\n  })}`;\\n}\\nfunction hasScopeRef(node, ids) {\\n  if (!node || Object.keys(ids).length === 0) {\\n    return false;\\n  }\\n  switch (node.type) {\\n    case 1:\\n      for (let i = 0; i < node.props.length; i++) {\\n        const p = node.props[i];\\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\\n          return true;\\n        }\\n      }\\n      return node.children.some((c) => hasScopeRef(c, ids));\\n    case 11:\\n      if (hasScopeRef(node.source, ids)) {\\n        return true;\\n      }\\n      return node.children.some((c) => hasScopeRef(c, ids));\\n    case 9:\\n      return node.branches.some((b) => hasScopeRef(b, ids));\\n    case 10:\\n      if (hasScopeRef(node.condition, ids)) {\\n        return true;\\n      }\\n      return node.children.some((c) => hasScopeRef(c, ids));\\n    case 4:\\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\\n    case 8:\\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\\n    case 5:\\n    case 12:\\n      return hasScopeRef(node.content, ids);\\n    case 2:\\n    case 3:\\n      return false;\\n    default:\\n      return false;\\n  }\\n}\\nfunction getMemoedVNodeCall(node) {\\n  if (node.type === 14 && node.callee === WITH_MEMO) {\\n    return node.arguments[1].returns;\\n  } else {\\n    return node;\\n  }\\n}\\nconst forAliasRE = /([\\\\s\\\\S]*?)\\\\s+(?:in|of)\\\\s+([\\\\s\\\\S]*)/;\\n\\nconst defaultParserOptions = {\\n  parseMode: \\\"base\\\",\\n  ns: 0,\\n  delimiters: [`{{`, `}}`],\\n  getNamespace: () => 0,\\n  isVoidTag: shared.NO,\\n  isPreTag: shared.NO,\\n  isCustomElement: shared.NO,\\n  onError: defaultOnError,\\n  onWarn: defaultOnWarn,\\n  comments: false,\\n  prefixIdentifiers: false\\n};\\nlet currentOptions = defaultParserOptions;\\nlet currentRoot = null;\\nlet currentInput = \\\"\\\";\\nlet currentOpenTag = null;\\nlet currentProp = null;\\nlet currentAttrValue = \\\"\\\";\\nlet currentAttrStartIndex = -1;\\nlet currentAttrEndIndex = -1;\\nlet inPre = 0;\\nlet inVPre = false;\\nlet currentVPreBoundary = null;\\nconst stack = [];\\nconst tokenizer = new Tokenizer(stack, {\\n  onerr: emitError,\\n  ontext(start, end) {\\n    onText(getSlice(start, end), start, end);\\n  },\\n  ontextentity(char, start, end) {\\n    onText(char, start, end);\\n  },\\n  oninterpolation(start, end) {\\n    if (inVPre) {\\n      return onText(getSlice(start, end), start, end);\\n    }\\n    let innerStart = start + tokenizer.delimiterOpen.length;\\n    let innerEnd = end - tokenizer.delimiterClose.length;\\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\\n      innerStart++;\\n    }\\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\\n      innerEnd--;\\n    }\\n    let exp = getSlice(innerStart, innerEnd);\\n    if (exp.includes(\\\"&\\\")) {\\n      {\\n        exp = decode_js.decodeHTML(exp);\\n      }\\n    }\\n    addNode({\\n      type: 5,\\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\\n      loc: getLoc(start, end)\\n    });\\n  },\\n  onopentagname(start, end) {\\n    const name = getSlice(start, end);\\n    currentOpenTag = {\\n      type: 1,\\n      tag: name,\\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\\n      tagType: 0,\\n      // will be refined on tag close\\n      props: [],\\n      children: [],\\n      loc: getLoc(start - 1, end),\\n      codegenNode: void 0\\n    };\\n  },\\n  onopentagend(end) {\\n    endOpenTag(end);\\n  },\\n  onclosetag(start, end) {\\n    const name = getSlice(start, end);\\n    if (!currentOptions.isVoidTag(name)) {\\n      let found = false;\\n      for (let i = 0; i < stack.length; i++) {\\n        const e = stack[i];\\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\\n          found = true;\\n          if (i > 0) {\\n            emitError(24, stack[0].loc.start.offset);\\n          }\\n          for (let j = 0; j <= i; j++) {\\n            const el = stack.shift();\\n            onCloseTag(el, end, j < i);\\n          }\\n          break;\\n        }\\n      }\\n      if (!found) {\\n        emitError(23, backTrack(start, 60));\\n      }\\n    }\\n  },\\n  onselfclosingtag(end) {\\n    var _a;\\n    const name = currentOpenTag.tag;\\n    currentOpenTag.isSelfClosing = true;\\n    endOpenTag(end);\\n    if (((_a = stack[0]) == null ? void 0 : _a.tag) === name) {\\n      onCloseTag(stack.shift(), end);\\n    }\\n  },\\n  onattribname(start, end) {\\n    currentProp = {\\n      type: 6,\\n      name: getSlice(start, end),\\n      nameLoc: getLoc(start, end),\\n      value: void 0,\\n      loc: getLoc(start)\\n    };\\n  },\\n  ondirname(start, end) {\\n    const raw = getSlice(start, end);\\n    const name = raw === \\\".\\\" || raw === \\\":\\\" ? \\\"bind\\\" : raw === \\\"@\\\" ? \\\"on\\\" : raw === \\\"#\\\" ? \\\"slot\\\" : raw.slice(2);\\n    if (!inVPre && name === \\\"\\\") {\\n      emitError(26, start);\\n    }\\n    if (inVPre || name === \\\"\\\") {\\n      currentProp = {\\n        type: 6,\\n        name: raw,\\n        nameLoc: getLoc(start, end),\\n        value: void 0,\\n        loc: getLoc(start)\\n      };\\n    } else {\\n      currentProp = {\\n        type: 7,\\n        name,\\n        rawName: raw,\\n        exp: void 0,\\n        arg: void 0,\\n        modifiers: raw === \\\".\\\" ? [\\\"prop\\\"] : [],\\n        loc: getLoc(start)\\n      };\\n      if (name === \\\"pre\\\") {\\n        inVPre = tokenizer.inVPre = true;\\n        currentVPreBoundary = currentOpenTag;\\n        const props = currentOpenTag.props;\\n        for (let i = 0; i < props.length; i++) {\\n          if (props[i].type === 7) {\\n            props[i] = dirToAttr(props[i]);\\n          }\\n        }\\n      }\\n    }\\n  },\\n  ondirarg(start, end) {\\n    if (start === end)\\n      return;\\n    const arg = getSlice(start, end);\\n    if (inVPre) {\\n      currentProp.name += arg;\\n      setLocEnd(currentProp.nameLoc, end);\\n    } else {\\n      const isStatic = arg[0] !== `[`;\\n      currentProp.arg = createExp(\\n        isStatic ? arg : arg.slice(1, -1),\\n        isStatic,\\n        getLoc(start, end),\\n        isStatic ? 3 : 0\\n      );\\n    }\\n  },\\n  ondirmodifier(start, end) {\\n    const mod = getSlice(start, end);\\n    if (inVPre) {\\n      currentProp.name += \\\".\\\" + mod;\\n      setLocEnd(currentProp.nameLoc, end);\\n    } else if (currentProp.name === \\\"slot\\\") {\\n      const arg = currentProp.arg;\\n      if (arg) {\\n        arg.content += \\\".\\\" + mod;\\n        setLocEnd(arg.loc, end);\\n      }\\n    } else {\\n      currentProp.modifiers.push(mod);\\n    }\\n  },\\n  onattribdata(start, end) {\\n    currentAttrValue += getSlice(start, end);\\n    if (currentAttrStartIndex < 0)\\n      currentAttrStartIndex = start;\\n    currentAttrEndIndex = end;\\n  },\\n  onattribentity(char, start, end) {\\n    currentAttrValue += char;\\n    if (currentAttrStartIndex < 0)\\n      currentAttrStartIndex = start;\\n    currentAttrEndIndex = end;\\n  },\\n  onattribnameend(end) {\\n    const start = currentProp.loc.start.offset;\\n    const name = getSlice(start, end);\\n    if (currentProp.type === 7) {\\n      currentProp.rawName = name;\\n    }\\n    if (currentOpenTag.props.some(\\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\\n    )) {\\n      emitError(2, start);\\n    }\\n  },\\n  onattribend(quote, end) {\\n    if (currentOpenTag && currentProp) {\\n      setLocEnd(currentProp.loc, end);\\n      if (quote !== 0) {\\n        if (currentProp.type === 6) {\\n          if (currentProp.name === \\\"class\\\") {\\n            currentAttrValue = condense(currentAttrValue).trim();\\n          }\\n          if (quote === 1 && !currentAttrValue) {\\n            emitError(13, end);\\n          }\\n          currentProp.value = {\\n            type: 2,\\n            content: currentAttrValue,\\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\\n          };\\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \\\"template\\\" && currentProp.name === \\\"lang\\\" && currentAttrValue && currentAttrValue !== \\\"html\\\") {\\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\\n          }\\n        } else {\\n          let expParseMode = 0 /* Normal */;\\n          {\\n            if (currentProp.name === \\\"for\\\") {\\n              expParseMode = 3 /* Skip */;\\n            } else if (currentProp.name === \\\"slot\\\") {\\n              expParseMode = 1 /* Params */;\\n            } else if (currentProp.name === \\\"on\\\" && currentAttrValue.includes(\\\";\\\")) {\\n              expParseMode = 2 /* Statements */;\\n            }\\n          }\\n          currentProp.exp = createExp(\\n            currentAttrValue,\\n            false,\\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\\n            0,\\n            expParseMode\\n          );\\n          if (currentProp.name === \\\"for\\\") {\\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\\n          }\\n          let syncIndex = -1;\\n          if (currentProp.name === \\\"bind\\\" && (syncIndex = currentProp.modifiers.indexOf(\\\"sync\\\")) > -1 && checkCompatEnabled(\\n            \\\"COMPILER_V_BIND_SYNC\\\",\\n            currentOptions,\\n            currentProp.loc,\\n            currentProp.rawName\\n          )) {\\n            currentProp.name = \\\"model\\\";\\n            currentProp.modifiers.splice(syncIndex, 1);\\n          }\\n        }\\n      }\\n      if (currentProp.type !== 7 || currentProp.name !== \\\"pre\\\") {\\n        currentOpenTag.props.push(currentProp);\\n      }\\n    }\\n    currentAttrValue = \\\"\\\";\\n    currentAttrStartIndex = currentAttrEndIndex = -1;\\n  },\\n  oncomment(start, end) {\\n    if (currentOptions.comments) {\\n      addNode({\\n        type: 3,\\n        content: getSlice(start, end),\\n        loc: getLoc(start - 4, end + 3)\\n      });\\n    }\\n  },\\n  onend() {\\n    const end = currentInput.length;\\n    if (tokenizer.state !== 1) {\\n      switch (tokenizer.state) {\\n        case 5:\\n        case 8:\\n          emitError(5, end);\\n          break;\\n        case 3:\\n        case 4:\\n          emitError(\\n            25,\\n            tokenizer.sectionStart\\n          );\\n          break;\\n        case 28:\\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\\n            emitError(6, end);\\n          } else {\\n            emitError(7, end);\\n          }\\n          break;\\n        case 6:\\n        case 7:\\n        case 9:\\n        case 11:\\n        case 12:\\n        case 13:\\n        case 14:\\n        case 15:\\n        case 16:\\n        case 17:\\n        case 18:\\n        case 19:\\n        case 20:\\n        case 21:\\n          emitError(9, end);\\n          break;\\n      }\\n    }\\n    for (let index = 0; index < stack.length; index++) {\\n      onCloseTag(stack[index], end - 1);\\n      emitError(24, stack[index].loc.start.offset);\\n    }\\n  },\\n  oncdata(start, end) {\\n    if (stack[0].ns !== 0) {\\n      onText(getSlice(start, end), start, end);\\n    } else {\\n      emitError(1, start - 9);\\n    }\\n  },\\n  onprocessinginstruction(start) {\\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\\n      emitError(\\n        21,\\n        start - 1\\n      );\\n    }\\n  }\\n});\\nconst forIteratorRE = /,([^,\\\\}\\\\]]*)(?:,([^,\\\\}\\\\]]*))?$/;\\nconst stripParensRE = /^\\\\(|\\\\)$/g;\\nfunction parseForExpression(input) {\\n  const loc = input.loc;\\n  const exp = input.content;\\n  const inMatch = exp.match(forAliasRE);\\n  if (!inMatch)\\n    return;\\n  const [, LHS, RHS] = inMatch;\\n  const createAliasExpression = (content, offset, asParam = false) => {\\n    const start = loc.start.offset + offset;\\n    const end = start + content.length;\\n    return createExp(\\n      content,\\n      false,\\n      getLoc(start, end),\\n      0,\\n      asParam ? 1 /* Params */ : 0 /* Normal */\\n    );\\n  };\\n  const result = {\\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\\n    value: void 0,\\n    key: void 0,\\n    index: void 0,\\n    finalized: false\\n  };\\n  let valueContent = LHS.trim().replace(stripParensRE, \\\"\\\").trim();\\n  const trimmedOffset = LHS.indexOf(valueContent);\\n  const iteratorMatch = valueContent.match(forIteratorRE);\\n  if (iteratorMatch) {\\n    valueContent = valueContent.replace(forIteratorRE, \\\"\\\").trim();\\n    const keyContent = iteratorMatch[1].trim();\\n    let keyOffset;\\n    if (keyContent) {\\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\\n      result.key = createAliasExpression(keyContent, keyOffset, true);\\n    }\\n    if (iteratorMatch[2]) {\\n      const indexContent = iteratorMatch[2].trim();\\n      if (indexContent) {\\n        result.index = createAliasExpression(\\n          indexContent,\\n          exp.indexOf(\\n            indexContent,\\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\\n          ),\\n          true\\n        );\\n      }\\n    }\\n  }\\n  if (valueContent) {\\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\\n  }\\n  return result;\\n}\\nfunction getSlice(start, end) {\\n  return currentInput.slice(start, end);\\n}\\nfunction endOpenTag(end) {\\n  if (tokenizer.inSFCRoot) {\\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\\n  }\\n  addNode(currentOpenTag);\\n  const { tag, ns } = currentOpenTag;\\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\\n    inPre++;\\n  }\\n  if (currentOptions.isVoidTag(tag)) {\\n    onCloseTag(currentOpenTag, end);\\n  } else {\\n    stack.unshift(currentOpenTag);\\n    if (ns === 1 || ns === 2) {\\n      tokenizer.inXML = true;\\n    }\\n  }\\n  currentOpenTag = null;\\n}\\nfunction onText(content, start, end) {\\n  const parent = stack[0] || currentRoot;\\n  const lastNode = parent.children[parent.children.length - 1];\\n  if ((lastNode == null ? void 0 : lastNode.type) === 2) {\\n    lastNode.content += content;\\n    setLocEnd(lastNode.loc, end);\\n  } else {\\n    parent.children.push({\\n      type: 2,\\n      content,\\n      loc: getLoc(start, end)\\n    });\\n  }\\n}\\nfunction onCloseTag(el, end, isImplied = false) {\\n  if (isImplied) {\\n    setLocEnd(el.loc, backTrack(end, 60));\\n  } else {\\n    setLocEnd(el.loc, end + 1);\\n  }\\n  if (tokenizer.inSFCRoot) {\\n    if (el.children.length) {\\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\\n    } else {\\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\\n    }\\n    el.innerLoc.source = getSlice(\\n      el.innerLoc.start.offset,\\n      el.innerLoc.end.offset\\n    );\\n  }\\n  const { tag, ns } = el;\\n  if (!inVPre) {\\n    if (tag === \\\"slot\\\") {\\n      el.tagType = 2;\\n    } else if (isFragmentTemplate(el)) {\\n      el.tagType = 3;\\n    } else if (isComponent(el)) {\\n      el.tagType = 1;\\n    }\\n  }\\n  if (!tokenizer.inRCDATA) {\\n    el.children = condenseWhitespace(el.children, el.tag);\\n  }\\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\\n    inPre--;\\n  }\\n  if (currentVPreBoundary === el) {\\n    inVPre = tokenizer.inVPre = false;\\n    currentVPreBoundary = null;\\n  }\\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\\n    tokenizer.inXML = false;\\n  }\\n  {\\n    const props = el.props;\\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\\n      \\\"COMPILER_NATIVE_TEMPLATE\\\",\\n      currentOptions\\n    ) && el.tag === \\\"template\\\" && !isFragmentTemplate(el)) {\\n      const parent = stack[0] || currentRoot;\\n      const index = parent.children.indexOf(el);\\n      parent.children.splice(index, 1, ...el.children);\\n    }\\n    const inlineTemplateProp = props.find(\\n      (p) => p.type === 6 && p.name === \\\"inline-template\\\"\\n    );\\n    if (inlineTemplateProp && checkCompatEnabled(\\n      \\\"COMPILER_INLINE_TEMPLATE\\\",\\n      currentOptions,\\n      inlineTemplateProp.loc\\n    ) && el.children.length) {\\n      inlineTemplateProp.value = {\\n        type: 2,\\n        content: getSlice(\\n          el.children[0].loc.start.offset,\\n          el.children[el.children.length - 1].loc.end.offset\\n        ),\\n        loc: inlineTemplateProp.loc\\n      };\\n    }\\n  }\\n}\\nfunction backTrack(index, c) {\\n  let i = index;\\n  while (currentInput.charCodeAt(i) !== c && i >= 0)\\n    i--;\\n  return i;\\n}\\nconst specialTemplateDir = /* @__PURE__ */ new Set([\\\"if\\\", \\\"else\\\", \\\"else-if\\\", \\\"for\\\", \\\"slot\\\"]);\\nfunction isFragmentTemplate({ tag, props }) {\\n  if (tag === \\\"template\\\") {\\n    for (let i = 0; i < props.length; i++) {\\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n}\\nfunction isComponent({ tag, props }) {\\n  var _a;\\n  if (currentOptions.isCustomElement(tag)) {\\n    return false;\\n  }\\n  if (tag === \\\"component\\\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || ((_a = currentOptions.isBuiltInComponent) == null ? void 0 : _a.call(currentOptions, tag)) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\\n    return true;\\n  }\\n  for (let i = 0; i < props.length; i++) {\\n    const p = props[i];\\n    if (p.type === 6) {\\n      if (p.name === \\\"is\\\" && p.value) {\\n        if (p.value.content.startsWith(\\\"vue:\\\")) {\\n          return true;\\n        } else if (checkCompatEnabled(\\n          \\\"COMPILER_IS_ON_ELEMENT\\\",\\n          currentOptions,\\n          p.loc\\n        )) {\\n          return true;\\n        }\\n      }\\n    } else if (// :is on plain element - only treat as component in compat mode\\n    p.name === \\\"bind\\\" && isStaticArgOf(p.arg, \\\"is\\\") && checkCompatEnabled(\\n      \\\"COMPILER_IS_ON_ELEMENT\\\",\\n      currentOptions,\\n      p.loc\\n    )) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\nfunction isUpperCase(c) {\\n  return c > 64 && c < 91;\\n}\\nconst windowsNewlineRE = /\\\\r\\\\n/g;\\nfunction condenseWhitespace(nodes, tag) {\\n  var _a, _b;\\n  const shouldCondense = currentOptions.whitespace !== \\\"preserve\\\";\\n  let removedWhitespace = false;\\n  for (let i = 0; i < nodes.length; i++) {\\n    const node = nodes[i];\\n    if (node.type === 2) {\\n      if (!inPre) {\\n        if (isAllWhitespace(node.content)) {\\n          const prev = (_a = nodes[i - 1]) == null ? void 0 : _a.type;\\n          const next = (_b = nodes[i + 1]) == null ? void 0 : _b.type;\\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\\n            removedWhitespace = true;\\n            nodes[i] = null;\\n          } else {\\n            node.content = \\\" \\\";\\n          }\\n        } else if (shouldCondense) {\\n          node.content = condense(node.content);\\n        }\\n      } else {\\n        node.content = node.content.replace(windowsNewlineRE, \\\"\\\\n\\\");\\n      }\\n    }\\n  }\\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\\n    const first = nodes[0];\\n    if (first && first.type === 2) {\\n      first.content = first.content.replace(/^\\\\r?\\\\n/, \\\"\\\");\\n    }\\n  }\\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\\n}\\nfunction isAllWhitespace(str) {\\n  for (let i = 0; i < str.length; i++) {\\n    if (!isWhitespace(str.charCodeAt(i))) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\nfunction hasNewlineChar(str) {\\n  for (let i = 0; i < str.length; i++) {\\n    const c = str.charCodeAt(i);\\n    if (c === 10 || c === 13) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\nfunction condense(str) {\\n  let ret = \\\"\\\";\\n  let prevCharIsWhitespace = false;\\n  for (let i = 0; i < str.length; i++) {\\n    if (isWhitespace(str.charCodeAt(i))) {\\n      if (!prevCharIsWhitespace) {\\n        ret += \\\" \\\";\\n        prevCharIsWhitespace = true;\\n      }\\n    } else {\\n      ret += str[i];\\n      prevCharIsWhitespace = false;\\n    }\\n  }\\n  return ret;\\n}\\nfunction addNode(node) {\\n  (stack[0] || currentRoot).children.push(node);\\n}\\nfunction getLoc(start, end) {\\n  return {\\n    start: tokenizer.getPos(start),\\n    // @ts-expect-error allow late attachment\\n    end: end == null ? end : tokenizer.getPos(end),\\n    // @ts-expect-error allow late attachment\\n    source: end == null ? end : getSlice(start, end)\\n  };\\n}\\nfunction setLocEnd(loc, end) {\\n  loc.end = tokenizer.getPos(end);\\n  loc.source = getSlice(loc.start.offset, end);\\n}\\nfunction dirToAttr(dir) {\\n  const attr = {\\n    type: 6,\\n    name: dir.rawName,\\n    nameLoc: getLoc(\\n      dir.loc.start.offset,\\n      dir.loc.start.offset + dir.rawName.length\\n    ),\\n    value: void 0,\\n    loc: dir.loc\\n  };\\n  if (dir.exp) {\\n    const loc = dir.exp.loc;\\n    if (loc.end.offset < dir.loc.end.offset) {\\n      loc.start.offset--;\\n      loc.start.column--;\\n      loc.end.offset++;\\n      loc.end.column++;\\n    }\\n    attr.value = {\\n      type: 2,\\n      content: dir.exp.content,\\n      loc\\n    };\\n  }\\n  return attr;\\n}\\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\\n    if (isSimpleIdentifier(content)) {\\n      exp.ast = null;\\n      return exp;\\n    }\\n    try {\\n      const plugins = currentOptions.expressionPlugins;\\n      const options = {\\n        plugins: plugins ? [...plugins, \\\"typescript\\\"] : [\\\"typescript\\\"]\\n      };\\n      if (parseMode === 2 /* Statements */) {\\n        exp.ast = parser.parse(` ${content} `, options).program;\\n      } else if (parseMode === 1 /* Params */) {\\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\\n      } else {\\n        exp.ast = parser.parseExpression(`(${content})`, options);\\n      }\\n    } catch (e) {\\n      exp.ast = false;\\n      emitError(45, loc.start.offset, e.message);\\n    }\\n  }\\n  return exp;\\n}\\nfunction emitError(code, index, message) {\\n  currentOptions.onError(\\n    createCompilerError(code, getLoc(index, index), void 0, message)\\n  );\\n}\\nfunction reset() {\\n  tokenizer.reset();\\n  currentOpenTag = null;\\n  currentProp = null;\\n  currentAttrValue = \\\"\\\";\\n  currentAttrStartIndex = -1;\\n  currentAttrEndIndex = -1;\\n  stack.length = 0;\\n}\\nfunction baseParse(input, options) {\\n  reset();\\n  currentInput = input;\\n  currentOptions = shared.extend({}, defaultParserOptions);\\n  if (options) {\\n    let key;\\n    for (key in options) {\\n      if (options[key] != null) {\\n        currentOptions[key] = options[key];\\n      }\\n    }\\n  }\\n  tokenizer.mode = currentOptions.parseMode === \\\"html\\\" ? 1 : currentOptions.parseMode === \\\"sfc\\\" ? 2 : 0;\\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\\n  const delimiters = options == null ? void 0 : options.delimiters;\\n  if (delimiters) {\\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\\n  }\\n  const root = currentRoot = createRoot([], input);\\n  tokenizer.parse(currentInput);\\n  root.loc = getLoc(0, input.length);\\n  root.children = condenseWhitespace(root.children);\\n  currentRoot = null;\\n  return root;\\n}\\n\\nfunction hoistStatic(root, context) {\\n  walk(\\n    root,\\n    context,\\n    // Root node is unfortunately non-hoistable due to potential parent\\n    // fallthrough attributes.\\n    isSingleElementRoot(root, root.children[0])\\n  );\\n}\\nfunction isSingleElementRoot(root, child) {\\n  const { children } = root;\\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\\n}\\nfunction walk(node, context, doNotHoistNode = false) {\\n  const { children } = node;\\n  const originalCount = children.length;\\n  let hoistedCount = 0;\\n  for (let i = 0; i < children.length; i++) {\\n    const child = children[i];\\n    if (child.type === 1 && child.tagType === 0) {\\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\\n      if (constantType > 0) {\\n        if (constantType >= 2) {\\n          child.codegenNode.patchFlag = -1 + (``);\\n          child.codegenNode = context.hoist(child.codegenNode);\\n          hoistedCount++;\\n          continue;\\n        }\\n      } else {\\n        const codegenNode = child.codegenNode;\\n        if (codegenNode.type === 13) {\\n          const flag = getPatchFlag(codegenNode);\\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\\n            const props = getNodeProps(child);\\n            if (props) {\\n              codegenNode.props = context.hoist(props);\\n            }\\n          }\\n          if (codegenNode.dynamicProps) {\\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\\n          }\\n        }\\n      }\\n    }\\n    if (child.type === 1) {\\n      const isComponent = child.tagType === 1;\\n      if (isComponent) {\\n        context.scopes.vSlot++;\\n      }\\n      walk(child, context);\\n      if (isComponent) {\\n        context.scopes.vSlot--;\\n      }\\n    } else if (child.type === 11) {\\n      walk(child, context, child.children.length === 1);\\n    } else if (child.type === 9) {\\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\\n        walk(\\n          child.branches[i2],\\n          context,\\n          child.branches[i2].children.length === 1\\n        );\\n      }\\n    }\\n  }\\n  if (hoistedCount && context.transformHoist) {\\n    context.transformHoist(children, context, node);\\n  }\\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\\n    const hoisted = context.hoist(\\n      createArrayExpression(node.codegenNode.children)\\n    );\\n    if (context.hmr) {\\n      hoisted.content = `[...${hoisted.content}]`;\\n    }\\n    node.codegenNode.children = hoisted;\\n  }\\n}\\nfunction getConstantType(node, context) {\\n  const { constantCache } = context;\\n  switch (node.type) {\\n    case 1:\\n      if (node.tagType !== 0) {\\n        return 0;\\n      }\\n      const cached = constantCache.get(node);\\n      if (cached !== void 0) {\\n        return cached;\\n      }\\n      const codegenNode = node.codegenNode;\\n      if (codegenNode.type !== 13) {\\n        return 0;\\n      }\\n      if (codegenNode.isBlock && node.tag !== \\\"svg\\\" && node.tag !== \\\"foreignObject\\\") {\\n        return 0;\\n      }\\n      const flag = getPatchFlag(codegenNode);\\n      if (!flag) {\\n        let returnType2 = 3;\\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\\n        if (generatedPropsType === 0) {\\n          constantCache.set(node, 0);\\n          return 0;\\n        }\\n        if (generatedPropsType < returnType2) {\\n          returnType2 = generatedPropsType;\\n        }\\n        for (let i = 0; i < node.children.length; i++) {\\n          const childType = getConstantType(node.children[i], context);\\n          if (childType === 0) {\\n            constantCache.set(node, 0);\\n            return 0;\\n          }\\n          if (childType < returnType2) {\\n            returnType2 = childType;\\n          }\\n        }\\n        if (returnType2 > 1) {\\n          for (let i = 0; i < node.props.length; i++) {\\n            const p = node.props[i];\\n            if (p.type === 7 && p.name === \\\"bind\\\" && p.exp) {\\n              const expType = getConstantType(p.exp, context);\\n              if (expType === 0) {\\n                constantCache.set(node, 0);\\n                return 0;\\n              }\\n              if (expType < returnType2) {\\n                returnType2 = expType;\\n              }\\n            }\\n          }\\n        }\\n        if (codegenNode.isBlock) {\\n          for (let i = 0; i < node.props.length; i++) {\\n            const p = node.props[i];\\n            if (p.type === 7) {\\n              constantCache.set(node, 0);\\n              return 0;\\n            }\\n          }\\n          context.removeHelper(OPEN_BLOCK);\\n          context.removeHelper(\\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\\n          );\\n          codegenNode.isBlock = false;\\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\\n        }\\n        constantCache.set(node, returnType2);\\n        return returnType2;\\n      } else {\\n        constantCache.set(node, 0);\\n        return 0;\\n      }\\n    case 2:\\n    case 3:\\n      return 3;\\n    case 9:\\n    case 11:\\n    case 10:\\n      return 0;\\n    case 5:\\n    case 12:\\n      return getConstantType(node.content, context);\\n    case 4:\\n      return node.constType;\\n    case 8:\\n      let returnType = 3;\\n      for (let i = 0; i < node.children.length; i++) {\\n        const child = node.children[i];\\n        if (shared.isString(child) || shared.isSymbol(child)) {\\n          continue;\\n        }\\n        const childType = getConstantType(child, context);\\n        if (childType === 0) {\\n          return 0;\\n        } else if (childType < returnType) {\\n          returnType = childType;\\n        }\\n      }\\n      return returnType;\\n    default:\\n      return 0;\\n  }\\n}\\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\\n  NORMALIZE_CLASS,\\n  NORMALIZE_STYLE,\\n  NORMALIZE_PROPS,\\n  GUARD_REACTIVE_PROPS\\n]);\\nfunction getConstantTypeOfHelperCall(value, context) {\\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\\n    const arg = value.arguments[0];\\n    if (arg.type === 4) {\\n      return getConstantType(arg, context);\\n    } else if (arg.type === 14) {\\n      return getConstantTypeOfHelperCall(arg, context);\\n    }\\n  }\\n  return 0;\\n}\\nfunction getGeneratedPropsConstantType(node, context) {\\n  let returnType = 3;\\n  const props = getNodeProps(node);\\n  if (props && props.type === 15) {\\n    const { properties } = props;\\n    for (let i = 0; i < properties.length; i++) {\\n      const { key, value } = properties[i];\\n      const keyType = getConstantType(key, context);\\n      if (keyType === 0) {\\n        return keyType;\\n      }\\n      if (keyType < returnType) {\\n        returnType = keyType;\\n      }\\n      let valueType;\\n      if (value.type === 4) {\\n        valueType = getConstantType(value, context);\\n      } else if (value.type === 14) {\\n        valueType = getConstantTypeOfHelperCall(value, context);\\n      } else {\\n        valueType = 0;\\n      }\\n      if (valueType === 0) {\\n        return valueType;\\n      }\\n      if (valueType < returnType) {\\n        returnType = valueType;\\n      }\\n    }\\n  }\\n  return returnType;\\n}\\nfunction getNodeProps(node) {\\n  const codegenNode = node.codegenNode;\\n  if (codegenNode.type === 13) {\\n    return codegenNode.props;\\n  }\\n}\\nfunction getPatchFlag(node) {\\n  const flag = node.patchFlag;\\n  return flag ? parseInt(flag, 10) : void 0;\\n}\\n\\nfunction createTransformContext(root, {\\n  filename = \\\"\\\",\\n  prefixIdentifiers = false,\\n  hoistStatic: hoistStatic2 = false,\\n  hmr = false,\\n  cacheHandlers = false,\\n  nodeTransforms = [],\\n  directiveTransforms = {},\\n  transformHoist = null,\\n  isBuiltInComponent = shared.NOOP,\\n  isCustomElement = shared.NOOP,\\n  expressionPlugins = [],\\n  scopeId = null,\\n  slotted = true,\\n  ssr = false,\\n  inSSR = false,\\n  ssrCssVars = ``,\\n  bindingMetadata = shared.EMPTY_OBJ,\\n  inline = false,\\n  isTS = false,\\n  onError = defaultOnError,\\n  onWarn = defaultOnWarn,\\n  compatConfig\\n}) {\\n  const nameMatch = filename.replace(/\\\\?.*$/, \\\"\\\").match(/([^/\\\\\\\\]+)\\\\.\\\\w+$/);\\n  const context = {\\n    // options\\n    filename,\\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\\n    prefixIdentifiers,\\n    hoistStatic: hoistStatic2,\\n    hmr,\\n    cacheHandlers,\\n    nodeTransforms,\\n    directiveTransforms,\\n    transformHoist,\\n    isBuiltInComponent,\\n    isCustomElement,\\n    expressionPlugins,\\n    scopeId,\\n    slotted,\\n    ssr,\\n    inSSR,\\n    ssrCssVars,\\n    bindingMetadata,\\n    inline,\\n    isTS,\\n    onError,\\n    onWarn,\\n    compatConfig,\\n    // state\\n    root,\\n    helpers: /* @__PURE__ */ new Map(),\\n    components: /* @__PURE__ */ new Set(),\\n    directives: /* @__PURE__ */ new Set(),\\n    hoists: [],\\n    imports: [],\\n    constantCache: /* @__PURE__ */ new WeakMap(),\\n    temps: 0,\\n    cached: 0,\\n    identifiers: /* @__PURE__ */ Object.create(null),\\n    scopes: {\\n      vFor: 0,\\n      vSlot: 0,\\n      vPre: 0,\\n      vOnce: 0\\n    },\\n    parent: null,\\n    currentNode: root,\\n    childIndex: 0,\\n    inVOnce: false,\\n    // methods\\n    helper(name) {\\n      const count = context.helpers.get(name) || 0;\\n      context.helpers.set(name, count + 1);\\n      return name;\\n    },\\n    removeHelper(name) {\\n      const count = context.helpers.get(name);\\n      if (count) {\\n        const currentCount = count - 1;\\n        if (!currentCount) {\\n          context.helpers.delete(name);\\n        } else {\\n          context.helpers.set(name, currentCount);\\n        }\\n      }\\n    },\\n    helperString(name) {\\n      return `_${helperNameMap[context.helper(name)]}`;\\n    },\\n    replaceNode(node) {\\n      context.parent.children[context.childIndex] = context.currentNode = node;\\n    },\\n    removeNode(node) {\\n      const list = context.parent.children;\\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\\n      if (!node || node === context.currentNode) {\\n        context.currentNode = null;\\n        context.onNodeRemoved();\\n      } else {\\n        if (context.childIndex > removalIndex) {\\n          context.childIndex--;\\n          context.onNodeRemoved();\\n        }\\n      }\\n      context.parent.children.splice(removalIndex, 1);\\n    },\\n    onNodeRemoved: shared.NOOP,\\n    addIdentifiers(exp) {\\n      {\\n        if (shared.isString(exp)) {\\n          addId(exp);\\n        } else if (exp.identifiers) {\\n          exp.identifiers.forEach(addId);\\n        } else if (exp.type === 4) {\\n          addId(exp.content);\\n        }\\n      }\\n    },\\n    removeIdentifiers(exp) {\\n      {\\n        if (shared.isString(exp)) {\\n          removeId(exp);\\n        } else if (exp.identifiers) {\\n          exp.identifiers.forEach(removeId);\\n        } else if (exp.type === 4) {\\n          removeId(exp.content);\\n        }\\n      }\\n    },\\n    hoist(exp) {\\n      if (shared.isString(exp))\\n        exp = createSimpleExpression(exp);\\n      context.hoists.push(exp);\\n      const identifier = createSimpleExpression(\\n        `_hoisted_${context.hoists.length}`,\\n        false,\\n        exp.loc,\\n        2\\n      );\\n      identifier.hoisted = exp;\\n      return identifier;\\n    },\\n    cache(exp, isVNode = false) {\\n      return createCacheExpression(context.cached++, exp, isVNode);\\n    }\\n  };\\n  {\\n    context.filters = /* @__PURE__ */ new Set();\\n  }\\n  function addId(id) {\\n    const { identifiers } = context;\\n    if (identifiers[id] === void 0) {\\n      identifiers[id] = 0;\\n    }\\n    identifiers[id]++;\\n  }\\n  function removeId(id) {\\n    context.identifiers[id]--;\\n  }\\n  return context;\\n}\\nfunction transform(root, options) {\\n  const context = createTransformContext(root, options);\\n  traverseNode(root, context);\\n  if (options.hoistStatic) {\\n    hoistStatic(root, context);\\n  }\\n  if (!options.ssr) {\\n    createRootCodegen(root, context);\\n  }\\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\\n  root.components = [...context.components];\\n  root.directives = [...context.directives];\\n  root.imports = context.imports;\\n  root.hoists = context.hoists;\\n  root.temps = context.temps;\\n  root.cached = context.cached;\\n  root.transformed = true;\\n  {\\n    root.filters = [...context.filters];\\n  }\\n}\\nfunction createRootCodegen(root, context) {\\n  const { helper } = context;\\n  const { children } = root;\\n  if (children.length === 1) {\\n    const child = children[0];\\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\\n      const codegenNode = child.codegenNode;\\n      if (codegenNode.type === 13) {\\n        convertToBlock(codegenNode, context);\\n      }\\n      root.codegenNode = codegenNode;\\n    } else {\\n      root.codegenNode = child;\\n    }\\n  } else if (children.length > 1) {\\n    let patchFlag = 64;\\n    shared.PatchFlagNames[64];\\n    root.codegenNode = createVNodeCall(\\n      context,\\n      helper(FRAGMENT),\\n      void 0,\\n      root.children,\\n      patchFlag + (``),\\n      void 0,\\n      void 0,\\n      true,\\n      void 0,\\n      false\\n    );\\n  } else ;\\n}\\nfunction traverseChildren(parent, context) {\\n  let i = 0;\\n  const nodeRemoved = () => {\\n    i--;\\n  };\\n  for (; i < parent.children.length; i++) {\\n    const child = parent.children[i];\\n    if (shared.isString(child))\\n      continue;\\n    context.parent = parent;\\n    context.childIndex = i;\\n    context.onNodeRemoved = nodeRemoved;\\n    traverseNode(child, context);\\n  }\\n}\\nfunction traverseNode(node, context) {\\n  context.currentNode = node;\\n  const { nodeTransforms } = context;\\n  const exitFns = [];\\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\\n    const onExit = nodeTransforms[i2](node, context);\\n    if (onExit) {\\n      if (shared.isArray(onExit)) {\\n        exitFns.push(...onExit);\\n      } else {\\n        exitFns.push(onExit);\\n      }\\n    }\\n    if (!context.currentNode) {\\n      return;\\n    } else {\\n      node = context.currentNode;\\n    }\\n  }\\n  switch (node.type) {\\n    case 3:\\n      if (!context.ssr) {\\n        context.helper(CREATE_COMMENT);\\n      }\\n      break;\\n    case 5:\\n      if (!context.ssr) {\\n        context.helper(TO_DISPLAY_STRING);\\n      }\\n      break;\\n    case 9:\\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\\n        traverseNode(node.branches[i2], context);\\n      }\\n      break;\\n    case 10:\\n    case 11:\\n    case 1:\\n    case 0:\\n      traverseChildren(node, context);\\n      break;\\n  }\\n  context.currentNode = node;\\n  let i = exitFns.length;\\n  while (i--) {\\n    exitFns[i]();\\n  }\\n}\\nfunction createStructuralDirectiveTransform(name, fn) {\\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\\n  return (node, context) => {\\n    if (node.type === 1) {\\n      const { props } = node;\\n      if (node.tagType === 3 && props.some(isVSlot)) {\\n        return;\\n      }\\n      const exitFns = [];\\n      for (let i = 0; i < props.length; i++) {\\n        const prop = props[i];\\n        if (prop.type === 7 && matches(prop.name)) {\\n          props.splice(i, 1);\\n          i--;\\n          const onExit = fn(node, prop, context);\\n          if (onExit)\\n            exitFns.push(onExit);\\n        }\\n      }\\n      return exitFns;\\n    }\\n  };\\n}\\n\\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\\nfunction createCodegenContext(ast, {\\n  mode = \\\"function\\\",\\n  prefixIdentifiers = mode === \\\"module\\\",\\n  sourceMap = false,\\n  filename = `template.vue.html`,\\n  scopeId = null,\\n  optimizeImports = false,\\n  runtimeGlobalName = `Vue`,\\n  runtimeModuleName = `vue`,\\n  ssrRuntimeModuleName = \\\"vue/server-renderer\\\",\\n  ssr = false,\\n  isTS = false,\\n  inSSR = false\\n}) {\\n  const context = {\\n    mode,\\n    prefixIdentifiers,\\n    sourceMap,\\n    filename,\\n    scopeId,\\n    optimizeImports,\\n    runtimeGlobalName,\\n    runtimeModuleName,\\n    ssrRuntimeModuleName,\\n    ssr,\\n    isTS,\\n    inSSR,\\n    source: ast.source,\\n    code: ``,\\n    column: 1,\\n    line: 1,\\n    offset: 0,\\n    indentLevel: 0,\\n    pure: false,\\n    map: void 0,\\n    helper(key) {\\n      return `_${helperNameMap[key]}`;\\n    },\\n    push(code, newlineIndex = -2 /* None */, node) {\\n      context.code += code;\\n      if (context.map) {\\n        if (node) {\\n          let name;\\n          if (node.type === 4 && !node.isStatic) {\\n            const content = node.content.replace(/^_ctx\\\\./, \\\"\\\");\\n            if (content !== node.content && isSimpleIdentifier(content)) {\\n              name = content;\\n            }\\n          }\\n          addMapping(node.loc.start, name);\\n        }\\n        if (newlineIndex === -3 /* Unknown */) {\\n          advancePositionWithMutation(context, code);\\n        } else {\\n          context.offset += code.length;\\n          if (newlineIndex === -2 /* None */) {\\n            context.column += code.length;\\n          } else {\\n            if (newlineIndex === -1 /* End */) {\\n              newlineIndex = code.length - 1;\\n            }\\n            context.line++;\\n            context.column = code.length - newlineIndex;\\n          }\\n        }\\n        if (node && node.loc !== locStub) {\\n          addMapping(node.loc.end);\\n        }\\n      }\\n    },\\n    indent() {\\n      newline(++context.indentLevel);\\n    },\\n    deindent(withoutNewLine = false) {\\n      if (withoutNewLine) {\\n        --context.indentLevel;\\n      } else {\\n        newline(--context.indentLevel);\\n      }\\n    },\\n    newline() {\\n      newline(context.indentLevel);\\n    }\\n  };\\n  function newline(n) {\\n    context.push(\\\"\\\\n\\\" + `  `.repeat(n), 0 /* Start */);\\n  }\\n  function addMapping(loc, name = null) {\\n    const { _names, _mappings } = context.map;\\n    if (name !== null && !_names.has(name))\\n      _names.add(name);\\n    _mappings.add({\\n      originalLine: loc.line,\\n      originalColumn: loc.column - 1,\\n      // source-map column is 0 based\\n      generatedLine: context.line,\\n      generatedColumn: context.column - 1,\\n      source: filename,\\n      // @ts-expect-error it is possible to be null\\n      name\\n    });\\n  }\\n  if (sourceMap) {\\n    context.map = new sourceMapJs.SourceMapGenerator();\\n    context.map.setSourceContent(filename, context.source);\\n    context.map._sources.add(filename);\\n  }\\n  return context;\\n}\\nfunction generate(ast, options = {}) {\\n  const context = createCodegenContext(ast, options);\\n  if (options.onContextCreated)\\n    options.onContextCreated(context);\\n  const {\\n    mode,\\n    push,\\n    prefixIdentifiers,\\n    indent,\\n    deindent,\\n    newline,\\n    scopeId,\\n    ssr\\n  } = context;\\n  const helpers = Array.from(ast.helpers);\\n  const hasHelpers = helpers.length > 0;\\n  const useWithBlock = !prefixIdentifiers && mode !== \\\"module\\\";\\n  const genScopeId = scopeId != null && mode === \\\"module\\\";\\n  const isSetupInlined = !!options.inline;\\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\\n  if (mode === \\\"module\\\") {\\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\\n  } else {\\n    genFunctionPreamble(ast, preambleContext);\\n  }\\n  const functionName = ssr ? `ssrRender` : `render`;\\n  const args = ssr ? [\\\"_ctx\\\", \\\"_push\\\", \\\"_parent\\\", \\\"_attrs\\\"] : [\\\"_ctx\\\", \\\"_cache\\\"];\\n  if (options.bindingMetadata && !options.inline) {\\n    args.push(\\\"$props\\\", \\\"$setup\\\", \\\"$data\\\", \\\"$options\\\");\\n  }\\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\\\",\\\") : args.join(\\\", \\\");\\n  if (isSetupInlined) {\\n    push(`(${signature}) => {`);\\n  } else {\\n    push(`function ${functionName}(${signature}) {`);\\n  }\\n  indent();\\n  if (useWithBlock) {\\n    push(`with (_ctx) {`);\\n    indent();\\n    if (hasHelpers) {\\n      push(\\n        `const { ${helpers.map(aliasHelper).join(\\\", \\\")} } = _Vue\\n`,\\n        -1 /* End */\\n      );\\n      newline();\\n    }\\n  }\\n  if (ast.components.length) {\\n    genAssets(ast.components, \\\"component\\\", context);\\n    if (ast.directives.length || ast.temps > 0) {\\n      newline();\\n    }\\n  }\\n  if (ast.directives.length) {\\n    genAssets(ast.directives, \\\"directive\\\", context);\\n    if (ast.temps > 0) {\\n      newline();\\n    }\\n  }\\n  if (ast.filters && ast.filters.length) {\\n    newline();\\n    genAssets(ast.filters, \\\"filter\\\", context);\\n    newline();\\n  }\\n  if (ast.temps > 0) {\\n    push(`let `);\\n    for (let i = 0; i < ast.temps; i++) {\\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\\n    }\\n  }\\n  if (ast.components.length || ast.directives.length || ast.temps) {\\n    push(`\\n`, 0 /* Start */);\\n    newline();\\n  }\\n  if (!ssr) {\\n    push(`return `);\\n  }\\n  if (ast.codegenNode) {\\n    genNode(ast.codegenNode, context);\\n  } else {\\n    push(`null`);\\n  }\\n  if (useWithBlock) {\\n    deindent();\\n    push(`}`);\\n  }\\n  deindent();\\n  push(`}`);\\n  return {\\n    ast,\\n    code: context.code,\\n    preamble: isSetupInlined ? preambleContext.code : ``,\\n    map: context.map ? context.map.toJSON() : void 0\\n  };\\n}\\nfunction genFunctionPreamble(ast, context) {\\n  const {\\n    ssr,\\n    prefixIdentifiers,\\n    push,\\n    newline,\\n    runtimeModuleName,\\n    runtimeGlobalName,\\n    ssrRuntimeModuleName\\n  } = context;\\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\\n  const helpers = Array.from(ast.helpers);\\n  if (helpers.length > 0) {\\n    if (prefixIdentifiers) {\\n      push(\\n        `const { ${helpers.map(aliasHelper).join(\\\", \\\")} } = ${VueBinding}\\n`,\\n        -1 /* End */\\n      );\\n    } else {\\n      push(`const _Vue = ${VueBinding}\\n`, -1 /* End */);\\n      if (ast.hoists.length) {\\n        const staticHelpers = [\\n          CREATE_VNODE,\\n          CREATE_ELEMENT_VNODE,\\n          CREATE_COMMENT,\\n          CREATE_TEXT,\\n          CREATE_STATIC\\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\\\", \\\");\\n        push(`const { ${staticHelpers} } = _Vue\\n`, -1 /* End */);\\n      }\\n    }\\n  }\\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\\n    push(\\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\\\", \\\")} } = require(\\\"${ssrRuntimeModuleName}\\\")\\n`,\\n      -1 /* End */\\n    );\\n  }\\n  genHoists(ast.hoists, context);\\n  newline();\\n  push(`return `);\\n}\\nfunction genModulePreamble(ast, context, genScopeId, inline) {\\n  const {\\n    push,\\n    newline,\\n    optimizeImports,\\n    runtimeModuleName,\\n    ssrRuntimeModuleName\\n  } = context;\\n  if (genScopeId && ast.hoists.length) {\\n    ast.helpers.add(PUSH_SCOPE_ID);\\n    ast.helpers.add(POP_SCOPE_ID);\\n  }\\n  if (ast.helpers.size) {\\n    const helpers = Array.from(ast.helpers);\\n    if (optimizeImports) {\\n      push(\\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\\\", \\\")} } from ${JSON.stringify(runtimeModuleName)}\\n`,\\n        -1 /* End */\\n      );\\n      push(\\n        `\\n// Binding optimization for webpack code-split\\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\\\", \\\")}\\n`,\\n        -1 /* End */\\n      );\\n    } else {\\n      push(\\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\\\", \\\")} } from ${JSON.stringify(runtimeModuleName)}\\n`,\\n        -1 /* End */\\n      );\\n    }\\n  }\\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\\n    push(\\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\\\", \\\")} } from \\\"${ssrRuntimeModuleName}\\\"\\n`,\\n      -1 /* End */\\n    );\\n  }\\n  if (ast.imports.length) {\\n    genImports(ast.imports, context);\\n    newline();\\n  }\\n  genHoists(ast.hoists, context);\\n  newline();\\n  if (!inline) {\\n    push(`export `);\\n  }\\n}\\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\\n  const resolver = helper(\\n    type === \\\"filter\\\" ? RESOLVE_FILTER : type === \\\"component\\\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\\n  );\\n  for (let i = 0; i < assets.length; i++) {\\n    let id = assets[i];\\n    const maybeSelfReference = id.endsWith(\\\"__self\\\");\\n    if (maybeSelfReference) {\\n      id = id.slice(0, -6);\\n    }\\n    push(\\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\\n    );\\n    if (i < assets.length - 1) {\\n      newline();\\n    }\\n  }\\n}\\nfunction genHoists(hoists, context) {\\n  if (!hoists.length) {\\n    return;\\n  }\\n  context.pure = true;\\n  const { push, newline, helper, scopeId, mode } = context;\\n  const genScopeId = scopeId != null && mode !== \\\"function\\\";\\n  newline();\\n  if (genScopeId) {\\n    push(\\n      `const _withScopeId = n => (${helper(\\n        PUSH_SCOPE_ID\\n      )}(\\\"${scopeId}\\\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\\n    );\\n    newline();\\n  }\\n  for (let i = 0; i < hoists.length; i++) {\\n    const exp = hoists[i];\\n    if (exp) {\\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\\n      push(\\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\\n      );\\n      genNode(exp, context);\\n      if (needScopeIdWrapper) {\\n        push(`)`);\\n      }\\n      newline();\\n    }\\n  }\\n  context.pure = false;\\n}\\nfunction genImports(importsOptions, context) {\\n  if (!importsOptions.length) {\\n    return;\\n  }\\n  importsOptions.forEach((imports) => {\\n    context.push(`import `);\\n    genNode(imports.exp, context);\\n    context.push(` from '${imports.path}'`);\\n    context.newline();\\n  });\\n}\\nfunction isText(n) {\\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\\n}\\nfunction genNodeListAsArray(nodes, context) {\\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\\n  context.push(`[`);\\n  multilines && context.indent();\\n  genNodeList(nodes, context, multilines);\\n  multilines && context.deindent();\\n  context.push(`]`);\\n}\\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\\n  const { push, newline } = context;\\n  for (let i = 0; i < nodes.length; i++) {\\n    const node = nodes[i];\\n    if (shared.isString(node)) {\\n      push(node, -3 /* Unknown */);\\n    } else if (shared.isArray(node)) {\\n      genNodeListAsArray(node, context);\\n    } else {\\n      genNode(node, context);\\n    }\\n    if (i < nodes.length - 1) {\\n      if (multilines) {\\n        comma && push(\\\",\\\");\\n        newline();\\n      } else {\\n        comma && push(\\\", \\\");\\n      }\\n    }\\n  }\\n}\\nfunction genNode(node, context) {\\n  if (shared.isString(node)) {\\n    context.push(node, -3 /* Unknown */);\\n    return;\\n  }\\n  if (shared.isSymbol(node)) {\\n    context.push(context.helper(node));\\n    return;\\n  }\\n  switch (node.type) {\\n    case 1:\\n    case 9:\\n    case 11:\\n      genNode(node.codegenNode, context);\\n      break;\\n    case 2:\\n      genText(node, context);\\n      break;\\n    case 4:\\n      genExpression(node, context);\\n      break;\\n    case 5:\\n      genInterpolation(node, context);\\n      break;\\n    case 12:\\n      genNode(node.codegenNode, context);\\n      break;\\n    case 8:\\n      genCompoundExpression(node, context);\\n      break;\\n    case 3:\\n      genComment(node, context);\\n      break;\\n    case 13:\\n      genVNodeCall(node, context);\\n      break;\\n    case 14:\\n      genCallExpression(node, context);\\n      break;\\n    case 15:\\n      genObjectExpression(node, context);\\n      break;\\n    case 17:\\n      genArrayExpression(node, context);\\n      break;\\n    case 18:\\n      genFunctionExpression(node, context);\\n      break;\\n    case 19:\\n      genConditionalExpression(node, context);\\n      break;\\n    case 20:\\n      genCacheExpression(node, context);\\n      break;\\n    case 21:\\n      genNodeList(node.body, context, true, false);\\n      break;\\n    case 22:\\n      genTemplateLiteral(node, context);\\n      break;\\n    case 23:\\n      genIfStatement(node, context);\\n      break;\\n    case 24:\\n      genAssignmentExpression(node, context);\\n      break;\\n    case 25:\\n      genSequenceExpression(node, context);\\n      break;\\n    case 26:\\n      genReturnStatement(node, context);\\n      break;\\n  }\\n}\\nfunction genText(node, context) {\\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\\n}\\nfunction genExpression(node, context) {\\n  const { content, isStatic } = node;\\n  context.push(\\n    isStatic ? JSON.stringify(content) : content,\\n    -3 /* Unknown */,\\n    node\\n  );\\n}\\nfunction genInterpolation(node, context) {\\n  const { push, helper, pure } = context;\\n  if (pure)\\n    push(PURE_ANNOTATION);\\n  push(`${helper(TO_DISPLAY_STRING)}(`);\\n  genNode(node.content, context);\\n  push(`)`);\\n}\\nfunction genCompoundExpression(node, context) {\\n  for (let i = 0; i < node.children.length; i++) {\\n    const child = node.children[i];\\n    if (shared.isString(child)) {\\n      context.push(child, -3 /* Unknown */);\\n    } else {\\n      genNode(child, context);\\n    }\\n  }\\n}\\nfunction genExpressionAsPropertyKey(node, context) {\\n  const { push } = context;\\n  if (node.type === 8) {\\n    push(`[`);\\n    genCompoundExpression(node, context);\\n    push(`]`);\\n  } else if (node.isStatic) {\\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\\n    push(text, -2 /* None */, node);\\n  } else {\\n    push(`[${node.content}]`, -3 /* Unknown */, node);\\n  }\\n}\\nfunction genComment(node, context) {\\n  const { push, helper, pure } = context;\\n  if (pure) {\\n    push(PURE_ANNOTATION);\\n  }\\n  push(\\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\\n    -3 /* Unknown */,\\n    node\\n  );\\n}\\nfunction genVNodeCall(node, context) {\\n  const { push, helper, pure } = context;\\n  const {\\n    tag,\\n    props,\\n    children,\\n    patchFlag,\\n    dynamicProps,\\n    directives,\\n    isBlock,\\n    disableTracking,\\n    isComponent\\n  } = node;\\n  if (directives) {\\n    push(helper(WITH_DIRECTIVES) + `(`);\\n  }\\n  if (isBlock) {\\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\\n  }\\n  if (pure) {\\n    push(PURE_ANNOTATION);\\n  }\\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\\n  push(helper(callHelper) + `(`, -2 /* None */, node);\\n  genNodeList(\\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\\n    context\\n  );\\n  push(`)`);\\n  if (isBlock) {\\n    push(`)`);\\n  }\\n  if (directives) {\\n    push(`, `);\\n    genNode(directives, context);\\n    push(`)`);\\n  }\\n}\\nfunction genNullableArgs(args) {\\n  let i = args.length;\\n  while (i--) {\\n    if (args[i] != null)\\n      break;\\n  }\\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\\n}\\nfunction genCallExpression(node, context) {\\n  const { push, helper, pure } = context;\\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\\n  if (pure) {\\n    push(PURE_ANNOTATION);\\n  }\\n  push(callee + `(`, -2 /* None */, node);\\n  genNodeList(node.arguments, context);\\n  push(`)`);\\n}\\nfunction genObjectExpression(node, context) {\\n  const { push, indent, deindent, newline } = context;\\n  const { properties } = node;\\n  if (!properties.length) {\\n    push(`{}`, -2 /* None */, node);\\n    return;\\n  }\\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\\n  push(multilines ? `{` : `{ `);\\n  multilines && indent();\\n  for (let i = 0; i < properties.length; i++) {\\n    const { key, value } = properties[i];\\n    genExpressionAsPropertyKey(key, context);\\n    push(`: `);\\n    genNode(value, context);\\n    if (i < properties.length - 1) {\\n      push(`,`);\\n      newline();\\n    }\\n  }\\n  multilines && deindent();\\n  push(multilines ? `}` : ` }`);\\n}\\nfunction genArrayExpression(node, context) {\\n  genNodeListAsArray(node.elements, context);\\n}\\nfunction genFunctionExpression(node, context) {\\n  const { push, indent, deindent } = context;\\n  const { params, returns, body, newline, isSlot } = node;\\n  if (isSlot) {\\n    push(`_${helperNameMap[WITH_CTX]}(`);\\n  }\\n  push(`(`, -2 /* None */, node);\\n  if (shared.isArray(params)) {\\n    genNodeList(params, context);\\n  } else if (params) {\\n    genNode(params, context);\\n  }\\n  push(`) => `);\\n  if (newline || body) {\\n    push(`{`);\\n    indent();\\n  }\\n  if (returns) {\\n    if (newline) {\\n      push(`return `);\\n    }\\n    if (shared.isArray(returns)) {\\n      genNodeListAsArray(returns, context);\\n    } else {\\n      genNode(returns, context);\\n    }\\n  } else if (body) {\\n    genNode(body, context);\\n  }\\n  if (newline || body) {\\n    deindent();\\n    push(`}`);\\n  }\\n  if (isSlot) {\\n    if (node.isNonScopedSlot) {\\n      push(`, undefined, true`);\\n    }\\n    push(`)`);\\n  }\\n}\\nfunction genConditionalExpression(node, context) {\\n  const { test, consequent, alternate, newline: needNewline } = node;\\n  const { push, indent, deindent, newline } = context;\\n  if (test.type === 4) {\\n    const needsParens = !isSimpleIdentifier(test.content);\\n    needsParens && push(`(`);\\n    genExpression(test, context);\\n    needsParens && push(`)`);\\n  } else {\\n    push(`(`);\\n    genNode(test, context);\\n    push(`)`);\\n  }\\n  needNewline && indent();\\n  context.indentLevel++;\\n  needNewline || push(` `);\\n  push(`? `);\\n  genNode(consequent, context);\\n  context.indentLevel--;\\n  needNewline && newline();\\n  needNewline || push(` `);\\n  push(`: `);\\n  const isNested = alternate.type === 19;\\n  if (!isNested) {\\n    context.indentLevel++;\\n  }\\n  genNode(alternate, context);\\n  if (!isNested) {\\n    context.indentLevel--;\\n  }\\n  needNewline && deindent(\\n    true\\n    /* without newline */\\n  );\\n}\\nfunction genCacheExpression(node, context) {\\n  const { push, helper, indent, deindent, newline } = context;\\n  push(`_cache[${node.index}] || (`);\\n  if (node.isVNode) {\\n    indent();\\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\\n    newline();\\n  }\\n  push(`_cache[${node.index}] = `);\\n  genNode(node.value, context);\\n  if (node.isVNode) {\\n    push(`,`);\\n    newline();\\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\\n    newline();\\n    push(`_cache[${node.index}]`);\\n    deindent();\\n  }\\n  push(`)`);\\n}\\nfunction genTemplateLiteral(node, context) {\\n  const { push, indent, deindent } = context;\\n  push(\\\"`\\\");\\n  const l = node.elements.length;\\n  const multilines = l > 3;\\n  for (let i = 0; i < l; i++) {\\n    const e = node.elements[i];\\n    if (shared.isString(e)) {\\n      push(e.replace(/(`|\\\\$|\\\\\\\\)/g, \\\"\\\\\\\\$1\\\"), -3 /* Unknown */);\\n    } else {\\n      push(\\\"${\\\");\\n      if (multilines)\\n        indent();\\n      genNode(e, context);\\n      if (multilines)\\n        deindent();\\n      push(\\\"}\\\");\\n    }\\n  }\\n  push(\\\"`\\\");\\n}\\nfunction genIfStatement(node, context) {\\n  const { push, indent, deindent } = context;\\n  const { test, consequent, alternate } = node;\\n  push(`if (`);\\n  genNode(test, context);\\n  push(`) {`);\\n  indent();\\n  genNode(consequent, context);\\n  deindent();\\n  push(`}`);\\n  if (alternate) {\\n    push(` else `);\\n    if (alternate.type === 23) {\\n      genIfStatement(alternate, context);\\n    } else {\\n      push(`{`);\\n      indent();\\n      genNode(alternate, context);\\n      deindent();\\n      push(`}`);\\n    }\\n  }\\n}\\nfunction genAssignmentExpression(node, context) {\\n  genNode(node.left, context);\\n  context.push(` = `);\\n  genNode(node.right, context);\\n}\\nfunction genSequenceExpression(node, context) {\\n  context.push(`(`);\\n  genNodeList(node.expressions, context);\\n  context.push(`)`);\\n}\\nfunction genReturnStatement({ returns }, context) {\\n  context.push(`return `);\\n  if (shared.isArray(returns)) {\\n    genNodeListAsArray(returns, context);\\n  } else {\\n    genNode(returns, context);\\n  }\\n}\\n\\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\\\"true,false,null,this\\\");\\nconst constantBailRE = /\\\\w\\\\s*\\\\(|\\\\.[^\\\\d]/;\\nconst transformExpression = (node, context) => {\\n  if (node.type === 5) {\\n    node.content = processExpression(\\n      node.content,\\n      context\\n    );\\n  } else if (node.type === 1) {\\n    for (let i = 0; i < node.props.length; i++) {\\n      const dir = node.props[i];\\n      if (dir.type === 7 && dir.name !== \\\"for\\\") {\\n        const exp = dir.exp;\\n        const arg = dir.arg;\\n        if (exp && exp.type === 4 && !(dir.name === \\\"on\\\" && arg)) {\\n          dir.exp = processExpression(\\n            exp,\\n            context,\\n            // slot args must be processed as function params\\n            dir.name === \\\"slot\\\"\\n          );\\n        }\\n        if (arg && arg.type === 4 && !arg.isStatic) {\\n          dir.arg = processExpression(arg, context);\\n        }\\n      }\\n    }\\n  }\\n};\\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\\n  if (!context.prefixIdentifiers || !node.content.trim()) {\\n    return node;\\n  }\\n  const { inline, bindingMetadata } = context;\\n  const rewriteIdentifier = (raw, parent, id) => {\\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\\n    if (inline) {\\n      const isAssignmentLVal = parent && parent.type === \\\"AssignmentExpression\\\" && parent.left === id;\\n      const isUpdateArg = parent && parent.type === \\\"UpdateExpression\\\" && parent.argument === id;\\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\\n      const isNewExpression = parent && isInNewExpression(parentStack);\\n      const wrapWithUnref = (raw2) => {\\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\\n        return isNewExpression ? `(${wrapped})` : wrapped;\\n      };\\n      if (isConst(type) || type === \\\"setup-reactive-const\\\" || localVars[raw]) {\\n        return raw;\\n      } else if (type === \\\"setup-ref\\\") {\\n        return `${raw}.value`;\\n      } else if (type === \\\"setup-maybe-ref\\\") {\\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\\n      } else if (type === \\\"setup-let\\\") {\\n        if (isAssignmentLVal) {\\n          const { right: rVal, operator } = parent;\\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\\n          const rExpString = stringifyExpression(\\n            processExpression(\\n              createSimpleExpression(rExp, false),\\n              context,\\n              false,\\n              false,\\n              knownIds\\n            )\\n          );\\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\\n        } else if (isUpdateArg) {\\n          id.start = parent.start;\\n          id.end = parent.end;\\n          const { prefix: isPrefix, operator } = parent;\\n          const prefix = isPrefix ? operator : ``;\\n          const postfix = isPrefix ? `` : operator;\\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\\n        } else if (isDestructureAssignment) {\\n          return raw;\\n        } else {\\n          return wrapWithUnref(raw);\\n        }\\n      } else if (type === \\\"props\\\") {\\n        return shared.genPropsAccessExp(raw);\\n      } else if (type === \\\"props-aliased\\\") {\\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\\n      }\\n    } else {\\n      if (type && type.startsWith(\\\"setup\\\") || type === \\\"literal-const\\\") {\\n        return `$setup.${raw}`;\\n      } else if (type === \\\"props-aliased\\\") {\\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\\n      } else if (type) {\\n        return `$${type}.${raw}`;\\n      }\\n    }\\n    return `_ctx.${raw}`;\\n  };\\n  const rawExp = node.content;\\n  const bailConstant = constantBailRE.test(rawExp);\\n  let ast = node.ast;\\n  if (ast === false) {\\n    return node;\\n  }\\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\\n    const isScopeVarReference = context.identifiers[rawExp];\\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\\n    const isLiteral = isLiteralWhitelisted(rawExp);\\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\\n      if (isConst(bindingMetadata[rawExp])) {\\n        node.constType = 1;\\n      }\\n      node.content = rewriteIdentifier(rawExp);\\n    } else if (!isScopeVarReference) {\\n      if (isLiteral) {\\n        node.constType = 3;\\n      } else {\\n        node.constType = 2;\\n      }\\n    }\\n    return node;\\n  }\\n  if (!ast) {\\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\\n    try {\\n      ast = parser.parse(source, {\\n        plugins: context.expressionPlugins\\n      }).program;\\n    } catch (e) {\\n      context.onError(\\n        createCompilerError(\\n          45,\\n          node.loc,\\n          void 0,\\n          e.message\\n        )\\n      );\\n      return node;\\n    }\\n  }\\n  const ids = [];\\n  const parentStack = [];\\n  const knownIds = Object.create(context.identifiers);\\n  walkIdentifiers(\\n    ast,\\n    (node2, parent, _, isReferenced, isLocal) => {\\n      if (isStaticPropertyKey(node2, parent)) {\\n        return;\\n      }\\n      if (node2.name.startsWith(\\\"_filter_\\\")) {\\n        return;\\n      }\\n      const needPrefix = isReferenced && canPrefix(node2);\\n      if (needPrefix && !isLocal) {\\n        if (isStaticProperty(parent) && parent.shorthand) {\\n          node2.prefix = `${node2.name}: `;\\n        }\\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\\n        ids.push(node2);\\n      } else {\\n        if (!(needPrefix && isLocal) && !bailConstant) {\\n          node2.isConstant = true;\\n        }\\n        ids.push(node2);\\n      }\\n    },\\n    true,\\n    // invoke on ALL identifiers\\n    parentStack,\\n    knownIds\\n  );\\n  const children = [];\\n  ids.sort((a, b) => a.start - b.start);\\n  ids.forEach((id, i) => {\\n    const start = id.start - 1;\\n    const end = id.end - 1;\\n    const last = ids[i - 1];\\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\\n    if (leadingText.length || id.prefix) {\\n      children.push(leadingText + (id.prefix || ``));\\n    }\\n    const source = rawExp.slice(start, end);\\n    children.push(\\n      createSimpleExpression(\\n        id.name,\\n        false,\\n        {\\n          start: advancePositionWithClone(node.loc.start, source, start),\\n          end: advancePositionWithClone(node.loc.start, source, end),\\n          source\\n        },\\n        id.isConstant ? 3 : 0\\n      )\\n    );\\n    if (i === ids.length - 1 && end < rawExp.length) {\\n      children.push(rawExp.slice(end));\\n    }\\n  });\\n  let ret;\\n  if (children.length) {\\n    ret = createCompoundExpression(children, node.loc);\\n    ret.ast = ast;\\n  } else {\\n    ret = node;\\n    ret.constType = bailConstant ? 0 : 3;\\n  }\\n  ret.identifiers = Object.keys(knownIds);\\n  return ret;\\n}\\nfunction canPrefix(id) {\\n  if (shared.isGloballyAllowed(id.name)) {\\n    return false;\\n  }\\n  if (id.name === \\\"require\\\") {\\n    return false;\\n  }\\n  return true;\\n}\\nfunction stringifyExpression(exp) {\\n  if (shared.isString(exp)) {\\n    return exp;\\n  } else if (exp.type === 4) {\\n    return exp.content;\\n  } else {\\n    return exp.children.map(stringifyExpression).join(\\\"\\\");\\n  }\\n}\\nfunction isConst(type) {\\n  return type === \\\"setup-const\\\" || type === \\\"literal-const\\\";\\n}\\n\\nconst transformIf = createStructuralDirectiveTransform(\\n  /^(if|else|else-if)$/,\\n  (node, dir, context) => {\\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\\n      const siblings = context.parent.children;\\n      let i = siblings.indexOf(ifNode);\\n      let key = 0;\\n      while (i-- >= 0) {\\n        const sibling = siblings[i];\\n        if (sibling && sibling.type === 9) {\\n          key += sibling.branches.length;\\n        }\\n      }\\n      return () => {\\n        if (isRoot) {\\n          ifNode.codegenNode = createCodegenNodeForBranch(\\n            branch,\\n            key,\\n            context\\n          );\\n        } else {\\n          const parentCondition = getParentCondition(ifNode.codegenNode);\\n          parentCondition.alternate = createCodegenNodeForBranch(\\n            branch,\\n            key + ifNode.branches.length - 1,\\n            context\\n          );\\n        }\\n      };\\n    });\\n  }\\n);\\nfunction processIf(node, dir, context, processCodegen) {\\n  if (dir.name !== \\\"else\\\" && (!dir.exp || !dir.exp.content.trim())) {\\n    const loc = dir.exp ? dir.exp.loc : node.loc;\\n    context.onError(\\n      createCompilerError(28, dir.loc)\\n    );\\n    dir.exp = createSimpleExpression(`true`, false, loc);\\n  }\\n  if (context.prefixIdentifiers && dir.exp) {\\n    dir.exp = processExpression(dir.exp, context);\\n  }\\n  if (dir.name === \\\"if\\\") {\\n    const branch = createIfBranch(node, dir);\\n    const ifNode = {\\n      type: 9,\\n      loc: node.loc,\\n      branches: [branch]\\n    };\\n    context.replaceNode(ifNode);\\n    if (processCodegen) {\\n      return processCodegen(ifNode, branch, true);\\n    }\\n  } else {\\n    const siblings = context.parent.children;\\n    let i = siblings.indexOf(node);\\n    while (i-- >= -1) {\\n      const sibling = siblings[i];\\n      if (sibling && sibling.type === 3) {\\n        context.removeNode(sibling);\\n        continue;\\n      }\\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\\n        context.removeNode(sibling);\\n        continue;\\n      }\\n      if (sibling && sibling.type === 9) {\\n        if (dir.name === \\\"else-if\\\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\\n          context.onError(\\n            createCompilerError(30, node.loc)\\n          );\\n        }\\n        context.removeNode();\\n        const branch = createIfBranch(node, dir);\\n        {\\n          const key = branch.userKey;\\n          if (key) {\\n            sibling.branches.forEach(({ userKey }) => {\\n              if (isSameKey(userKey, key)) {\\n                context.onError(\\n                  createCompilerError(\\n                    29,\\n                    branch.userKey.loc\\n                  )\\n                );\\n              }\\n            });\\n          }\\n        }\\n        sibling.branches.push(branch);\\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\\n        traverseNode(branch, context);\\n        if (onExit)\\n          onExit();\\n        context.currentNode = null;\\n      } else {\\n        context.onError(\\n          createCompilerError(30, node.loc)\\n        );\\n      }\\n      break;\\n    }\\n  }\\n}\\nfunction createIfBranch(node, dir) {\\n  const isTemplateIf = node.tagType === 3;\\n  return {\\n    type: 10,\\n    loc: node.loc,\\n    condition: dir.name === \\\"else\\\" ? void 0 : dir.exp,\\n    children: isTemplateIf && !findDir(node, \\\"for\\\") ? node.children : [node],\\n    userKey: findProp(node, `key`),\\n    isTemplateIf\\n  };\\n}\\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\\n  if (branch.condition) {\\n    return createConditionalExpression(\\n      branch.condition,\\n      createChildrenCodegenNode(branch, keyIndex, context),\\n      // make sure to pass in asBlock: true so that the comment node call\\n      // closes the current block.\\n      createCallExpression(context.helper(CREATE_COMMENT), [\\n        '\\\"\\\"',\\n        \\\"true\\\"\\n      ])\\n    );\\n  } else {\\n    return createChildrenCodegenNode(branch, keyIndex, context);\\n  }\\n}\\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\\n  const { helper } = context;\\n  const keyProperty = createObjectProperty(\\n    `key`,\\n    createSimpleExpression(\\n      `${keyIndex}`,\\n      false,\\n      locStub,\\n      2\\n    )\\n  );\\n  const { children } = branch;\\n  const firstChild = children[0];\\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\\n  if (needFragmentWrapper) {\\n    if (children.length === 1 && firstChild.type === 11) {\\n      const vnodeCall = firstChild.codegenNode;\\n      injectProp(vnodeCall, keyProperty, context);\\n      return vnodeCall;\\n    } else {\\n      let patchFlag = 64;\\n      shared.PatchFlagNames[64];\\n      return createVNodeCall(\\n        context,\\n        helper(FRAGMENT),\\n        createObjectExpression([keyProperty]),\\n        children,\\n        patchFlag + (``),\\n        void 0,\\n        void 0,\\n        true,\\n        false,\\n        false,\\n        branch.loc\\n      );\\n    }\\n  } else {\\n    const ret = firstChild.codegenNode;\\n    const vnodeCall = getMemoedVNodeCall(ret);\\n    if (vnodeCall.type === 13) {\\n      convertToBlock(vnodeCall, context);\\n    }\\n    injectProp(vnodeCall, keyProperty, context);\\n    return ret;\\n  }\\n}\\nfunction isSameKey(a, b) {\\n  if (!a || a.type !== b.type) {\\n    return false;\\n  }\\n  if (a.type === 6) {\\n    if (a.value.content !== b.value.content) {\\n      return false;\\n    }\\n  } else {\\n    const exp = a.exp;\\n    const branchExp = b.exp;\\n    if (exp.type !== branchExp.type) {\\n      return false;\\n    }\\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\nfunction getParentCondition(node) {\\n  while (true) {\\n    if (node.type === 19) {\\n      if (node.alternate.type === 19) {\\n        node = node.alternate;\\n      } else {\\n        return node;\\n      }\\n    } else if (node.type === 20) {\\n      node = node.value;\\n    }\\n  }\\n}\\n\\nconst transformFor = createStructuralDirectiveTransform(\\n  \\\"for\\\",\\n  (node, dir, context) => {\\n    const { helper, removeHelper } = context;\\n    return processFor(node, dir, context, (forNode) => {\\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\\n        forNode.source\\n      ]);\\n      const isTemplate = isTemplateNode(node);\\n      const memo = findDir(node, \\\"memo\\\");\\n      const keyProp = findProp(node, `key`);\\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\\n      if (isTemplate) {\\n        if (memo) {\\n          memo.exp = processExpression(\\n            memo.exp,\\n            context\\n          );\\n        }\\n        if (keyProperty && keyProp.type !== 6) {\\n          keyProperty.value = processExpression(\\n            keyProperty.value,\\n            context\\n          );\\n        }\\n      }\\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\\n      forNode.codegenNode = createVNodeCall(\\n        context,\\n        helper(FRAGMENT),\\n        void 0,\\n        renderExp,\\n        fragmentFlag + (``),\\n        void 0,\\n        void 0,\\n        true,\\n        !isStableFragment,\\n        false,\\n        node.loc\\n      );\\n      return () => {\\n        let childBlock;\\n        const { children } = forNode;\\n        if (isTemplate) {\\n          node.children.some((c) => {\\n            if (c.type === 1) {\\n              const key = findProp(c, \\\"key\\\");\\n              if (key) {\\n                context.onError(\\n                  createCompilerError(\\n                    33,\\n                    key.loc\\n                  )\\n                );\\n                return true;\\n              }\\n            }\\n          });\\n        }\\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\\n        if (slotOutlet) {\\n          childBlock = slotOutlet.codegenNode;\\n          if (isTemplate && keyProperty) {\\n            injectProp(childBlock, keyProperty, context);\\n          }\\n        } else if (needFragmentWrapper) {\\n          childBlock = createVNodeCall(\\n            context,\\n            helper(FRAGMENT),\\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\\n            node.children,\\n            64 + (``),\\n            void 0,\\n            void 0,\\n            true,\\n            void 0,\\n            false\\n          );\\n        } else {\\n          childBlock = children[0].codegenNode;\\n          if (isTemplate && keyProperty) {\\n            injectProp(childBlock, keyProperty, context);\\n          }\\n          if (childBlock.isBlock !== !isStableFragment) {\\n            if (childBlock.isBlock) {\\n              removeHelper(OPEN_BLOCK);\\n              removeHelper(\\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\\n              );\\n            } else {\\n              removeHelper(\\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\\n              );\\n            }\\n          }\\n          childBlock.isBlock = !isStableFragment;\\n          if (childBlock.isBlock) {\\n            helper(OPEN_BLOCK);\\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\\n          } else {\\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\\n          }\\n        }\\n        if (memo) {\\n          const loop = createFunctionExpression(\\n            createForLoopParams(forNode.parseResult, [\\n              createSimpleExpression(`_cached`)\\n            ])\\n          );\\n          loop.body = createBlockStatement([\\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\\n            createCompoundExpression([\\n              `if (_cached`,\\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\\n              ` && ${context.helperString(\\n                IS_MEMO_SAME\\n              )}(_cached, _memo)) return _cached`\\n            ]),\\n            createCompoundExpression([`const _item = `, childBlock]),\\n            createSimpleExpression(`_item.memo = _memo`),\\n            createSimpleExpression(`return _item`)\\n          ]);\\n          renderExp.arguments.push(\\n            loop,\\n            createSimpleExpression(`_cache`),\\n            createSimpleExpression(String(context.cached++))\\n          );\\n        } else {\\n          renderExp.arguments.push(\\n            createFunctionExpression(\\n              createForLoopParams(forNode.parseResult),\\n              childBlock,\\n              true\\n            )\\n          );\\n        }\\n      };\\n    });\\n  }\\n);\\nfunction processFor(node, dir, context, processCodegen) {\\n  if (!dir.exp) {\\n    context.onError(\\n      createCompilerError(31, dir.loc)\\n    );\\n    return;\\n  }\\n  const parseResult = dir.forParseResult;\\n  if (!parseResult) {\\n    context.onError(\\n      createCompilerError(32, dir.loc)\\n    );\\n    return;\\n  }\\n  finalizeForParseResult(parseResult, context);\\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\\n  const { source, value, key, index } = parseResult;\\n  const forNode = {\\n    type: 11,\\n    loc: dir.loc,\\n    source,\\n    valueAlias: value,\\n    keyAlias: key,\\n    objectIndexAlias: index,\\n    parseResult,\\n    children: isTemplateNode(node) ? node.children : [node]\\n  };\\n  context.replaceNode(forNode);\\n  scopes.vFor++;\\n  if (context.prefixIdentifiers) {\\n    value && addIdentifiers(value);\\n    key && addIdentifiers(key);\\n    index && addIdentifiers(index);\\n  }\\n  const onExit = processCodegen && processCodegen(forNode);\\n  return () => {\\n    scopes.vFor--;\\n    if (context.prefixIdentifiers) {\\n      value && removeIdentifiers(value);\\n      key && removeIdentifiers(key);\\n      index && removeIdentifiers(index);\\n    }\\n    if (onExit)\\n      onExit();\\n  };\\n}\\nfunction finalizeForParseResult(result, context) {\\n  if (result.finalized)\\n    return;\\n  if (context.prefixIdentifiers) {\\n    result.source = processExpression(\\n      result.source,\\n      context\\n    );\\n    if (result.key) {\\n      result.key = processExpression(\\n        result.key,\\n        context,\\n        true\\n      );\\n    }\\n    if (result.index) {\\n      result.index = processExpression(\\n        result.index,\\n        context,\\n        true\\n      );\\n    }\\n    if (result.value) {\\n      result.value = processExpression(\\n        result.value,\\n        context,\\n        true\\n      );\\n    }\\n  }\\n  result.finalized = true;\\n}\\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\\n  return createParamsList([value, key, index, ...memoArgs]);\\n}\\nfunction createParamsList(args) {\\n  let i = args.length;\\n  while (i--) {\\n    if (args[i])\\n      break;\\n  }\\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\\n}\\n\\nconst defaultFallback = createSimpleExpression(`undefined`, false);\\nconst trackSlotScopes = (node, context) => {\\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\\n    const vSlot = findDir(node, \\\"slot\\\");\\n    if (vSlot) {\\n      const slotProps = vSlot.exp;\\n      if (context.prefixIdentifiers) {\\n        slotProps && context.addIdentifiers(slotProps);\\n      }\\n      context.scopes.vSlot++;\\n      return () => {\\n        if (context.prefixIdentifiers) {\\n          slotProps && context.removeIdentifiers(slotProps);\\n        }\\n        context.scopes.vSlot--;\\n      };\\n    }\\n  }\\n};\\nconst trackVForSlotScopes = (node, context) => {\\n  let vFor;\\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \\\"for\\\"))) {\\n    const result = vFor.forParseResult;\\n    if (result) {\\n      finalizeForParseResult(result, context);\\n      const { value, key, index } = result;\\n      const { addIdentifiers, removeIdentifiers } = context;\\n      value && addIdentifiers(value);\\n      key && addIdentifiers(key);\\n      index && addIdentifiers(index);\\n      return () => {\\n        value && removeIdentifiers(value);\\n        key && removeIdentifiers(key);\\n        index && removeIdentifiers(index);\\n      };\\n    }\\n  }\\n};\\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\\n  props,\\n  children,\\n  false,\\n  true,\\n  children.length ? children[0].loc : loc\\n);\\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\\n  context.helper(WITH_CTX);\\n  const { children, loc } = node;\\n  const slotsProperties = [];\\n  const dynamicSlots = [];\\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\\n  if (!context.ssr && context.prefixIdentifiers) {\\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\\n  }\\n  const onComponentSlot = findDir(node, \\\"slot\\\", true);\\n  if (onComponentSlot) {\\n    const { arg, exp } = onComponentSlot;\\n    if (arg && !isStaticExp(arg)) {\\n      hasDynamicSlots = true;\\n    }\\n    slotsProperties.push(\\n      createObjectProperty(\\n        arg || createSimpleExpression(\\\"default\\\", true),\\n        buildSlotFn(exp, void 0, children, loc)\\n      )\\n    );\\n  }\\n  let hasTemplateSlots = false;\\n  let hasNamedDefaultSlot = false;\\n  const implicitDefaultChildren = [];\\n  const seenSlotNames = /* @__PURE__ */ new Set();\\n  let conditionalBranchIndex = 0;\\n  for (let i = 0; i < children.length; i++) {\\n    const slotElement = children[i];\\n    let slotDir;\\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \\\"slot\\\", true))) {\\n      if (slotElement.type !== 3) {\\n        implicitDefaultChildren.push(slotElement);\\n      }\\n      continue;\\n    }\\n    if (onComponentSlot) {\\n      context.onError(\\n        createCompilerError(37, slotDir.loc)\\n      );\\n      break;\\n    }\\n    hasTemplateSlots = true;\\n    const { children: slotChildren, loc: slotLoc } = slotElement;\\n    const {\\n      arg: slotName = createSimpleExpression(`default`, true),\\n      exp: slotProps,\\n      loc: dirLoc\\n    } = slotDir;\\n    let staticSlotName;\\n    if (isStaticExp(slotName)) {\\n      staticSlotName = slotName ? slotName.content : `default`;\\n    } else {\\n      hasDynamicSlots = true;\\n    }\\n    const vFor = findDir(slotElement, \\\"for\\\");\\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\\n    let vIf;\\n    let vElse;\\n    if (vIf = findDir(slotElement, \\\"if\\\")) {\\n      hasDynamicSlots = true;\\n      dynamicSlots.push(\\n        createConditionalExpression(\\n          vIf.exp,\\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\\n          defaultFallback\\n        )\\n      );\\n    } else if (vElse = findDir(\\n      slotElement,\\n      /^else(-if)?$/,\\n      true\\n      /* allowEmpty */\\n    )) {\\n      let j = i;\\n      let prev;\\n      while (j--) {\\n        prev = children[j];\\n        if (prev.type !== 3) {\\n          break;\\n        }\\n      }\\n      if (prev && isTemplateNode(prev) && findDir(prev, \\\"if\\\")) {\\n        children.splice(i, 1);\\n        i--;\\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\\n        while (conditional.alternate.type === 19) {\\n          conditional = conditional.alternate;\\n        }\\n        conditional.alternate = vElse.exp ? createConditionalExpression(\\n          vElse.exp,\\n          buildDynamicSlot(\\n            slotName,\\n            slotFunction,\\n            conditionalBranchIndex++\\n          ),\\n          defaultFallback\\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\\n      } else {\\n        context.onError(\\n          createCompilerError(30, vElse.loc)\\n        );\\n      }\\n    } else if (vFor) {\\n      hasDynamicSlots = true;\\n      const parseResult = vFor.forParseResult;\\n      if (parseResult) {\\n        finalizeForParseResult(parseResult, context);\\n        dynamicSlots.push(\\n          createCallExpression(context.helper(RENDER_LIST), [\\n            parseResult.source,\\n            createFunctionExpression(\\n              createForLoopParams(parseResult),\\n              buildDynamicSlot(slotName, slotFunction),\\n              true\\n            )\\n          ])\\n        );\\n      } else {\\n        context.onError(\\n          createCompilerError(\\n            32,\\n            vFor.loc\\n          )\\n        );\\n      }\\n    } else {\\n      if (staticSlotName) {\\n        if (seenSlotNames.has(staticSlotName)) {\\n          context.onError(\\n            createCompilerError(\\n              38,\\n              dirLoc\\n            )\\n          );\\n          continue;\\n        }\\n        seenSlotNames.add(staticSlotName);\\n        if (staticSlotName === \\\"default\\\") {\\n          hasNamedDefaultSlot = true;\\n        }\\n      }\\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\\n    }\\n  }\\n  if (!onComponentSlot) {\\n    const buildDefaultSlotProperty = (props, children2) => {\\n      const fn = buildSlotFn(props, void 0, children2, loc);\\n      if (context.compatConfig) {\\n        fn.isNonScopedSlot = true;\\n      }\\n      return createObjectProperty(`default`, fn);\\n    };\\n    if (!hasTemplateSlots) {\\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\\n    } else if (implicitDefaultChildren.length && // #3766\\n    // with whitespace: 'preserve', whitespaces between slots will end up in\\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\\n      if (hasNamedDefaultSlot) {\\n        context.onError(\\n          createCompilerError(\\n            39,\\n            implicitDefaultChildren[0].loc\\n          )\\n        );\\n      } else {\\n        slotsProperties.push(\\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\\n        );\\n      }\\n    }\\n  }\\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\\n  let slots = createObjectExpression(\\n    slotsProperties.concat(\\n      createObjectProperty(\\n        `_`,\\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\\n        // 1 = compiled and static = can skip normalization AND diff as optimized\\n        createSimpleExpression(\\n          slotFlag + (``),\\n          false\\n        )\\n      )\\n    ),\\n    loc\\n  );\\n  if (dynamicSlots.length) {\\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\\n      slots,\\n      createArrayExpression(dynamicSlots)\\n    ]);\\n  }\\n  return {\\n    slots,\\n    hasDynamicSlots\\n  };\\n}\\nfunction buildDynamicSlot(name, fn, index) {\\n  const props = [\\n    createObjectProperty(`name`, name),\\n    createObjectProperty(`fn`, fn)\\n  ];\\n  if (index != null) {\\n    props.push(\\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\\n    );\\n  }\\n  return createObjectExpression(props);\\n}\\nfunction hasForwardedSlots(children) {\\n  for (let i = 0; i < children.length; i++) {\\n    const child = children[i];\\n    switch (child.type) {\\n      case 1:\\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\\n          return true;\\n        }\\n        break;\\n      case 9:\\n        if (hasForwardedSlots(child.branches))\\n          return true;\\n        break;\\n      case 10:\\n      case 11:\\n        if (hasForwardedSlots(child.children))\\n          return true;\\n        break;\\n    }\\n  }\\n  return false;\\n}\\nfunction isNonWhitespaceContent(node) {\\n  if (node.type !== 2 && node.type !== 12)\\n    return true;\\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\\n}\\n\\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\\nconst transformElement = (node, context) => {\\n  return function postTransformElement() {\\n    node = context.currentNode;\\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\\n      return;\\n    }\\n    const { tag, props } = node;\\n    const isComponent = node.tagType === 1;\\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\\\"${tag}\\\"`;\\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\\n    let vnodeProps;\\n    let vnodeChildren;\\n    let vnodePatchFlag;\\n    let patchFlag = 0;\\n    let vnodeDynamicProps;\\n    let dynamicPropNames;\\n    let vnodeDirectives;\\n    let shouldUseBlock = (\\n      // dynamic component may resolve to plain elements\\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\\n      // This is technically web-specific, but splitting the logic out of core\\n      // leads to too much unnecessary complexity.\\n      (tag === \\\"svg\\\" || tag === \\\"foreignObject\\\")\\n    );\\n    if (props.length > 0) {\\n      const propsBuildResult = buildProps(\\n        node,\\n        context,\\n        void 0,\\n        isComponent,\\n        isDynamicComponent\\n      );\\n      vnodeProps = propsBuildResult.props;\\n      patchFlag = propsBuildResult.patchFlag;\\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\\n      const directives = propsBuildResult.directives;\\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\\n        directives.map((dir) => buildDirectiveArgs(dir, context))\\n      ) : void 0;\\n      if (propsBuildResult.shouldUseBlock) {\\n        shouldUseBlock = true;\\n      }\\n    }\\n    if (node.children.length > 0) {\\n      if (vnodeTag === KEEP_ALIVE) {\\n        shouldUseBlock = true;\\n        patchFlag |= 1024;\\n      }\\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\\n      vnodeTag !== TELEPORT && // explained above.\\n      vnodeTag !== KEEP_ALIVE;\\n      if (shouldBuildAsSlots) {\\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\\n        vnodeChildren = slots;\\n        if (hasDynamicSlots) {\\n          patchFlag |= 1024;\\n        }\\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\\n        const child = node.children[0];\\n        const type = child.type;\\n        const hasDynamicTextChild = type === 5 || type === 8;\\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\\n          patchFlag |= 1;\\n        }\\n        if (hasDynamicTextChild || type === 2) {\\n          vnodeChildren = child;\\n        } else {\\n          vnodeChildren = node.children;\\n        }\\n      } else {\\n        vnodeChildren = node.children;\\n      }\\n    }\\n    if (patchFlag !== 0) {\\n      {\\n        vnodePatchFlag = String(patchFlag);\\n      }\\n      if (dynamicPropNames && dynamicPropNames.length) {\\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\\n      }\\n    }\\n    node.codegenNode = createVNodeCall(\\n      context,\\n      vnodeTag,\\n      vnodeProps,\\n      vnodeChildren,\\n      vnodePatchFlag,\\n      vnodeDynamicProps,\\n      vnodeDirectives,\\n      !!shouldUseBlock,\\n      false,\\n      isComponent,\\n      node.loc\\n    );\\n  };\\n};\\nfunction resolveComponentType(node, context, ssr = false) {\\n  let { tag } = node;\\n  const isExplicitDynamic = isComponentTag(tag);\\n  const isProp = findProp(node, \\\"is\\\");\\n  if (isProp) {\\n    if (isExplicitDynamic || isCompatEnabled(\\n      \\\"COMPILER_IS_ON_ELEMENT\\\",\\n      context\\n    )) {\\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\\n      if (exp) {\\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\\n          exp\\n        ]);\\n      }\\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\\\"vue:\\\")) {\\n      tag = isProp.value.content.slice(4);\\n    }\\n  }\\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\\n  if (builtIn) {\\n    if (!ssr)\\n      context.helper(builtIn);\\n    return builtIn;\\n  }\\n  {\\n    const fromSetup = resolveSetupReference(tag, context);\\n    if (fromSetup) {\\n      return fromSetup;\\n    }\\n    const dotIndex = tag.indexOf(\\\".\\\");\\n    if (dotIndex > 0) {\\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\\n      if (ns) {\\n        return ns + tag.slice(dotIndex);\\n      }\\n    }\\n  }\\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\\n    context.helper(RESOLVE_COMPONENT);\\n    context.components.add(tag + `__self`);\\n    return toValidAssetId(tag, `component`);\\n  }\\n  context.helper(RESOLVE_COMPONENT);\\n  context.components.add(tag);\\n  return toValidAssetId(tag, `component`);\\n}\\nfunction resolveSetupReference(name, context) {\\n  const bindings = context.bindingMetadata;\\n  if (!bindings || bindings.__isScriptSetup === false) {\\n    return;\\n  }\\n  const camelName = shared.camelize(name);\\n  const PascalName = shared.capitalize(camelName);\\n  const checkType = (type) => {\\n    if (bindings[name] === type) {\\n      return name;\\n    }\\n    if (bindings[camelName] === type) {\\n      return camelName;\\n    }\\n    if (bindings[PascalName] === type) {\\n      return PascalName;\\n    }\\n  };\\n  const fromConst = checkType(\\\"setup-const\\\") || checkType(\\\"setup-reactive-const\\\") || checkType(\\\"literal-const\\\");\\n  if (fromConst) {\\n    return context.inline ? (\\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\\n      fromConst\\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\\n  }\\n  const fromMaybeRef = checkType(\\\"setup-let\\\") || checkType(\\\"setup-ref\\\") || checkType(\\\"setup-maybe-ref\\\");\\n  if (fromMaybeRef) {\\n    return context.inline ? (\\n      // setup scope bindings that may be refs need to be unrefed\\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\\n  }\\n  const fromProps = checkType(\\\"props\\\");\\n  if (fromProps) {\\n    return `${context.helperString(UNREF)}(${context.inline ? \\\"__props\\\" : \\\"$props\\\"}[${JSON.stringify(fromProps)}])`;\\n  }\\n}\\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\\n  const { tag, loc: elementLoc, children } = node;\\n  let properties = [];\\n  const mergeArgs = [];\\n  const runtimeDirectives = [];\\n  const hasChildren = children.length > 0;\\n  let shouldUseBlock = false;\\n  let patchFlag = 0;\\n  let hasRef = false;\\n  let hasClassBinding = false;\\n  let hasStyleBinding = false;\\n  let hasHydrationEventBinding = false;\\n  let hasDynamicKeys = false;\\n  let hasVnodeHook = false;\\n  const dynamicPropNames = [];\\n  const pushMergeArg = (arg) => {\\n    if (properties.length) {\\n      mergeArgs.push(\\n        createObjectExpression(dedupeProperties(properties), elementLoc)\\n      );\\n      properties = [];\\n    }\\n    if (arg)\\n      mergeArgs.push(arg);\\n  };\\n  const analyzePatchFlag = ({ key, value }) => {\\n    if (isStaticExp(key)) {\\n      const name = key.content;\\n      const isEventHandler = shared.isOn(name);\\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\\n      // dedicated fast path.\\n      name.toLowerCase() !== \\\"onclick\\\" && // omit v-model handlers\\n      name !== \\\"onUpdate:modelValue\\\" && // omit onVnodeXXX hooks\\n      !shared.isReservedProp(name)) {\\n        hasHydrationEventBinding = true;\\n      }\\n      if (isEventHandler && shared.isReservedProp(name)) {\\n        hasVnodeHook = true;\\n      }\\n      if (isEventHandler && value.type === 14) {\\n        value = value.arguments[0];\\n      }\\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\\n        return;\\n      }\\n      if (name === \\\"ref\\\") {\\n        hasRef = true;\\n      } else if (name === \\\"class\\\") {\\n        hasClassBinding = true;\\n      } else if (name === \\\"style\\\") {\\n        hasStyleBinding = true;\\n      } else if (name !== \\\"key\\\" && !dynamicPropNames.includes(name)) {\\n        dynamicPropNames.push(name);\\n      }\\n      if (isComponent && (name === \\\"class\\\" || name === \\\"style\\\") && !dynamicPropNames.includes(name)) {\\n        dynamicPropNames.push(name);\\n      }\\n    } else {\\n      hasDynamicKeys = true;\\n    }\\n  };\\n  for (let i = 0; i < props.length; i++) {\\n    const prop = props[i];\\n    if (prop.type === 6) {\\n      const { loc, name, nameLoc, value } = prop;\\n      let isStatic = true;\\n      if (name === \\\"ref\\\") {\\n        hasRef = true;\\n        if (context.scopes.vFor > 0) {\\n          properties.push(\\n            createObjectProperty(\\n              createSimpleExpression(\\\"ref_for\\\", true),\\n              createSimpleExpression(\\\"true\\\")\\n            )\\n          );\\n        }\\n        if (value && context.inline) {\\n          const binding = context.bindingMetadata[value.content];\\n          if (binding === \\\"setup-let\\\" || binding === \\\"setup-ref\\\" || binding === \\\"setup-maybe-ref\\\") {\\n            isStatic = false;\\n            properties.push(\\n              createObjectProperty(\\n                createSimpleExpression(\\\"ref_key\\\", true),\\n                createSimpleExpression(value.content, true, value.loc)\\n              )\\n            );\\n          }\\n        }\\n      }\\n      if (name === \\\"is\\\" && (isComponentTag(tag) || value && value.content.startsWith(\\\"vue:\\\") || isCompatEnabled(\\n        \\\"COMPILER_IS_ON_ELEMENT\\\",\\n        context\\n      ))) {\\n        continue;\\n      }\\n      properties.push(\\n        createObjectProperty(\\n          createSimpleExpression(name, true, nameLoc),\\n          createSimpleExpression(\\n            value ? value.content : \\\"\\\",\\n            isStatic,\\n            value ? value.loc : loc\\n          )\\n        )\\n      );\\n    } else {\\n      const { name, arg, exp, loc, modifiers } = prop;\\n      const isVBind = name === \\\"bind\\\";\\n      const isVOn = name === \\\"on\\\";\\n      if (name === \\\"slot\\\") {\\n        if (!isComponent) {\\n          context.onError(\\n            createCompilerError(40, loc)\\n          );\\n        }\\n        continue;\\n      }\\n      if (name === \\\"once\\\" || name === \\\"memo\\\") {\\n        continue;\\n      }\\n      if (name === \\\"is\\\" || isVBind && isStaticArgOf(arg, \\\"is\\\") && (isComponentTag(tag) || isCompatEnabled(\\n        \\\"COMPILER_IS_ON_ELEMENT\\\",\\n        context\\n      ))) {\\n        continue;\\n      }\\n      if (isVOn && ssr) {\\n        continue;\\n      }\\n      if (\\n        // #938: elements with dynamic keys should be forced into blocks\\n        isVBind && isStaticArgOf(arg, \\\"key\\\") || // inline before-update hooks need to force block so that it is invoked\\n        // before children\\n        isVOn && hasChildren && isStaticArgOf(arg, \\\"vue:before-update\\\")\\n      ) {\\n        shouldUseBlock = true;\\n      }\\n      if (isVBind && isStaticArgOf(arg, \\\"ref\\\") && context.scopes.vFor > 0) {\\n        properties.push(\\n          createObjectProperty(\\n            createSimpleExpression(\\\"ref_for\\\", true),\\n            createSimpleExpression(\\\"true\\\")\\n          )\\n        );\\n      }\\n      if (!arg && (isVBind || isVOn)) {\\n        hasDynamicKeys = true;\\n        if (exp) {\\n          if (isVBind) {\\n            pushMergeArg();\\n            {\\n              if (isCompatEnabled(\\n                \\\"COMPILER_V_BIND_OBJECT_ORDER\\\",\\n                context\\n              )) {\\n                mergeArgs.unshift(exp);\\n                continue;\\n              }\\n            }\\n            mergeArgs.push(exp);\\n          } else {\\n            pushMergeArg({\\n              type: 14,\\n              loc,\\n              callee: context.helper(TO_HANDLERS),\\n              arguments: isComponent ? [exp] : [exp, `true`]\\n            });\\n          }\\n        } else {\\n          context.onError(\\n            createCompilerError(\\n              isVBind ? 34 : 35,\\n              loc\\n            )\\n          );\\n        }\\n        continue;\\n      }\\n      if (isVBind && modifiers.includes(\\\"prop\\\")) {\\n        patchFlag |= 32;\\n      }\\n      const directiveTransform = context.directiveTransforms[name];\\n      if (directiveTransform) {\\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\\n        !ssr && props2.forEach(analyzePatchFlag);\\n        if (isVOn && arg && !isStaticExp(arg)) {\\n          pushMergeArg(createObjectExpression(props2, elementLoc));\\n        } else {\\n          properties.push(...props2);\\n        }\\n        if (needRuntime) {\\n          runtimeDirectives.push(prop);\\n          if (shared.isSymbol(needRuntime)) {\\n            directiveImportMap.set(prop, needRuntime);\\n          }\\n        }\\n      } else if (!shared.isBuiltInDirective(name)) {\\n        runtimeDirectives.push(prop);\\n        if (hasChildren) {\\n          shouldUseBlock = true;\\n        }\\n      }\\n    }\\n  }\\n  let propsExpression = void 0;\\n  if (mergeArgs.length) {\\n    pushMergeArg();\\n    if (mergeArgs.length > 1) {\\n      propsExpression = createCallExpression(\\n        context.helper(MERGE_PROPS),\\n        mergeArgs,\\n        elementLoc\\n      );\\n    } else {\\n      propsExpression = mergeArgs[0];\\n    }\\n  } else if (properties.length) {\\n    propsExpression = createObjectExpression(\\n      dedupeProperties(properties),\\n      elementLoc\\n    );\\n  }\\n  if (hasDynamicKeys) {\\n    patchFlag |= 16;\\n  } else {\\n    if (hasClassBinding && !isComponent) {\\n      patchFlag |= 2;\\n    }\\n    if (hasStyleBinding && !isComponent) {\\n      patchFlag |= 4;\\n    }\\n    if (dynamicPropNames.length) {\\n      patchFlag |= 8;\\n    }\\n    if (hasHydrationEventBinding) {\\n      patchFlag |= 32;\\n    }\\n  }\\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\\n    patchFlag |= 512;\\n  }\\n  if (!context.inSSR && propsExpression) {\\n    switch (propsExpression.type) {\\n      case 15:\\n        let classKeyIndex = -1;\\n        let styleKeyIndex = -1;\\n        let hasDynamicKey = false;\\n        for (let i = 0; i < propsExpression.properties.length; i++) {\\n          const key = propsExpression.properties[i].key;\\n          if (isStaticExp(key)) {\\n            if (key.content === \\\"class\\\") {\\n              classKeyIndex = i;\\n            } else if (key.content === \\\"style\\\") {\\n              styleKeyIndex = i;\\n            }\\n          } else if (!key.isHandlerKey) {\\n            hasDynamicKey = true;\\n          }\\n        }\\n        const classProp = propsExpression.properties[classKeyIndex];\\n        const styleProp = propsExpression.properties[styleKeyIndex];\\n        if (!hasDynamicKey) {\\n          if (classProp && !isStaticExp(classProp.value)) {\\n            classProp.value = createCallExpression(\\n              context.helper(NORMALIZE_CLASS),\\n              [classProp.value]\\n            );\\n          }\\n          if (styleProp && // the static style is compiled into an object,\\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\\n          // v-bind:style with static literal object\\n          styleProp.value.type === 17)) {\\n            styleProp.value = createCallExpression(\\n              context.helper(NORMALIZE_STYLE),\\n              [styleProp.value]\\n            );\\n          }\\n        } else {\\n          propsExpression = createCallExpression(\\n            context.helper(NORMALIZE_PROPS),\\n            [propsExpression]\\n          );\\n        }\\n        break;\\n      case 14:\\n        break;\\n      default:\\n        propsExpression = createCallExpression(\\n          context.helper(NORMALIZE_PROPS),\\n          [\\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\\n              propsExpression\\n            ])\\n          ]\\n        );\\n        break;\\n    }\\n  }\\n  return {\\n    props: propsExpression,\\n    directives: runtimeDirectives,\\n    patchFlag,\\n    dynamicPropNames,\\n    shouldUseBlock\\n  };\\n}\\nfunction dedupeProperties(properties) {\\n  const knownProps = /* @__PURE__ */ new Map();\\n  const deduped = [];\\n  for (let i = 0; i < properties.length; i++) {\\n    const prop = properties[i];\\n    if (prop.key.type === 8 || !prop.key.isStatic) {\\n      deduped.push(prop);\\n      continue;\\n    }\\n    const name = prop.key.content;\\n    const existing = knownProps.get(name);\\n    if (existing) {\\n      if (name === \\\"style\\\" || name === \\\"class\\\" || shared.isOn(name)) {\\n        mergeAsArray(existing, prop);\\n      }\\n    } else {\\n      knownProps.set(name, prop);\\n      deduped.push(prop);\\n    }\\n  }\\n  return deduped;\\n}\\nfunction mergeAsArray(existing, incoming) {\\n  if (existing.value.type === 17) {\\n    existing.value.elements.push(incoming.value);\\n  } else {\\n    existing.value = createArrayExpression(\\n      [existing.value, incoming.value],\\n      existing.loc\\n    );\\n  }\\n}\\nfunction buildDirectiveArgs(dir, context) {\\n  const dirArgs = [];\\n  const runtime = directiveImportMap.get(dir);\\n  if (runtime) {\\n    dirArgs.push(context.helperString(runtime));\\n  } else {\\n    const fromSetup = resolveSetupReference(\\\"v-\\\" + dir.name, context);\\n    if (fromSetup) {\\n      dirArgs.push(fromSetup);\\n    } else {\\n      context.helper(RESOLVE_DIRECTIVE);\\n      context.directives.add(dir.name);\\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\\n    }\\n  }\\n  const { loc } = dir;\\n  if (dir.exp)\\n    dirArgs.push(dir.exp);\\n  if (dir.arg) {\\n    if (!dir.exp) {\\n      dirArgs.push(`void 0`);\\n    }\\n    dirArgs.push(dir.arg);\\n  }\\n  if (Object.keys(dir.modifiers).length) {\\n    if (!dir.arg) {\\n      if (!dir.exp) {\\n        dirArgs.push(`void 0`);\\n      }\\n      dirArgs.push(`void 0`);\\n    }\\n    const trueExpression = createSimpleExpression(`true`, false, loc);\\n    dirArgs.push(\\n      createObjectExpression(\\n        dir.modifiers.map(\\n          (modifier) => createObjectProperty(modifier, trueExpression)\\n        ),\\n        loc\\n      )\\n    );\\n  }\\n  return createArrayExpression(dirArgs, dir.loc);\\n}\\nfunction stringifyDynamicPropNames(props) {\\n  let propsNamesString = `[`;\\n  for (let i = 0, l = props.length; i < l; i++) {\\n    propsNamesString += JSON.stringify(props[i]);\\n    if (i < l - 1)\\n      propsNamesString += \\\", \\\";\\n  }\\n  return propsNamesString + `]`;\\n}\\nfunction isComponentTag(tag) {\\n  return tag === \\\"component\\\" || tag === \\\"Component\\\";\\n}\\n\\nconst transformSlotOutlet = (node, context) => {\\n  if (isSlotOutlet(node)) {\\n    const { children, loc } = node;\\n    const { slotName, slotProps } = processSlotOutlet(node, context);\\n    const slotArgs = [\\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\\n      slotName,\\n      \\\"{}\\\",\\n      \\\"undefined\\\",\\n      \\\"true\\\"\\n    ];\\n    let expectedLen = 2;\\n    if (slotProps) {\\n      slotArgs[2] = slotProps;\\n      expectedLen = 3;\\n    }\\n    if (children.length) {\\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\\n      expectedLen = 4;\\n    }\\n    if (context.scopeId && !context.slotted) {\\n      expectedLen = 5;\\n    }\\n    slotArgs.splice(expectedLen);\\n    node.codegenNode = createCallExpression(\\n      context.helper(RENDER_SLOT),\\n      slotArgs,\\n      loc\\n    );\\n  }\\n};\\nfunction processSlotOutlet(node, context) {\\n  let slotName = `\\\"default\\\"`;\\n  let slotProps = void 0;\\n  const nonNameProps = [];\\n  for (let i = 0; i < node.props.length; i++) {\\n    const p = node.props[i];\\n    if (p.type === 6) {\\n      if (p.value) {\\n        if (p.name === \\\"name\\\") {\\n          slotName = JSON.stringify(p.value.content);\\n        } else {\\n          p.name = shared.camelize(p.name);\\n          nonNameProps.push(p);\\n        }\\n      }\\n    } else {\\n      if (p.name === \\\"bind\\\" && isStaticArgOf(p.arg, \\\"name\\\")) {\\n        if (p.exp) {\\n          slotName = p.exp;\\n        } else if (p.arg && p.arg.type === 4) {\\n          const name = shared.camelize(p.arg.content);\\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\\n          {\\n            slotName = p.exp = processExpression(p.exp, context);\\n          }\\n        }\\n      } else {\\n        if (p.name === \\\"bind\\\" && p.arg && isStaticExp(p.arg)) {\\n          p.arg.content = shared.camelize(p.arg.content);\\n        }\\n        nonNameProps.push(p);\\n      }\\n    }\\n  }\\n  if (nonNameProps.length > 0) {\\n    const { props, directives } = buildProps(\\n      node,\\n      context,\\n      nonNameProps,\\n      false,\\n      false\\n    );\\n    slotProps = props;\\n    if (directives.length) {\\n      context.onError(\\n        createCompilerError(\\n          36,\\n          directives[0].loc\\n        )\\n      );\\n    }\\n  }\\n  return {\\n    slotName,\\n    slotProps\\n  };\\n}\\n\\nconst fnExpRE = /^\\\\s*([\\\\w$_]+|(async\\\\s*)?\\\\([^)]*?\\\\))\\\\s*(:[^=]+)?=>|^\\\\s*(async\\\\s+)?function(?:\\\\s+[\\\\w$]+)?\\\\s*\\\\(/;\\nconst transformOn = (dir, node, context, augmentor) => {\\n  const { loc, modifiers, arg } = dir;\\n  if (!dir.exp && !modifiers.length) {\\n    context.onError(createCompilerError(35, loc));\\n  }\\n  let eventName;\\n  if (arg.type === 4) {\\n    if (arg.isStatic) {\\n      let rawName = arg.content;\\n      if (rawName.startsWith(\\\"vue:\\\")) {\\n        rawName = `vnode-${rawName.slice(4)}`;\\n      }\\n      const eventString = node.tagType !== 0 || rawName.startsWith(\\\"vnode\\\") || !/[A-Z]/.test(rawName) ? (\\n        // for non-element and vnode lifecycle event listeners, auto convert\\n        // it to camelCase. See issue #2249\\n        shared.toHandlerKey(shared.camelize(rawName))\\n      ) : (\\n        // preserve case for plain element listeners that have uppercase\\n        // letters, as these may be custom elements' custom events\\n        `on:${rawName}`\\n      );\\n      eventName = createSimpleExpression(eventString, true, arg.loc);\\n    } else {\\n      eventName = createCompoundExpression([\\n        `${context.helperString(TO_HANDLER_KEY)}(`,\\n        arg,\\n        `)`\\n      ]);\\n    }\\n  } else {\\n    eventName = arg;\\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\\n    eventName.children.push(`)`);\\n  }\\n  let exp = dir.exp;\\n  if (exp && !exp.content.trim()) {\\n    exp = void 0;\\n  }\\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\\n  if (exp) {\\n    const isMemberExp = isMemberExpression(exp.content, context);\\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\\n    const hasMultipleStatements = exp.content.includes(`;`);\\n    if (context.prefixIdentifiers) {\\n      isInlineStatement && context.addIdentifiers(`$event`);\\n      exp = dir.exp = processExpression(\\n        exp,\\n        context,\\n        false,\\n        hasMultipleStatements\\n      );\\n      isInlineStatement && context.removeIdentifiers(`$event`);\\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\\n      !context.inVOnce && // runtime constants don't need to be cached\\n      // (this is analyzed by compileScript in SFC <script setup>)\\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\\n      // we need to use the original function to preserve arity,\\n      // e.g. <transition> relies on checking cb.length to determine\\n      // transition end handling. Inline function is ok since its arity\\n      // is preserved even when cached.\\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\\n      // it must be passed fresh to avoid stale values.\\n      !hasScopeRef(exp, context.identifiers);\\n      if (shouldCache && isMemberExp) {\\n        if (exp.type === 4) {\\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\\n        } else {\\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\\n        }\\n      }\\n    }\\n    if (isInlineStatement || shouldCache && isMemberExp) {\\n      exp = createCompoundExpression([\\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\\n//@ts-ignore\\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\\n        exp,\\n        hasMultipleStatements ? `}` : `)`\\n      ]);\\n    }\\n  }\\n  let ret = {\\n    props: [\\n      createObjectProperty(\\n        eventName,\\n        exp || createSimpleExpression(`() => {}`, false, loc)\\n      )\\n    ]\\n  };\\n  if (augmentor) {\\n    ret = augmentor(ret);\\n  }\\n  if (shouldCache) {\\n    ret.props[0].value = context.cache(ret.props[0].value);\\n  }\\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\\n  return ret;\\n};\\n\\nconst transformBind = (dir, _node, context) => {\\n  const { modifiers, loc } = dir;\\n  const arg = dir.arg;\\n  let { exp } = dir;\\n  if (exp && exp.type === 4 && !exp.content.trim()) {\\n    {\\n      context.onError(\\n        createCompilerError(34, loc)\\n      );\\n      return {\\n        props: [\\n          createObjectProperty(arg, createSimpleExpression(\\\"\\\", true, loc))\\n        ]\\n      };\\n    }\\n  }\\n  if (!exp) {\\n    if (arg.type !== 4 || !arg.isStatic) {\\n      context.onError(\\n        createCompilerError(\\n          52,\\n          arg.loc\\n        )\\n      );\\n      return {\\n        props: [\\n          createObjectProperty(arg, createSimpleExpression(\\\"\\\", true, loc))\\n        ]\\n      };\\n    }\\n    const propName = shared.camelize(arg.content);\\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc);\\n    {\\n      exp = dir.exp = processExpression(exp, context);\\n    }\\n  }\\n  if (arg.type !== 4) {\\n    arg.children.unshift(`(`);\\n    arg.children.push(`) || \\\"\\\"`);\\n  } else if (!arg.isStatic) {\\n    arg.content = `${arg.content} || \\\"\\\"`;\\n  }\\n  if (modifiers.includes(\\\"camel\\\")) {\\n    if (arg.type === 4) {\\n      if (arg.isStatic) {\\n        arg.content = shared.camelize(arg.content);\\n      } else {\\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\\n      }\\n    } else {\\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\\n      arg.children.push(`)`);\\n    }\\n  }\\n  if (!context.inSSR) {\\n    if (modifiers.includes(\\\"prop\\\")) {\\n      injectPrefix(arg, \\\".\\\");\\n    }\\n    if (modifiers.includes(\\\"attr\\\")) {\\n      injectPrefix(arg, \\\"^\\\");\\n    }\\n  }\\n  return {\\n    props: [createObjectProperty(arg, exp)]\\n  };\\n};\\nconst injectPrefix = (arg, prefix) => {\\n  if (arg.type === 4) {\\n    if (arg.isStatic) {\\n      arg.content = prefix + arg.content;\\n    } else {\\n      arg.content = `\\\\`${prefix}\\\\${${arg.content}}\\\\``;\\n    }\\n  } else {\\n    arg.children.unshift(`'${prefix}' + (`);\\n    arg.children.push(`)`);\\n  }\\n};\\n\\nconst transformText = (node, context) => {\\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\\n    return () => {\\n      const children = node.children;\\n      let currentContainer = void 0;\\n      let hasText = false;\\n      for (let i = 0; i < children.length; i++) {\\n        const child = children[i];\\n        if (isText$1(child)) {\\n          hasText = true;\\n          for (let j = i + 1; j < children.length; j++) {\\n            const next = children[j];\\n            if (isText$1(next)) {\\n              if (!currentContainer) {\\n                currentContainer = children[i] = createCompoundExpression(\\n                  [child],\\n                  child.loc\\n                );\\n              }\\n              currentContainer.children.push(` + `, next);\\n              children.splice(j, 1);\\n              j--;\\n            } else {\\n              currentContainer = void 0;\\n              break;\\n            }\\n          }\\n        }\\n      }\\n      if (!hasText || // if this is a plain element with a single text child, leave it\\n      // as-is since the runtime has dedicated fast path for this by directly\\n      // setting textContent of the element.\\n      // for component root it's always normalized anyway.\\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\\n      // custom directives can potentially add DOM elements arbitrarily,\\n      // we need to avoid setting textContent of the element at runtime\\n      // to avoid accidentally overwriting the DOM elements added\\n      // by the user through custom directives.\\n      !node.props.find(\\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\\n      ) && // in compat mode, <template> tags with no special directives\\n      // will be rendered as a fragment so its children must be\\n      // converted into vnodes.\\n      !(node.tag === \\\"template\\\"))) {\\n        return;\\n      }\\n      for (let i = 0; i < children.length; i++) {\\n        const child = children[i];\\n        if (isText$1(child) || child.type === 8) {\\n          const callArgs = [];\\n          if (child.type !== 2 || child.content !== \\\" \\\") {\\n            callArgs.push(child);\\n          }\\n          if (!context.ssr && getConstantType(child, context) === 0) {\\n            callArgs.push(\\n              1 + (``)\\n            );\\n          }\\n          children[i] = {\\n            type: 12,\\n            content: child,\\n            loc: child.loc,\\n            codegenNode: createCallExpression(\\n              context.helper(CREATE_TEXT),\\n              callArgs\\n            )\\n          };\\n        }\\n      }\\n    };\\n  }\\n};\\n\\nconst seen$1 = /* @__PURE__ */ new WeakSet();\\nconst transformOnce = (node, context) => {\\n  if (node.type === 1 && findDir(node, \\\"once\\\", true)) {\\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\\n      return;\\n    }\\n    seen$1.add(node);\\n    context.inVOnce = true;\\n    context.helper(SET_BLOCK_TRACKING);\\n    return () => {\\n      context.inVOnce = false;\\n      const cur = context.currentNode;\\n      if (cur.codegenNode) {\\n        cur.codegenNode = context.cache(\\n          cur.codegenNode,\\n          true\\n          /* isVNode */\\n        );\\n      }\\n    };\\n  }\\n};\\n\\nconst transformModel = (dir, node, context) => {\\n  const { exp, arg } = dir;\\n  if (!exp) {\\n    context.onError(\\n      createCompilerError(41, dir.loc)\\n    );\\n    return createTransformProps();\\n  }\\n  const rawExp = exp.loc.source;\\n  const expString = exp.type === 4 ? exp.content : rawExp;\\n  const bindingType = context.bindingMetadata[rawExp];\\n  if (bindingType === \\\"props\\\" || bindingType === \\\"props-aliased\\\") {\\n    context.onError(createCompilerError(44, exp.loc));\\n    return createTransformProps();\\n  }\\n  const maybeRef = context.inline && (bindingType === \\\"setup-let\\\" || bindingType === \\\"setup-ref\\\" || bindingType === \\\"setup-maybe-ref\\\");\\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\\n    context.onError(\\n      createCompilerError(42, exp.loc)\\n    );\\n    return createTransformProps();\\n  }\\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\\n    context.onError(\\n      createCompilerError(43, exp.loc)\\n    );\\n    return createTransformProps();\\n  }\\n  const propName = arg ? arg : createSimpleExpression(\\\"modelValue\\\", true);\\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\\\"onUpdate:\\\" + ', arg]) : `onUpdate:modelValue`;\\n  let assignmentExp;\\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\\n  if (maybeRef) {\\n    if (bindingType === \\\"setup-ref\\\") {\\n      assignmentExp = createCompoundExpression([\\n        `${eventArg} => ((`,\\n        createSimpleExpression(rawExp, false, exp.loc),\\n        `).value = $event)`\\n      ]);\\n    } else {\\n      const altAssignment = bindingType === \\\"setup-let\\\" ? `${rawExp} = $event` : `null`;\\n      assignmentExp = createCompoundExpression([\\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\\n        createSimpleExpression(rawExp, false, exp.loc),\\n        `).value = $event : ${altAssignment})`\\n      ]);\\n    }\\n  } else {\\n    assignmentExp = createCompoundExpression([\\n      `${eventArg} => ((`,\\n      exp,\\n      `) = $event)`\\n    ]);\\n  }\\n  const props = [\\n    // modelValue: foo\\n    createObjectProperty(propName, dir.exp),\\n    // \\\"onUpdate:modelValue\\\": $event => (foo = $event)\\n    createObjectProperty(eventName, assignmentExp)\\n  ];\\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\\n    props[1].value = context.cache(props[1].value);\\n  }\\n  if (dir.modifiers.length && node.tagType === 1) {\\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \\\"Modifiers\\\"']) : `modelModifiers`;\\n    props.push(\\n      createObjectProperty(\\n        modifiersKey,\\n        createSimpleExpression(\\n          `{ ${modifiers} }`,\\n          false,\\n          dir.loc,\\n          2\\n        )\\n      )\\n    );\\n  }\\n  return createTransformProps(props);\\n};\\nfunction createTransformProps(props = []) {\\n  return { props };\\n}\\n\\nconst validDivisionCharRE = /[\\\\w).+\\\\-_$\\\\]]/;\\nconst transformFilter = (node, context) => {\\n  if (!isCompatEnabled(\\\"COMPILER_FILTERS\\\", context)) {\\n    return;\\n  }\\n  if (node.type === 5) {\\n    rewriteFilter(node.content, context);\\n  }\\n  if (node.type === 1) {\\n    node.props.forEach((prop) => {\\n      if (prop.type === 7 && prop.name !== \\\"for\\\" && prop.exp) {\\n        rewriteFilter(prop.exp, context);\\n      }\\n    });\\n  }\\n};\\nfunction rewriteFilter(node, context) {\\n  if (node.type === 4) {\\n    parseFilter(node, context);\\n  } else {\\n    for (let i = 0; i < node.children.length; i++) {\\n      const child = node.children[i];\\n      if (typeof child !== \\\"object\\\")\\n        continue;\\n      if (child.type === 4) {\\n        parseFilter(child, context);\\n      } else if (child.type === 8) {\\n        rewriteFilter(node, context);\\n      } else if (child.type === 5) {\\n        rewriteFilter(child.content, context);\\n      }\\n    }\\n  }\\n}\\nfunction parseFilter(node, context) {\\n  const exp = node.content;\\n  let inSingle = false;\\n  let inDouble = false;\\n  let inTemplateString = false;\\n  let inRegex = false;\\n  let curly = 0;\\n  let square = 0;\\n  let paren = 0;\\n  let lastFilterIndex = 0;\\n  let c, prev, i, expression, filters = [];\\n  for (i = 0; i < exp.length; i++) {\\n    prev = c;\\n    c = exp.charCodeAt(i);\\n    if (inSingle) {\\n      if (c === 39 && prev !== 92)\\n        inSingle = false;\\n    } else if (inDouble) {\\n      if (c === 34 && prev !== 92)\\n        inDouble = false;\\n    } else if (inTemplateString) {\\n      if (c === 96 && prev !== 92)\\n        inTemplateString = false;\\n    } else if (inRegex) {\\n      if (c === 47 && prev !== 92)\\n        inRegex = false;\\n    } else if (c === 124 && // pipe\\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\\n      if (expression === void 0) {\\n        lastFilterIndex = i + 1;\\n        expression = exp.slice(0, i).trim();\\n      } else {\\n        pushFilter();\\n      }\\n    } else {\\n      switch (c) {\\n        case 34:\\n          inDouble = true;\\n          break;\\n        case 39:\\n          inSingle = true;\\n          break;\\n        case 96:\\n          inTemplateString = true;\\n          break;\\n        case 40:\\n          paren++;\\n          break;\\n        case 41:\\n          paren--;\\n          break;\\n        case 91:\\n          square++;\\n          break;\\n        case 93:\\n          square--;\\n          break;\\n        case 123:\\n          curly++;\\n          break;\\n        case 125:\\n          curly--;\\n          break;\\n      }\\n      if (c === 47) {\\n        let j = i - 1;\\n        let p;\\n        for (; j >= 0; j--) {\\n          p = exp.charAt(j);\\n          if (p !== \\\" \\\")\\n            break;\\n        }\\n        if (!p || !validDivisionCharRE.test(p)) {\\n          inRegex = true;\\n        }\\n      }\\n    }\\n  }\\n  if (expression === void 0) {\\n    expression = exp.slice(0, i).trim();\\n  } else if (lastFilterIndex !== 0) {\\n    pushFilter();\\n  }\\n  function pushFilter() {\\n    filters.push(exp.slice(lastFilterIndex, i).trim());\\n    lastFilterIndex = i + 1;\\n  }\\n  if (filters.length) {\\n    for (i = 0; i < filters.length; i++) {\\n      expression = wrapFilter(expression, filters[i], context);\\n    }\\n    node.content = expression;\\n  }\\n}\\nfunction wrapFilter(exp, filter, context) {\\n  context.helper(RESOLVE_FILTER);\\n  const i = filter.indexOf(\\\"(\\\");\\n  if (i < 0) {\\n    context.filters.add(filter);\\n    return `${toValidAssetId(filter, \\\"filter\\\")}(${exp})`;\\n  } else {\\n    const name = filter.slice(0, i);\\n    const args = filter.slice(i + 1);\\n    context.filters.add(name);\\n    return `${toValidAssetId(name, \\\"filter\\\")}(${exp}${args !== \\\")\\\" ? \\\",\\\" + args : args}`;\\n  }\\n}\\n\\nconst seen = /* @__PURE__ */ new WeakSet();\\nconst transformMemo = (node, context) => {\\n  if (node.type === 1) {\\n    const dir = findDir(node, \\\"memo\\\");\\n    if (!dir || seen.has(node)) {\\n      return;\\n    }\\n    seen.add(node);\\n    return () => {\\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\\n      if (codegenNode && codegenNode.type === 13) {\\n        if (node.tagType !== 1) {\\n          convertToBlock(codegenNode, context);\\n        }\\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\\n          dir.exp,\\n          createFunctionExpression(void 0, codegenNode),\\n          `_cache`,\\n          String(context.cached++)\\n        ]);\\n      }\\n    };\\n  }\\n};\\n\\nfunction getBaseTransformPreset(prefixIdentifiers) {\\n  return [\\n    [\\n      transformOnce,\\n      transformIf,\\n      transformMemo,\\n      transformFor,\\n      ...[transformFilter] ,\\n      ...prefixIdentifiers ? [\\n        // order is important\\n        trackVForSlotScopes,\\n        transformExpression\\n      ] : [],\\n      transformSlotOutlet,\\n      transformElement,\\n      trackSlotScopes,\\n      transformText\\n    ],\\n    {\\n      on: transformOn,\\n      bind: transformBind,\\n      model: transformModel\\n    }\\n  ];\\n}\\nfunction baseCompile(source, options = {}) {\\n  const onError = options.onError || defaultOnError;\\n  const isModuleMode = options.mode === \\\"module\\\";\\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\\n  if (!prefixIdentifiers && options.cacheHandlers) {\\n    onError(createCompilerError(49));\\n  }\\n  if (options.scopeId && !isModuleMode) {\\n    onError(createCompilerError(50));\\n  }\\n  const resolvedOptions = shared.extend({}, options, {\\n    prefixIdentifiers\\n  });\\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\\n  if (options.isTS) {\\n    const { expressionPlugins } = options;\\n    if (!expressionPlugins || !expressionPlugins.includes(\\\"typescript\\\")) {\\n      options.expressionPlugins = [...expressionPlugins || [], \\\"typescript\\\"];\\n    }\\n  }\\n  transform(\\n    ast,\\n    shared.extend({}, resolvedOptions, {\\n      nodeTransforms: [\\n        ...nodeTransforms,\\n        ...options.nodeTransforms || []\\n        // user transforms\\n      ],\\n      directiveTransforms: shared.extend(\\n        {},\\n        directiveTransforms,\\n        options.directiveTransforms || {}\\n        // user transforms\\n      )\\n    })\\n  );\\n  return generate(ast, resolvedOptions);\\n}\\n\\nconst BindingTypes = {\\n  \\\"DATA\\\": \\\"data\\\",\\n  \\\"PROPS\\\": \\\"props\\\",\\n  \\\"PROPS_ALIASED\\\": \\\"props-aliased\\\",\\n  \\\"SETUP_LET\\\": \\\"setup-let\\\",\\n  \\\"SETUP_CONST\\\": \\\"setup-const\\\",\\n  \\\"SETUP_REACTIVE_CONST\\\": \\\"setup-reactive-const\\\",\\n  \\\"SETUP_MAYBE_REF\\\": \\\"setup-maybe-ref\\\",\\n  \\\"SETUP_REF\\\": \\\"setup-ref\\\",\\n  \\\"OPTIONS\\\": \\\"options\\\",\\n  \\\"LITERAL_CONST\\\": \\\"literal-const\\\"\\n};\\n\\nconst noopDirectiveTransform = () => ({ props: [] });\\n\\nexports.generateCodeFrame = shared.generateCodeFrame;\\nexports.BASE_TRANSITION = BASE_TRANSITION;\\nexports.BindingTypes = BindingTypes;\\nexports.CAMELIZE = CAMELIZE;\\nexports.CAPITALIZE = CAPITALIZE;\\nexports.CREATE_BLOCK = CREATE_BLOCK;\\nexports.CREATE_COMMENT = CREATE_COMMENT;\\nexports.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\\nexports.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\\nexports.CREATE_SLOTS = CREATE_SLOTS;\\nexports.CREATE_STATIC = CREATE_STATIC;\\nexports.CREATE_TEXT = CREATE_TEXT;\\nexports.CREATE_VNODE = CREATE_VNODE;\\nexports.CompilerDeprecationTypes = CompilerDeprecationTypes;\\nexports.ConstantTypes = ConstantTypes;\\nexports.ElementTypes = ElementTypes;\\nexports.ErrorCodes = ErrorCodes;\\nexports.FRAGMENT = FRAGMENT;\\nexports.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\\nexports.IS_MEMO_SAME = IS_MEMO_SAME;\\nexports.IS_REF = IS_REF;\\nexports.KEEP_ALIVE = KEEP_ALIVE;\\nexports.MERGE_PROPS = MERGE_PROPS;\\nexports.NORMALIZE_CLASS = NORMALIZE_CLASS;\\nexports.NORMALIZE_PROPS = NORMALIZE_PROPS;\\nexports.NORMALIZE_STYLE = NORMALIZE_STYLE;\\nexports.Namespaces = Namespaces;\\nexports.NodeTypes = NodeTypes;\\nexports.OPEN_BLOCK = OPEN_BLOCK;\\nexports.POP_SCOPE_ID = POP_SCOPE_ID;\\nexports.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\\nexports.RENDER_LIST = RENDER_LIST;\\nexports.RENDER_SLOT = RENDER_SLOT;\\nexports.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\\nexports.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\\nexports.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\\nexports.RESOLVE_FILTER = RESOLVE_FILTER;\\nexports.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\\nexports.SUSPENSE = SUSPENSE;\\nexports.TELEPORT = TELEPORT;\\nexports.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\\nexports.TO_HANDLERS = TO_HANDLERS;\\nexports.TO_HANDLER_KEY = TO_HANDLER_KEY;\\nexports.TS_NODE_TYPES = TS_NODE_TYPES;\\nexports.UNREF = UNREF;\\nexports.WITH_CTX = WITH_CTX;\\nexports.WITH_DIRECTIVES = WITH_DIRECTIVES;\\nexports.WITH_MEMO = WITH_MEMO;\\nexports.advancePositionWithClone = advancePositionWithClone;\\nexports.advancePositionWithMutation = advancePositionWithMutation;\\nexports.assert = assert;\\nexports.baseCompile = baseCompile;\\nexports.baseParse = baseParse;\\nexports.buildDirectiveArgs = buildDirectiveArgs;\\nexports.buildProps = buildProps;\\nexports.buildSlots = buildSlots;\\nexports.checkCompatEnabled = checkCompatEnabled;\\nexports.convertToBlock = convertToBlock;\\nexports.createArrayExpression = createArrayExpression;\\nexports.createAssignmentExpression = createAssignmentExpression;\\nexports.createBlockStatement = createBlockStatement;\\nexports.createCacheExpression = createCacheExpression;\\nexports.createCallExpression = createCallExpression;\\nexports.createCompilerError = createCompilerError;\\nexports.createCompoundExpression = createCompoundExpression;\\nexports.createConditionalExpression = createConditionalExpression;\\nexports.createForLoopParams = createForLoopParams;\\nexports.createFunctionExpression = createFunctionExpression;\\nexports.createIfStatement = createIfStatement;\\nexports.createInterpolation = createInterpolation;\\nexports.createObjectExpression = createObjectExpression;\\nexports.createObjectProperty = createObjectProperty;\\nexports.createReturnStatement = createReturnStatement;\\nexports.createRoot = createRoot;\\nexports.createSequenceExpression = createSequenceExpression;\\nexports.createSimpleExpression = createSimpleExpression;\\nexports.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\\nexports.createTemplateLiteral = createTemplateLiteral;\\nexports.createTransformContext = createTransformContext;\\nexports.createVNodeCall = createVNodeCall;\\nexports.errorMessages = errorMessages;\\nexports.extractIdentifiers = extractIdentifiers;\\nexports.findDir = findDir;\\nexports.findProp = findProp;\\nexports.forAliasRE = forAliasRE;\\nexports.generate = generate;\\nexports.getBaseTransformPreset = getBaseTransformPreset;\\nexports.getConstantType = getConstantType;\\nexports.getMemoedVNodeCall = getMemoedVNodeCall;\\nexports.getVNodeBlockHelper = getVNodeBlockHelper;\\nexports.getVNodeHelper = getVNodeHelper;\\nexports.hasDynamicKeyVBind = hasDynamicKeyVBind;\\nexports.hasScopeRef = hasScopeRef;\\nexports.helperNameMap = helperNameMap;\\nexports.injectProp = injectProp;\\nexports.isCoreComponent = isCoreComponent;\\nexports.isFunctionType = isFunctionType;\\nexports.isInDestructureAssignment = isInDestructureAssignment;\\nexports.isInNewExpression = isInNewExpression;\\nexports.isMemberExpression = isMemberExpression;\\nexports.isMemberExpressionBrowser = isMemberExpressionBrowser;\\nexports.isMemberExpressionNode = isMemberExpressionNode;\\nexports.isReferencedIdentifier = isReferencedIdentifier;\\nexports.isSimpleIdentifier = isSimpleIdentifier;\\nexports.isSlotOutlet = isSlotOutlet;\\nexports.isStaticArgOf = isStaticArgOf;\\nexports.isStaticExp = isStaticExp;\\nexports.isStaticProperty = isStaticProperty;\\nexports.isStaticPropertyKey = isStaticPropertyKey;\\nexports.isTemplateNode = isTemplateNode;\\nexports.isText = isText$1;\\nexports.isVSlot = isVSlot;\\nexports.locStub = locStub;\\nexports.noopDirectiveTransform = noopDirectiveTransform;\\nexports.processExpression = processExpression;\\nexports.processFor = processFor;\\nexports.processIf = processIf;\\nexports.processSlotOutlet = processSlotOutlet;\\nexports.registerRuntimeHelpers = registerRuntimeHelpers;\\nexports.resolveComponentType = resolveComponentType;\\nexports.stringifyExpression = stringifyExpression;\\nexports.toValidAssetId = toValidAssetId;\\nexports.trackSlotScopes = trackSlotScopes;\\nexports.trackVForSlotScopes = trackVForSlotScopes;\\nexports.transform = transform;\\nexports.transformBind = transformBind;\\nexports.transformElement = transformElement;\\nexports.transformExpression = transformExpression;\\nexports.transformModel = transformModel;\\nexports.transformOn = transformOn;\\nexports.traverseNode = traverseNode;\\nexports.unwrapTSNode = unwrapTSNode;\\nexports.walkBlockDeclarations = walkBlockDeclarations;\\nexports.walkFunctionParams = walkFunctionParams;\\nexports.walkIdentifiers = walkIdentifiers;\\nexports.warnDeprecation = warnDeprecation;\\n\"],\n  \"mappings\": \"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\",\n  \"names\": [\"isComponent\", \"stack\", \"isReferenced\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1727610130917,
      "end": 1727610130917,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727610130917,
      "end": 1727610130917,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727610130917,
      "end": 1727610130917,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727610130917,
      "end": 1727610130917,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as compilerCore_cjs_prod } from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@vue+compiler-core@3.4.21/node_modules/@vue/compiler-core/dist/compiler-core.cjs.prod.js?commonjs-exports\";\nimport require$$0 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@vue+shared@3.4.21/node_modules/@vue/shared/dist/shared.cjs.prod.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/decode.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@babel+parser@7.23.9/node_modules/@babel/parser/lib/index.js?commonjs-proxy\";\nimport require$$3 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/estree-walker@2.0.2/node_modules/estree-walker/dist/umd/estree-walker.js?commonjs-proxy\";\nimport require$$4 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/source-map.js?commonjs-proxy\";\n\n\"use strict\";\n/**\n* @vue/compiler-core v3.4.21\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nObject.defineProperty(compilerCore_cjs_prod, \"__esModule\", { value: true });\nvar shared = require$$0;\nvar decode_js = require$$1;\nvar parser = require$$2;\nvar estreeWalker = require$$3;\nvar sourceMapJs = require$$4;\nconst FRAGMENT = Symbol(``);\nconst TELEPORT = Symbol(``);\nconst SUSPENSE = Symbol(``);\nconst KEEP_ALIVE = Symbol(``);\nconst BASE_TRANSITION = Symbol(``);\nconst OPEN_BLOCK = Symbol(``);\nconst CREATE_BLOCK = Symbol(``);\nconst CREATE_ELEMENT_BLOCK = Symbol(``);\nconst CREATE_VNODE = Symbol(``);\nconst CREATE_ELEMENT_VNODE = Symbol(``);\nconst CREATE_COMMENT = Symbol(``);\nconst CREATE_TEXT = Symbol(``);\nconst CREATE_STATIC = Symbol(``);\nconst RESOLVE_COMPONENT = Symbol(``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(``);\nconst RESOLVE_FILTER = Symbol(``);\nconst WITH_DIRECTIVES = Symbol(``);\nconst RENDER_LIST = Symbol(``);\nconst RENDER_SLOT = Symbol(``);\nconst CREATE_SLOTS = Symbol(``);\nconst TO_DISPLAY_STRING = Symbol(``);\nconst MERGE_PROPS = Symbol(``);\nconst NORMALIZE_CLASS = Symbol(``);\nconst NORMALIZE_STYLE = Symbol(``);\nconst NORMALIZE_PROPS = Symbol(``);\nconst GUARD_REACTIVE_PROPS = Symbol(``);\nconst TO_HANDLERS = Symbol(``);\nconst CAMELIZE = Symbol(``);\nconst CAPITALIZE = Symbol(``);\nconst TO_HANDLER_KEY = Symbol(``);\nconst SET_BLOCK_TRACKING = Symbol(``);\nconst PUSH_SCOPE_ID = Symbol(``);\nconst POP_SCOPE_ID = Symbol(``);\nconst WITH_CTX = Symbol(``);\nconst UNREF = Symbol(``);\nconst IS_REF = Symbol(``);\nconst WITH_MEMO = Symbol(``);\nconst IS_MEMO_SAME = Symbol(``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_HOIST\": 2,\n  \"2\": \"CAN_HOIST\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent2));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent: isComponent2,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: shared.isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: shared.isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent2) {\n  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent2) {\n  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack2, cbs) {\n    this.stack = stack2;\n    this.cbs = cbs;\n    this.state = 1;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.entityStart = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.inXML = false;\n    this.inVPre = false;\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new decode_js.EntityDecoder(\n        decode_js.htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c))\n      ;\n    else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? decode_js.DecodingMode.Legacy : decode_js.DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9)\n      ;\n    else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          decode_js.fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n}\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc)\n    err.loc = loc;\n  context.onWarn(err);\n}\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages)[code] + (additionalMessage || ``);\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  estreeWalker.walk(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare)\n        continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id)\n        continue;\n      onIdent(stmt.id);\n    } else if (stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\") {\n      const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n      if (variable && variable.type === \"VariableDeclaration\") {\n        for (const decl of variable.declarations) {\n          for (const id of extractIdentifiers(decl.id)) {\n            onIdent(id);\n          }\n        }\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element)\n          extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    case \"PrivateName\":\n      return false;\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    case \"LabeledStatement\":\n      return false;\n    case \"CatchClause\":\n      return false;\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    case \"ExportSpecifier\":\n      if (grandparent == null ? void 0 : grandparent.source) {\n        return false;\n      }\n      return parent.local === node;\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    case \"ImportAttribute\":\n      return false;\n    case \"JSXAttribute\":\n      return false;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    case \"MetaProperty\":\n      return false;\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst isMemberExpressionBrowser = (path) => {\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (path, context) => {\n  try {\n    let ret = parser.parseExpression(path, {\n      plugins: context.expressionPlugins\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (shared.isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly)\n        continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !shared.isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!shared.isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !shared.isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || shared.isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!shared.isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => shared.isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: shared.NO,\n  isPreTag: shared.NO,\n  isCustomElement: shared.NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: false,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decode_js.decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    var _a;\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (((_a = stack[0]) == null ? void 0 : _a.tag) === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [\"prop\"] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end)\n      return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      currentProp.modifiers.push(mod);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.indexOf(\"sync\")) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch)\n    return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 : 0\n      /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if ((lastNode == null ? void 0 : lastNode.type) === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, end + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = shared.extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = shared.extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0)\n    i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  var _a;\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || ((_a = currentOptions.isBuiltInComponent) == null ? void 0 : _a.call(currentOptions, tag)) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (\n      // :is on plain element - only treat as component in compat mode\n      p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        currentOptions,\n        p.loc\n      )\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  var _a, _b;\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = (_a = nodes[i - 1]) == null ? void 0 : _a.type;\n          const next = (_b = nodes[i + 1]) == null ? void 0 : _b.type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2) {\n        exp.ast = parser.parse(` ${content} `, options).program;\n      } else if (parseMode === 1) {\n        exp.ast = parser.parseExpression(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parser.parseExpression(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = shared.extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options == null ? void 0 : options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\nfunction hoistStatic(root, context) {\n  walk(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, context, doNotHoistNode = false) {\n  const { children } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = `-1`;\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    if (child.type === 1) {\n      const isComponent2 = child.tagType === 1;\n      if (isComponent2) {\n        context.scopes.vSlot++;\n      }\n      walk(child, context);\n      if (isComponent2) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          context,\n          child.branches[i2].children.length === 1\n        );\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && shared.isArray(node.codegenNode.children)) {\n    const hoisted = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    );\n    if (context.hmr) {\n      hoisted.content = `[...${hoisted.content}]`;\n    }\n    node.codegenNode.children = hoisted;\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\n        return 0;\n      }\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (shared.isString(child) || shared.isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !shared.isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : void 0;\n}\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic: hoistStatic2 = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = shared.NOOP,\n  isCustomElement = shared.NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = shared.EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && shared.capitalize(shared.camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic: hoistStatic2,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    cached: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: shared.NOOP,\n    addIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (shared.isString(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (shared.isString(exp))\n        exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    shared.PatchFlagNames[64];\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag + ``,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else\n    ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (shared.isString(child))\n      continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (shared.isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = shared.isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit)\n            exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\n      \"\\n\" + `  `.repeat(n),\n      0\n      /* Start */\n    );\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name))\n      _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      // @ts-expect-error it is possible to be null\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new sourceMapJs.SourceMapGenerator();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated)\n    options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1\n        /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(\n      `\n`,\n      0\n      /* Start */\n    );\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1\n        /* End */\n      );\n    } else {\n      push(\n        `const _Vue = ${VueBinding}\n`,\n        -1\n        /* End */\n      );\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(\n          `const { ${staticHelpers} } = _Vue\n`,\n          -1\n          /* End */\n        );\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1\n      /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID);\n    ast.helpers.add(POP_SCOPE_ID);\n  }\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1\n        /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1\n        /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1\n        /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1\n      /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline, helper, scopeId, mode } = context;\n  const genScopeId = scopeId != null && mode !== \"function\";\n  newline();\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    );\n    newline();\n  }\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\n      push(\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\n      );\n      genNode(exp, context);\n      if (needScopeIdWrapper) {\n        push(`)`);\n      }\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return shared.isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => shared.isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (shared.isString(node)) {\n      push(\n        node,\n        -3\n        /* Unknown */\n      );\n    } else if (shared.isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (shared.isString(node)) {\n    context.push(\n      node,\n      -3\n      /* Unknown */\n    );\n    return;\n  }\n  if (shared.isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure)\n    push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (shared.isString(child)) {\n      context.push(\n        child,\n        -3\n        /* Unknown */\n      );\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2, node);\n  } else {\n    push(`[${node.content}]`, -3, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent: isComponent2\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);\n  push(helper(callHelper) + `(`, -2, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null)\n      break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = shared.isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2, node);\n  if (shared.isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (shared.isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (shared.isString(e)) {\n      push(\n        e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"),\n        -3\n        /* Unknown */\n      );\n    } else {\n      push(\"${\");\n      if (multilines)\n        indent();\n      genNode(e, context);\n      if (multilines)\n        deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (shared.isArray(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\nconst isLiteralWhitelisted = /* @__PURE__ */ shared.makeMap(\"true,false,null,this\");\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = shared.hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return shared.genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return shared.genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  const bailConstant = constantBailRE.test(rawExp);\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = shared.isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parser.parse(source, {\n        plugins: context.expressionPlugins\n      }).program;\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced2, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      if (node2.name.startsWith(\"_filter_\")) {\n        return;\n      }\n      const needPrefix = isReferenced2 && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = bailConstant ? 0 : 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (shared.isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (shared.isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit)\n          onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      shared.PatchFlagNames[64];\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + ``,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`);\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag + ``,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            `64`,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          );\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit)\n      onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized)\n    return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i])\n      break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\n        children.splice(i, 1);\n        i--;\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + ``,\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches))\n          return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children))\n          return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent2 = node.tagType === 1;\n    let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = shared.isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent2,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n      }\n      const shouldBuildAsSlots = isComponent2 && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (patchFlag !== 0) {\n      {\n        vnodePatchFlag = String(patchFlag);\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent2,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, \"is\");\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr)\n      context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && shared.capitalize(shared.camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = shared.camelize(name);\n  const PascalName = shared.capitalize(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg)\n      mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = shared.isOn(name);\n      if (isEventHandler && (!isComponent2 || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !shared.isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && shared.isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent2 && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression(\"ref_for\", true),\n              createSimpleExpression(\"true\")\n            )\n          );\n        }\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent2) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression(\"ref_for\", true),\n            createSimpleExpression(\"true\")\n          )\n        );\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushMergeArg();\n            {\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent2 ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.includes(\"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (shared.isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!shared.isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent2) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent2) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || shared.isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp)\n    dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1)\n      propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = shared.camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = shared.camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = shared.camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        shared.toHandlerKey(shared.camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    const propName = shared.camelize(arg.content);\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc);\n    {\n      exp = dir.exp = processExpression(exp, context);\n    }\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.includes(\"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = shared.camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes(\"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.includes(\"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              `1`\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${shared.camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  }\n  if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\")\n        continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92)\n        inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92)\n        inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92)\n        inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92)\n        inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        case 39:\n          inSingle = true;\n          break;\n        case 96:\n          inTemplateString = true;\n          break;\n        case 40:\n          paren++;\n          break;\n        case 41:\n          paren--;\n          break;\n        case 91:\n          square++;\n          break;\n        case 93:\n          square--;\n          break;\n        case 123:\n          curly++;\n          break;\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \")\n            break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]);\n      }\n    };\n  }\n};\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter],\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = shared.extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = shared.isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    shared.extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: shared.extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\nconst noopDirectiveTransform = () => ({ props: [] });\nvar generateCodeFrame = compilerCore_cjs_prod.generateCodeFrame = shared.generateCodeFrame;\nvar BASE_TRANSITION_1 = compilerCore_cjs_prod.BASE_TRANSITION = BASE_TRANSITION;\nvar BindingTypes_1 = compilerCore_cjs_prod.BindingTypes = BindingTypes;\nvar CAMELIZE_1 = compilerCore_cjs_prod.CAMELIZE = CAMELIZE;\nvar CAPITALIZE_1 = compilerCore_cjs_prod.CAPITALIZE = CAPITALIZE;\nvar CREATE_BLOCK_1 = compilerCore_cjs_prod.CREATE_BLOCK = CREATE_BLOCK;\nvar CREATE_COMMENT_1 = compilerCore_cjs_prod.CREATE_COMMENT = CREATE_COMMENT;\nvar CREATE_ELEMENT_BLOCK_1 = compilerCore_cjs_prod.CREATE_ELEMENT_BLOCK = CREATE_ELEMENT_BLOCK;\nvar CREATE_ELEMENT_VNODE_1 = compilerCore_cjs_prod.CREATE_ELEMENT_VNODE = CREATE_ELEMENT_VNODE;\nvar CREATE_SLOTS_1 = compilerCore_cjs_prod.CREATE_SLOTS = CREATE_SLOTS;\nvar CREATE_STATIC_1 = compilerCore_cjs_prod.CREATE_STATIC = CREATE_STATIC;\nvar CREATE_TEXT_1 = compilerCore_cjs_prod.CREATE_TEXT = CREATE_TEXT;\nvar CREATE_VNODE_1 = compilerCore_cjs_prod.CREATE_VNODE = CREATE_VNODE;\nvar CompilerDeprecationTypes_1 = compilerCore_cjs_prod.CompilerDeprecationTypes = CompilerDeprecationTypes;\nvar ConstantTypes_1 = compilerCore_cjs_prod.ConstantTypes = ConstantTypes;\nvar ElementTypes_1 = compilerCore_cjs_prod.ElementTypes = ElementTypes;\nvar ErrorCodes_1 = compilerCore_cjs_prod.ErrorCodes = ErrorCodes;\nvar FRAGMENT_1 = compilerCore_cjs_prod.FRAGMENT = FRAGMENT;\nvar GUARD_REACTIVE_PROPS_1 = compilerCore_cjs_prod.GUARD_REACTIVE_PROPS = GUARD_REACTIVE_PROPS;\nvar IS_MEMO_SAME_1 = compilerCore_cjs_prod.IS_MEMO_SAME = IS_MEMO_SAME;\nvar IS_REF_1 = compilerCore_cjs_prod.IS_REF = IS_REF;\nvar KEEP_ALIVE_1 = compilerCore_cjs_prod.KEEP_ALIVE = KEEP_ALIVE;\nvar MERGE_PROPS_1 = compilerCore_cjs_prod.MERGE_PROPS = MERGE_PROPS;\nvar NORMALIZE_CLASS_1 = compilerCore_cjs_prod.NORMALIZE_CLASS = NORMALIZE_CLASS;\nvar NORMALIZE_PROPS_1 = compilerCore_cjs_prod.NORMALIZE_PROPS = NORMALIZE_PROPS;\nvar NORMALIZE_STYLE_1 = compilerCore_cjs_prod.NORMALIZE_STYLE = NORMALIZE_STYLE;\nvar Namespaces_1 = compilerCore_cjs_prod.Namespaces = Namespaces;\nvar NodeTypes_1 = compilerCore_cjs_prod.NodeTypes = NodeTypes;\nvar OPEN_BLOCK_1 = compilerCore_cjs_prod.OPEN_BLOCK = OPEN_BLOCK;\nvar POP_SCOPE_ID_1 = compilerCore_cjs_prod.POP_SCOPE_ID = POP_SCOPE_ID;\nvar PUSH_SCOPE_ID_1 = compilerCore_cjs_prod.PUSH_SCOPE_ID = PUSH_SCOPE_ID;\nvar RENDER_LIST_1 = compilerCore_cjs_prod.RENDER_LIST = RENDER_LIST;\nvar RENDER_SLOT_1 = compilerCore_cjs_prod.RENDER_SLOT = RENDER_SLOT;\nvar RESOLVE_COMPONENT_1 = compilerCore_cjs_prod.RESOLVE_COMPONENT = RESOLVE_COMPONENT;\nvar RESOLVE_DIRECTIVE_1 = compilerCore_cjs_prod.RESOLVE_DIRECTIVE = RESOLVE_DIRECTIVE;\nvar RESOLVE_DYNAMIC_COMPONENT_1 = compilerCore_cjs_prod.RESOLVE_DYNAMIC_COMPONENT = RESOLVE_DYNAMIC_COMPONENT;\nvar RESOLVE_FILTER_1 = compilerCore_cjs_prod.RESOLVE_FILTER = RESOLVE_FILTER;\nvar SET_BLOCK_TRACKING_1 = compilerCore_cjs_prod.SET_BLOCK_TRACKING = SET_BLOCK_TRACKING;\nvar SUSPENSE_1 = compilerCore_cjs_prod.SUSPENSE = SUSPENSE;\nvar TELEPORT_1 = compilerCore_cjs_prod.TELEPORT = TELEPORT;\nvar TO_DISPLAY_STRING_1 = compilerCore_cjs_prod.TO_DISPLAY_STRING = TO_DISPLAY_STRING;\nvar TO_HANDLERS_1 = compilerCore_cjs_prod.TO_HANDLERS = TO_HANDLERS;\nvar TO_HANDLER_KEY_1 = compilerCore_cjs_prod.TO_HANDLER_KEY = TO_HANDLER_KEY;\nvar TS_NODE_TYPES_1 = compilerCore_cjs_prod.TS_NODE_TYPES = TS_NODE_TYPES;\nvar UNREF_1 = compilerCore_cjs_prod.UNREF = UNREF;\nvar WITH_CTX_1 = compilerCore_cjs_prod.WITH_CTX = WITH_CTX;\nvar WITH_DIRECTIVES_1 = compilerCore_cjs_prod.WITH_DIRECTIVES = WITH_DIRECTIVES;\nvar WITH_MEMO_1 = compilerCore_cjs_prod.WITH_MEMO = WITH_MEMO;\nvar advancePositionWithClone_1 = compilerCore_cjs_prod.advancePositionWithClone = advancePositionWithClone;\nvar advancePositionWithMutation_1 = compilerCore_cjs_prod.advancePositionWithMutation = advancePositionWithMutation;\nvar assert_1 = compilerCore_cjs_prod.assert = assert;\nvar baseCompile_1 = compilerCore_cjs_prod.baseCompile = baseCompile;\nvar baseParse_1 = compilerCore_cjs_prod.baseParse = baseParse;\nvar buildDirectiveArgs_1 = compilerCore_cjs_prod.buildDirectiveArgs = buildDirectiveArgs;\nvar buildProps_1 = compilerCore_cjs_prod.buildProps = buildProps;\nvar buildSlots_1 = compilerCore_cjs_prod.buildSlots = buildSlots;\nvar checkCompatEnabled_1 = compilerCore_cjs_prod.checkCompatEnabled = checkCompatEnabled;\nvar convertToBlock_1 = compilerCore_cjs_prod.convertToBlock = convertToBlock;\nvar createArrayExpression_1 = compilerCore_cjs_prod.createArrayExpression = createArrayExpression;\nvar createAssignmentExpression_1 = compilerCore_cjs_prod.createAssignmentExpression = createAssignmentExpression;\nvar createBlockStatement_1 = compilerCore_cjs_prod.createBlockStatement = createBlockStatement;\nvar createCacheExpression_1 = compilerCore_cjs_prod.createCacheExpression = createCacheExpression;\nvar createCallExpression_1 = compilerCore_cjs_prod.createCallExpression = createCallExpression;\nvar createCompilerError_1 = compilerCore_cjs_prod.createCompilerError = createCompilerError;\nvar createCompoundExpression_1 = compilerCore_cjs_prod.createCompoundExpression = createCompoundExpression;\nvar createConditionalExpression_1 = compilerCore_cjs_prod.createConditionalExpression = createConditionalExpression;\nvar createForLoopParams_1 = compilerCore_cjs_prod.createForLoopParams = createForLoopParams;\nvar createFunctionExpression_1 = compilerCore_cjs_prod.createFunctionExpression = createFunctionExpression;\nvar createIfStatement_1 = compilerCore_cjs_prod.createIfStatement = createIfStatement;\nvar createInterpolation_1 = compilerCore_cjs_prod.createInterpolation = createInterpolation;\nvar createObjectExpression_1 = compilerCore_cjs_prod.createObjectExpression = createObjectExpression;\nvar createObjectProperty_1 = compilerCore_cjs_prod.createObjectProperty = createObjectProperty;\nvar createReturnStatement_1 = compilerCore_cjs_prod.createReturnStatement = createReturnStatement;\nvar createRoot_1 = compilerCore_cjs_prod.createRoot = createRoot;\nvar createSequenceExpression_1 = compilerCore_cjs_prod.createSequenceExpression = createSequenceExpression;\nvar createSimpleExpression_1 = compilerCore_cjs_prod.createSimpleExpression = createSimpleExpression;\nvar createStructuralDirectiveTransform_1 = compilerCore_cjs_prod.createStructuralDirectiveTransform = createStructuralDirectiveTransform;\nvar createTemplateLiteral_1 = compilerCore_cjs_prod.createTemplateLiteral = createTemplateLiteral;\nvar createTransformContext_1 = compilerCore_cjs_prod.createTransformContext = createTransformContext;\nvar createVNodeCall_1 = compilerCore_cjs_prod.createVNodeCall = createVNodeCall;\nvar errorMessages_1 = compilerCore_cjs_prod.errorMessages = errorMessages;\nvar extractIdentifiers_1 = compilerCore_cjs_prod.extractIdentifiers = extractIdentifiers;\nvar findDir_1 = compilerCore_cjs_prod.findDir = findDir;\nvar findProp_1 = compilerCore_cjs_prod.findProp = findProp;\nvar forAliasRE_1 = compilerCore_cjs_prod.forAliasRE = forAliasRE;\nvar generate_1 = compilerCore_cjs_prod.generate = generate;\nvar getBaseTransformPreset_1 = compilerCore_cjs_prod.getBaseTransformPreset = getBaseTransformPreset;\nvar getConstantType_1 = compilerCore_cjs_prod.getConstantType = getConstantType;\nvar getMemoedVNodeCall_1 = compilerCore_cjs_prod.getMemoedVNodeCall = getMemoedVNodeCall;\nvar getVNodeBlockHelper_1 = compilerCore_cjs_prod.getVNodeBlockHelper = getVNodeBlockHelper;\nvar getVNodeHelper_1 = compilerCore_cjs_prod.getVNodeHelper = getVNodeHelper;\nvar hasDynamicKeyVBind_1 = compilerCore_cjs_prod.hasDynamicKeyVBind = hasDynamicKeyVBind;\nvar hasScopeRef_1 = compilerCore_cjs_prod.hasScopeRef = hasScopeRef;\nvar helperNameMap_1 = compilerCore_cjs_prod.helperNameMap = helperNameMap;\nvar injectProp_1 = compilerCore_cjs_prod.injectProp = injectProp;\nvar isCoreComponent_1 = compilerCore_cjs_prod.isCoreComponent = isCoreComponent;\nvar isFunctionType_1 = compilerCore_cjs_prod.isFunctionType = isFunctionType;\nvar isInDestructureAssignment_1 = compilerCore_cjs_prod.isInDestructureAssignment = isInDestructureAssignment;\nvar isInNewExpression_1 = compilerCore_cjs_prod.isInNewExpression = isInNewExpression;\nvar isMemberExpression_1 = compilerCore_cjs_prod.isMemberExpression = isMemberExpression;\nvar isMemberExpressionBrowser_1 = compilerCore_cjs_prod.isMemberExpressionBrowser = isMemberExpressionBrowser;\nvar isMemberExpressionNode_1 = compilerCore_cjs_prod.isMemberExpressionNode = isMemberExpressionNode;\nvar isReferencedIdentifier_1 = compilerCore_cjs_prod.isReferencedIdentifier = isReferencedIdentifier;\nvar isSimpleIdentifier_1 = compilerCore_cjs_prod.isSimpleIdentifier = isSimpleIdentifier;\nvar isSlotOutlet_1 = compilerCore_cjs_prod.isSlotOutlet = isSlotOutlet;\nvar isStaticArgOf_1 = compilerCore_cjs_prod.isStaticArgOf = isStaticArgOf;\nvar isStaticExp_1 = compilerCore_cjs_prod.isStaticExp = isStaticExp;\nvar isStaticProperty_1 = compilerCore_cjs_prod.isStaticProperty = isStaticProperty;\nvar isStaticPropertyKey_1 = compilerCore_cjs_prod.isStaticPropertyKey = isStaticPropertyKey;\nvar isTemplateNode_1 = compilerCore_cjs_prod.isTemplateNode = isTemplateNode;\nvar isText_1 = compilerCore_cjs_prod.isText = isText$1;\nvar isVSlot_1 = compilerCore_cjs_prod.isVSlot = isVSlot;\nvar locStub_1 = compilerCore_cjs_prod.locStub = locStub;\nvar noopDirectiveTransform_1 = compilerCore_cjs_prod.noopDirectiveTransform = noopDirectiveTransform;\nvar processExpression_1 = compilerCore_cjs_prod.processExpression = processExpression;\nvar processFor_1 = compilerCore_cjs_prod.processFor = processFor;\nvar processIf_1 = compilerCore_cjs_prod.processIf = processIf;\nvar processSlotOutlet_1 = compilerCore_cjs_prod.processSlotOutlet = processSlotOutlet;\nvar registerRuntimeHelpers_1 = compilerCore_cjs_prod.registerRuntimeHelpers = registerRuntimeHelpers;\nvar resolveComponentType_1 = compilerCore_cjs_prod.resolveComponentType = resolveComponentType;\nvar stringifyExpression_1 = compilerCore_cjs_prod.stringifyExpression = stringifyExpression;\nvar toValidAssetId_1 = compilerCore_cjs_prod.toValidAssetId = toValidAssetId;\nvar trackSlotScopes_1 = compilerCore_cjs_prod.trackSlotScopes = trackSlotScopes;\nvar trackVForSlotScopes_1 = compilerCore_cjs_prod.trackVForSlotScopes = trackVForSlotScopes;\nvar transform_1 = compilerCore_cjs_prod.transform = transform;\nvar transformBind_1 = compilerCore_cjs_prod.transformBind = transformBind;\nvar transformElement_1 = compilerCore_cjs_prod.transformElement = transformElement;\nvar transformExpression_1 = compilerCore_cjs_prod.transformExpression = transformExpression;\nvar transformModel_1 = compilerCore_cjs_prod.transformModel = transformModel;\nvar transformOn_1 = compilerCore_cjs_prod.transformOn = transformOn;\nvar traverseNode_1 = compilerCore_cjs_prod.traverseNode = traverseNode;\nvar unwrapTSNode_1 = compilerCore_cjs_prod.unwrapTSNode = unwrapTSNode;\nvar walkBlockDeclarations_1 = compilerCore_cjs_prod.walkBlockDeclarations = walkBlockDeclarations;\nvar walkFunctionParams_1 = compilerCore_cjs_prod.walkFunctionParams = walkFunctionParams;\nvar walkIdentifiers_1 = compilerCore_cjs_prod.walkIdentifiers = walkIdentifiers;\nvar warnDeprecation_1 = compilerCore_cjs_prod.warnDeprecation = warnDeprecation;\n\nexport { compilerCore_cjs_prod as __moduleExports, generateCodeFrame, BASE_TRANSITION_1 as BASE_TRANSITION, BindingTypes_1 as BindingTypes, CAMELIZE_1 as CAMELIZE, CAPITALIZE_1 as CAPITALIZE, CREATE_BLOCK_1 as CREATE_BLOCK, CREATE_COMMENT_1 as CREATE_COMMENT, CREATE_ELEMENT_BLOCK_1 as CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE_1 as CREATE_ELEMENT_VNODE, CREATE_SLOTS_1 as CREATE_SLOTS, CREATE_STATIC_1 as CREATE_STATIC, CREATE_TEXT_1 as CREATE_TEXT, CREATE_VNODE_1 as CREATE_VNODE, CompilerDeprecationTypes_1 as CompilerDeprecationTypes, ConstantTypes_1 as ConstantTypes, ElementTypes_1 as ElementTypes, ErrorCodes_1 as ErrorCodes, FRAGMENT_1 as FRAGMENT, GUARD_REACTIVE_PROPS_1 as GUARD_REACTIVE_PROPS, IS_MEMO_SAME_1 as IS_MEMO_SAME, IS_REF_1 as IS_REF, KEEP_ALIVE_1 as KEEP_ALIVE, MERGE_PROPS_1 as MERGE_PROPS, NORMALIZE_CLASS_1 as NORMALIZE_CLASS, NORMALIZE_PROPS_1 as NORMALIZE_PROPS, NORMALIZE_STYLE_1 as NORMALIZE_STYLE, Namespaces_1 as Namespaces, NodeTypes_1 as NodeTypes, OPEN_BLOCK_1 as OPEN_BLOCK, POP_SCOPE_ID_1 as POP_SCOPE_ID, PUSH_SCOPE_ID_1 as PUSH_SCOPE_ID, RENDER_LIST_1 as RENDER_LIST, RENDER_SLOT_1 as RENDER_SLOT, RESOLVE_COMPONENT_1 as RESOLVE_COMPONENT, RESOLVE_DIRECTIVE_1 as RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT_1 as RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER_1 as RESOLVE_FILTER, SET_BLOCK_TRACKING_1 as SET_BLOCK_TRACKING, SUSPENSE_1 as SUSPENSE, TELEPORT_1 as TELEPORT, TO_DISPLAY_STRING_1 as TO_DISPLAY_STRING, TO_HANDLERS_1 as TO_HANDLERS, TO_HANDLER_KEY_1 as TO_HANDLER_KEY, TS_NODE_TYPES_1 as TS_NODE_TYPES, UNREF_1 as UNREF, WITH_CTX_1 as WITH_CTX, WITH_DIRECTIVES_1 as WITH_DIRECTIVES, WITH_MEMO_1 as WITH_MEMO, advancePositionWithClone_1 as advancePositionWithClone, advancePositionWithMutation_1 as advancePositionWithMutation, assert_1 as assert, baseCompile_1 as baseCompile, baseParse_1 as baseParse, buildDirectiveArgs_1 as buildDirectiveArgs, buildProps_1 as buildProps, buildSlots_1 as buildSlots, checkCompatEnabled_1 as checkCompatEnabled, convertToBlock_1 as convertToBlock, createArrayExpression_1 as createArrayExpression, createAssignmentExpression_1 as createAssignmentExpression, createBlockStatement_1 as createBlockStatement, createCacheExpression_1 as createCacheExpression, createCallExpression_1 as createCallExpression, createCompilerError_1 as createCompilerError, createCompoundExpression_1 as createCompoundExpression, createConditionalExpression_1 as createConditionalExpression, createForLoopParams_1 as createForLoopParams, createFunctionExpression_1 as createFunctionExpression, createIfStatement_1 as createIfStatement, createInterpolation_1 as createInterpolation, createObjectExpression_1 as createObjectExpression, createObjectProperty_1 as createObjectProperty, createReturnStatement_1 as createReturnStatement, createRoot_1 as createRoot, createSequenceExpression_1 as createSequenceExpression, createSimpleExpression_1 as createSimpleExpression, createStructuralDirectiveTransform_1 as createStructuralDirectiveTransform, createTemplateLiteral_1 as createTemplateLiteral, createTransformContext_1 as createTransformContext, createVNodeCall_1 as createVNodeCall, errorMessages_1 as errorMessages, extractIdentifiers_1 as extractIdentifiers, findDir_1 as findDir, findProp_1 as findProp, forAliasRE_1 as forAliasRE, generate_1 as generate, getBaseTransformPreset_1 as getBaseTransformPreset, getConstantType_1 as getConstantType, getMemoedVNodeCall_1 as getMemoedVNodeCall, getVNodeBlockHelper_1 as getVNodeBlockHelper, getVNodeHelper_1 as getVNodeHelper, hasDynamicKeyVBind_1 as hasDynamicKeyVBind, hasScopeRef_1 as hasScopeRef, helperNameMap_1 as helperNameMap, injectProp_1 as injectProp, isCoreComponent_1 as isCoreComponent, isFunctionType_1 as isFunctionType, isInDestructureAssignment_1 as isInDestructureAssignment, isInNewExpression_1 as isInNewExpression, isMemberExpression_1 as isMemberExpression, isMemberExpressionBrowser_1 as isMemberExpressionBrowser, isMemberExpressionNode_1 as isMemberExpressionNode, isReferencedIdentifier_1 as isReferencedIdentifier, isSimpleIdentifier_1 as isSimpleIdentifier, isSlotOutlet_1 as isSlotOutlet, isStaticArgOf_1 as isStaticArgOf, isStaticExp_1 as isStaticExp, isStaticProperty_1 as isStaticProperty, isStaticPropertyKey_1 as isStaticPropertyKey, isTemplateNode_1 as isTemplateNode, isText_1 as isText, isVSlot_1 as isVSlot, locStub_1 as locStub, noopDirectiveTransform_1 as noopDirectiveTransform, processExpression_1 as processExpression, processFor_1 as processFor, processIf_1 as processIf, processSlotOutlet_1 as processSlotOutlet, registerRuntimeHelpers_1 as registerRuntimeHelpers, resolveComponentType_1 as resolveComponentType, stringifyExpression_1 as stringifyExpression, toValidAssetId_1 as toValidAssetId, trackSlotScopes_1 as trackSlotScopes, trackVForSlotScopes_1 as trackVForSlotScopes, transform_1 as transform, transformBind_1 as transformBind, transformElement_1 as transformElement, transformExpression_1 as transformExpression, transformModel_1 as transformModel, transformOn_1 as transformOn, traverseNode_1 as traverseNode, unwrapTSNode_1 as unwrapTSNode, walkBlockDeclarations_1 as walkBlockDeclarations, walkFunctionParams_1 as walkFunctionParams, walkIdentifiers_1 as walkIdentifiers, warnDeprecation_1 as warnDeprecation, compilerCore_cjs_prod as default };",
      "start": 1727610130917,
      "end": 1727610131615,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727610131615,
      "end": 1727610131615,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727610131615,
      "end": 1727610131616,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727610131616,
      "end": 1727610131616,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727610131616,
      "end": 1727610131618,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727610131618,
      "end": 1727610131618,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727610131618,
      "end": 1727610131618,
      "order": "normal"
    }
  ]
}
