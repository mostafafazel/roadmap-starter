{
  "resolvedId": "/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/binary-search.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n",
      "start": 1727610131394,
      "end": 1727610131398,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727610131398,
      "end": 1727610131398,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/* -*- Mode: js; js-indent-level: 2; -*- */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as binarySearch } from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/binary-search.js?commonjs-exports\";\n\n(function (exports) {\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t}; \n} (binarySearch));\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(binarySearch);\nexport { binarySearch as __moduleExports };",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131399,
      "end": 1727610131399,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131399,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131399,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727610131400,
      "end": 1727610131400,
      "order": "normal"
    }
  ]
}
