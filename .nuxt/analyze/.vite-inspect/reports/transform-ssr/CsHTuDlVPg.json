{
  "resolvedId": "/Users/mamthenebo/Me/Help/fuz/roadmap-starter/composables/useDark.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export default function useDark() {\n  const colorMode = useColorMode()\n\n  function toggle(dark?: boolean): void {\n    if (colorMode.unknown) return\n\n    if (dark !== undefined) {\n      colorMode.preference = dark ? 'dark' : 'light'\n    } else {\n      colorMode.preference = colorMode.value === 'dark' ? 'light' : 'dark'\n    }\n  }\n\n  const value = computed(() => colorMode.value)\n  const isDark = computed(() => value.value === 'dark')\n  const preference = computed(() => colorMode.preference)\n\n  return { toggle, value, isDark, preference }\n}\n",
      "start": 1727610131372,
      "end": 1727610131383,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727610131383,
      "end": 1727610131383,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export default function useDark() {\n  const colorMode = useColorMode();\n  function toggle(dark) {\n    if (colorMode.unknown)\n      return;\n    if (dark !== void 0) {\n      colorMode.preference = dark ? \"dark\" : \"light\";\n    } else {\n      colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n    }\n  }\n  const value = computed(() => colorMode.value);\n  const isDark = computed(() => value.value === \"dark\");\n  const preference = computed(() => colorMode.preference);\n  return { toggle, value, isDark, preference };\n}\n",
      "start": 1727610131383,
      "end": 1727610131568,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/mamthenebo/Me/Help/fuz/roadmap-starter/composables/useDark.ts"
        ],
        "sourcesContent": [
          "export default function useDark() {\n  const colorMode = useColorMode()\n\n  function toggle(dark?: boolean): void {\n    if (colorMode.unknown) return\n\n    if (dark !== undefined) {\n      colorMode.preference = dark ? 'dark' : 'light'\n    } else {\n      colorMode.preference = colorMode.value === 'dark' ? 'light' : 'dark'\n    }\n  }\n\n  const value = computed(() => colorMode.value)\n  const isDark = computed(() => value.value === 'dark')\n  const preference = computed(() => colorMode.preference)\n\n  return { toggle, value, isDark, preference }\n}\n"
        ],
        "mappings": "AAAA,wBAAwB,UAAU;AAChC,QAAM,YAAY,aAAa;AAE/B,WAAS,OAAO,MAAsB;AACpC,QAAI,UAAU;AAAS;AAEvB,QAAI,SAAS,QAAW;AACtB,gBAAU,aAAa,OAAO,SAAS;AAAA,IACzC,OAAO;AACL,gBAAU,aAAa,UAAU,UAAU,SAAS,UAAU;AAAA,IAChE;AAAA,EACF;AAEA,QAAM,QAAQ,SAAS,MAAM,UAAU,KAAK;AAC5C,QAAM,SAAS,SAAS,MAAM,MAAM,UAAU,MAAM;AACpD,QAAM,aAAa,SAAS,MAAM,UAAU,UAAU;AAEtD,SAAO,EAAE,QAAQ,OAAO,QAAQ,WAAW;AAC7C;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131568,
      "end": 1727610131568,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131569,
      "end": 1727610131569,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useColorMode } from '/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@nuxtjs+color-mode@3.3.3_rollup@4.14.1/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { computed } from 'vue';\nexport default function useDark() {\n  const colorMode = useColorMode();\n  function toggle(dark) {\n    if (colorMode.unknown)\n      return;\n    if (dark !== void 0) {\n      colorMode.preference = dark ? \"dark\" : \"light\";\n    } else {\n      colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n    }\n  }\n  const value = computed(() => colorMode.value);\n  const isDark = computed(() => value.value === \"dark\");\n  const preference = computed(() => colorMode.preference);\n  return { toggle, value, isDark, preference };\n}\n",
      "start": 1727610131569,
      "end": 1727610131570,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACx
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useColorMode } from '/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/@nuxtjs+color-mode@3.3.3_rollup@4.14.1/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { computed } from 'vue';\nexport default function useDark() {\n  const colorMode = useColorMode();\n  function toggle(dark) {\n    if (colorMode.unknown)\n      return;\n    if (dark !== void 0) {\n      colorMode.preference = dark ? \"dark\" : \"light\";\n    } else {\n      colorMode.preference = colorMode.value === \"dark\" ? \"light\" : \"dark\";\n    }\n  }\n  const value = computed(() => colorMode.value);\n  const isDark = computed(() => value.value === \"dark\");\n  const preference = computed(() => colorMode.preference);\n  return { toggle, value, isDark, preference };\n}\n",
      "start": 1727610131569,
      "end": 1727610131570,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACx
      }
    },
    {
      "name": "unctx:transform",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727610131570,
      "end": 1727610131570,
      "order": "normal"
    }
  ]
}
