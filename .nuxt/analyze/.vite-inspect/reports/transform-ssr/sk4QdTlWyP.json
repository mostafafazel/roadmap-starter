{
  "resolvedId": "/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n",
      "start": 1727610130986,
      "end": 1727610131004,
      "sourcemaps": null
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "nuxt:fonts:font-family-injection",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727610131004,
      "end": 1727610131004,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/* -*- Mode: js; js-indent-level: 2; -*- */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as arraySet } from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/array-set.js?commonjs-exports\";\nimport require$$0 from \"\\u0000/Users/mamthenebo/Me/Help/fuz/roadmap-starter/node_modules/.pnpm/source-map-js@1.0.2/node_modules/source-map-js/lib/util.js?commonjs-proxy\";\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require$$0;\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nvar ArraySet_1 = arraySet.ArraySet = ArraySet;\n\nexport { arraySet as __moduleExports, ArraySet_1 as ArraySet, arraySet as default };",
      "start": 1727610131004,
      "end": 1727610131385,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727610131385,
      "end": 1727610131385,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727610131385,
      "end": 1727610131386,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727610131386,
      "end": 1727610131386,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727610131386,
      "end": 1727610131386,
      "order": "normal"
    }
  ]
}
